Using testPong.db

	CREATE TABLE IF NOT EXISTS users (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		username TEXT NOT NULL UNIQUE,
		email TEXT NOT NULL UNIQUE,
		password_hash TEXT,
		avatar_url TEXT DEFAULT NULL,
		online_status BOOLEAN DEFAULT FALSE,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	)

PRAGMA foreign_keys = ON

	CREATE TABLE IF NOT EXISTS players (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		display_name TEXT NOT NULL UNIQUE,
		wins INTEGER DEFAULT 0,
		losses INTEGER DEFAULT 0,
		avatar_url TEXT DEFAULT NULL,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS friends (
		user_id INTEGER,
		friend_id INTEGER,
		status TEXT DEFAULT 'pending',
		PRIMARY KEY (user_id, friend_id),
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS tournaments (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		name TEXT NOT NULL,
		status TEXT DEFAULT 'pending',
		current_round INTEGER DEFAULT 0,
		winner_id INTEGER,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id)
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)


	CREATE TABLE IF NOT EXISTS match_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		type TEXT NOT NULL,
		tournament_id INTEGER DEFAULT NULL,
		round INTEGER,
		date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS match_player_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		player_id INTEGER NOT NULL,
		score INTEGER DEFAULT 0 NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (player_id) REFERENCES players(id),
		UNIQUE (match_id, player_id)
	)


	CREATE TABLE IF NOT EXISTS match_winner_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		winner_id INTEGER NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)

TAP version 14
# Subtest: All Test
{"level":30,"time":1745838508630,"pid":282,"hostname":"k2matu.local","reqId":"req-1","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users
    # Subtest: Auth Routes Suite
        # Subtest: GET `/users` returns empty array
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/users` returns empty array # time=34.651ms
        
        # Subtest: POST `/register`
            # Subtest: returns 400 if email is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if email is missing # time=131.342ms
            
{"level":30,"time":1745838508634,"pid":282,"hostname":"k2matu.local","reqId":"req-1","res":{"statusCode":200},"responseTime":3.4694581031799316,"msg":"request completed"}
{"level":30,"time":1745838508780,"pid":282,"hostname":"k2matu.local","reqId":"req-2","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838508782,"pid":282,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'email'","stack":"Error: body must have required property 'email'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"email"},"message":"must have required property 'email'"}],"validationContext":"body"},"msg":"body must have required property 'email'"}
{"level":30,"time":1745838508783,"pid":282,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"responseTime":2.65024995803833,"msg":"request completed"}
{"level":30,"time":1745838508784,"pid":282,"hostname":"k2matu.local","reqId":"req-3","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if invalid email
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if invalid email # time=2.361ms
            
{"level":30,"time":1745838508785,"pid":282,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"err":{"type":"Error","message":"body/email must match format \"email\"","stack":"Error: body/email must match format \"email\"\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/email","schemaPath":"#/properties/email/format","keyword":"format","params":{"format":"email"},"message":"must match format \"email\""}],"validationContext":"body"},"msg":"body/email must match format \"email\""}
{"level":30,"time":1745838508786,"pid":282,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"responseTime":1.7714157104492188,"msg":"request completed"}
{"level":30,"time":1745838508786,"pid":282,"hostname":"k2matu.local","reqId":"req-4","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username < 3 chars
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - returns 400 if username < 3 chars # time=0.802ms
            
{"level":30,"time":1745838508787,"pid":282,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"err":{"type":"Error","message":"body/username must NOT have fewer than 3 characters","stack":"Error: body/username must NOT have fewer than 3 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/username","schemaPath":"#/properties/username/minLength","keyword":"minLength","params":{"limit":3},"message":"must NOT have fewer than 3 characters"}],"validationContext":"body"},"msg":"body/username must NOT have fewer than 3 characters"}
{"level":30,"time":1745838508787,"pid":282,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"responseTime":0.33266639709472656,"msg":"request completed"}
{"level":30,"time":1745838508787,"pid":282,"hostname":"k2matu.local","reqId":"req-5","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - returns 400 if username is missing # time=0.776ms
            
{"level":30,"time":1745838508788,"pid":282,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745838508788,"pid":282,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"responseTime":0.32683372497558594,"msg":"request completed"}
{"level":30,"time":1745838508788,"pid":282,"hostname":"k2matu.local","reqId":"req-6","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 5 - returns 400 if password is missing # time=0.711ms
            
            # Subtest: returns 400 if invalid password
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 6 - returns 400 if invalid password # time=0.844ms
            
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'testuse@email.com', '$2b$10$q/CC8nhskdS2DmvJUlbDvOj8r'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 1.0
            # Subtest: returns 201 if successfully created user
                ok 1 - Status code 201
                ok 2 - should be equal
SELECT * FROM users
                ok 3 - Status code 200
                ok 4 - One user in the database
                ok 5 - should be equivalent
                1..5
            ok 7 - returns 201 if successfully created user # time=81.513ms
            
{"level":30,"time":1745838508788,"pid":282,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745838508789,"pid":282,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"responseTime":0.2766251564025879,"msg":"request completed"}
{"level":30,"time":1745838508789,"pid":282,"hostname":"k2matu.local","reqId":"req-7","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838508789,"pid":282,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"err":{"type":"Error","message":"body/password must NOT have fewer than 6 characters","stack":"Error: body/password must NOT have fewer than 6 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/password","schemaPath":"#/properties/password/minLength","keyword":"minLength","params":{"limit":6},"message":"must NOT have fewer than 6 characters"}],"validationContext":"body"},"msg":"body/password must NOT have fewer than 6 characters"}
{"level":30,"time":1745838508790,"pid":282,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"responseTime":0.3960423469543457,"msg":"request completed"}
{"level":30,"time":1745838508790,"pid":282,"hostname":"k2matu.local","reqId":"req-8","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838508870,"pid":282,"hostname":"k2matu.local","reqId":"req-8","res":{"statusCode":201},"responseTime":79.51845836639404,"msg":"request completed"}
{"level":30,"time":1745838508870,"pid":282,"hostname":"k2matu.local","reqId":"req-9","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838508871,"pid":282,"hostname":"k2matu.local","reqId":"req-9","res":{"statusCode":200},"responseTime":0.38450002670288086,"msg":"request completed"}
{"level":30,"time":1745838508872,"pid":282,"hostname":"k2matu.local","reqId":"req-a","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'new@email.com', '$2b$10$UpSSjzPzoarnXWSdXhjWT.zHe'/*+28 bytes*/)
            # Subtest: returns 400 if duplicate name
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 8 - returns 400 if duplicate name # time=71.362ms
            
{"level":30,"time":1745838508942,"pid":282,"hostname":"k2matu.local","reqId":"req-a","res":{"statusCode":409},"responseTime":70.46237516403198,"msg":"request completed"}
{"level":30,"time":1745838508944,"pid":282,"hostname":"k2matu.local","reqId":"req-b","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('newuser', 'testuse@email.com', '$2b$10$M30ykTb2p291/BR893GR..ZTy'/*+28 bytes*/)
{"level":30,"time":1745838509015,"pid":282,"hostname":"k2matu.local","reqId":"req-b","res":{"statusCode":409},"responseTime":71.69954061508179,"msg":"request completed"}
            # Subtest: returns 400 if duplicate email
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 9 - returns 400 if duplicate email # time=72.526ms
            
{"level":30,"time":1745838509016,"pid":282,"hostname":"k2matu.local","reqId":"req-c","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('kim', 'kim@email.com', '$2b$10$GE4fY1Rubj4HBbXv3vJtbetle'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 2.0
{"level":30,"time":1745838509088,"pid":282,"hostname":"k2matu.local","reqId":"req-c","res":{"statusCode":201},"responseTime":71.44562482833862,"msg":"request completed"}
            # Subtest: returns 201 if successfully created another user
                ok 1 - Status code 201
                ok 2 - should be equal
                1..2
            ok 10 - returns 201 if successfully created another user # time=72.128ms
            
            1..10
        ok 2 - POST `/register` # time=451.639ms
        
{"level":30,"time":1745838509251,"pid":282,"hostname":"k2matu.local","reqId":"req-d","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/login`
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if username is missing # time=132.166ms
            
{"level":30,"time":1745838509252,"pid":282,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745838509252,"pid":282,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"responseTime":1.8245420455932617,"msg":"request completed"}
{"level":30,"time":1745838509253,"pid":282,"hostname":"k2matu.local","reqId":"req-e","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if password is missing # time=0.793ms
            
{"level":30,"time":1745838509253,"pid":282,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745838509254,"pid":282,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"responseTime":0.3244171142578125,"msg":"request completed"}
{"level":30,"time":1745838509254,"pid":282,"hostname":"k2matu.local","reqId":"req-f","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'nonexistentuser'
            # Subtest: returns 401 if user not found
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 3 - returns 401 if user not found # time=1.206ms
            
{"level":30,"time":1745838509255,"pid":282,"hostname":"k2matu.local","reqId":"req-f","res":{"statusCode":401},"responseTime":0.5114998817443848,"msg":"request completed"}
{"level":30,"time":1745838509256,"pid":282,"hostname":"k2matu.local","reqId":"req-g","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
{"level":30,"time":1745838509326,"pid":282,"hostname":"k2matu.local","reqId":"req-g","res":{"statusCode":401},"responseTime":70.71487474441528,"msg":"request completed"}
            # Subtest: returns 401 if password is incorrect
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 4 - returns 401 if password is incorrect # time=71.355ms
            
{"level":30,"time":1745838509327,"pid":282,"hostname":"k2matu.local","reqId":"req-h","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
{"level":30,"time":1745838509399,"pid":282,"hostname":"k2matu.local","reqId":"req-h","res":{"statusCode":200},"responseTime":72.08183288574219,"msg":"request completed"}
            # Subtest: returns 200 if login is successful
                ok 1 - Status code 200
                ok 2 - Token is present
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = 2.0
                ok 4 - Status code 200
                ok 5 - should be equivalent
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
            SET online_status = FALSE 
            WHERE id = 2.0 
            AND online_status = TRUE
        
                # Subtest: POST `/logout`
                    # Subtest: returns 200 if logout is successful
                        ok 1 - Status code 200
                        ok 2 - should be equal
SELECT * FROM users WHERE id = 2.0
                        ok 3 - Status code 200
                        ok 4 - should be equivalent
                        1..4
                    ok 1 - returns 200 if logout is successful # time=12.966ms
                    
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
            SET online_status = FALSE 
            WHERE id = 2.0 
            AND online_status = TRUE
        
                    # Subtest: returns 400 if user already logged out
                        ok 1 - Status code 404
                        ok 2 - should be equal
                        1..2
                    ok 2 - returns 400 if user already logged out # time=0.925ms
                    
                    1..2
                ok 6 - POST `/logout` # time=24.413ms
                
                1..6
            ok 5 - returns 200 if login is successful # time=99.157ms
            
            1..5
        ok 3 - POST `/login` # time=337.552ms
        
        1..3
    ok 1 - Auth Routes Suite # time=834.553ms
    
SELECT * FROM users
    # Subtest: User Routes Suite
        # Subtest: GET `/users` returns two users
            ok 1 - Status code 200
            ok 2 - Two user in the database
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 1 - GET `/users` returns two users # time=272.316ms
        
SELECT * FROM users WHERE id = 2.0
        # Subtest: GET `/users/:id` returns second user
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 2 - GET `/users/:id` returns second user # time=0.779ms
        
SELECT * FROM users WHERE id = 3.0
        # Subtest: GET `/users/:id` returns 404 user not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 3 - GET `/users/:id` returns 404 user not found # time=0.529ms
        
{"level":30,"time":1745838509400,"pid":282,"hostname":"k2matu.local","reqId":"req-i","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838509401,"pid":282,"hostname":"k2matu.local","reqId":"req-i","res":{"statusCode":200},"responseTime":0.5253329277038574,"msg":"request completed"}
{"level":30,"time":1745838509421,"pid":282,"hostname":"k2matu.local","reqId":"req-j","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838509423,"pid":282,"hostname":"k2matu.local","reqId":"req-j","res":{"statusCode":200},"responseTime":1.922208309173584,"msg":"request completed"}
{"level":30,"time":1745838509424,"pid":282,"hostname":"k2matu.local","reqId":"req-k","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838509424,"pid":282,"hostname":"k2matu.local","reqId":"req-k","res":{"statusCode":200},"responseTime":0.25349998474121094,"msg":"request completed"}
{"level":30,"time":1745838509425,"pid":282,"hostname":"k2matu.local","reqId":"req-l","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838509425,"pid":282,"hostname":"k2matu.local","reqId":"req-l","res":{"statusCode":404},"responseTime":0.38779211044311523,"msg":"request completed"}
{"level":30,"time":1745838509785,"pid":282,"hostname":"k2matu.local","reqId":"req-m","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838509785,"pid":282,"hostname":"k2matu.local","reqId":"req-m","res":{"statusCode":200},"responseTime":0.486875057220459,"msg":"request completed"}
{"level":30,"time":1745838509786,"pid":282,"hostname":"k2matu.local","reqId":"req-n","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838509786,"pid":282,"hostname":"k2matu.local","reqId":"req-n","res":{"statusCode":200},"responseTime":0.28749990463256836,"msg":"request completed"}
{"level":30,"time":1745838509787,"pid":282,"hostname":"k2matu.local","reqId":"req-o","req":{"method":"GET","url":"/users/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838509787,"pid":282,"hostname":"k2matu.local","reqId":"req-o","res":{"statusCode":404},"responseTime":0.1932082176208496,"msg":"request completed"}
{"level":30,"time":1745838509788,"pid":282,"hostname":"k2matu.local","reqId":"req-p","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'testuser'
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
{"level":30,"time":1745838509860,"pid":282,"hostname":"k2matu.local","reqId":"req-p","res":{"statusCode":200},"responseTime":72.73750019073486,"msg":"request completed"}
{"level":30,"time":1745838509864,"pid":282,"hostname":"k2matu.local","reqId":"req-q","req":{"method":"PUT","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: PUT `/users/:id`
            # Subtest: PUT `/users/2` returns 403 if unauthoritized
                ok 1 - Status code 403
                ok 2 - should be equal
                1..2
            ok 1 - PUT `/users/2` returns 403 if unauthoritized # time=4.032ms
            
{"level":30,"time":1745838509865,"pid":282,"hostname":"k2matu.local","reqId":"req-q","res":{"statusCode":403},"responseTime":0.6882500648498535,"msg":"request completed"}
{"level":30,"time":1745838509865,"pid":282,"hostname":"k2matu.local","reqId":"req-r","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'kim'
            # Subtest: PUT `/users/1` returns 400 if username already taken
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - PUT `/users/1` returns 400 if username already taken # time=0.988ms
            
{"level":30,"time":1745838509866,"pid":282,"hostname":"k2matu.local","reqId":"req-r","res":{"statusCode":400},"responseTime":0.526792049407959,"msg":"request completed"}
{"level":30,"time":1745838509867,"pid":282,"hostname":"k2matu.local","reqId":"req-s","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'kim@email.com'
            # Subtest: PUT `/users/1` returns 400 if email already in use
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - PUT `/users/1` returns 400 if email already in use # time=0.874ms
            
{"level":30,"time":1745838509867,"pid":282,"hostname":"k2matu.local","reqId":"req-s","res":{"statusCode":400},"responseTime":0.4404168128967285,"msg":"request completed"}
{"level":30,"time":1745838509868,"pid":282,"hostname":"k2matu.local","reqId":"req-t","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'new@email.com'

            UPDATE users
            SET username = 'testuser', password_hash = '$2b$10$q/CC8nhskdS2DmvJUlbDvOj8r'/*+28 bytes*/, email = 'new@email.com', avatar_url = NULL
            WHERE id = 1.0
        
            # Subtest: PUT `/users/1` returns 200 if email updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 4 - PUT `/users/1` returns 200 if email updated # time=2.059ms
            
{"level":30,"time":1745838509869,"pid":282,"hostname":"k2matu.local","reqId":"req-t","res":{"statusCode":200},"responseTime":1.2965826988220215,"msg":"request completed"}
{"level":30,"time":1745838509870,"pid":282,"hostname":"k2matu.local","reqId":"req-u","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'lumi'

            UPDATE users
            SET username = 'lumi', password_hash = '$2b$10$q/CC8nhskdS2DmvJUlbDvOj8r'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
            WHERE id = 1.0
        
            # Subtest: PUT `/users/1` returns 200 if username and avatar_url updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = 1.0
                ok 4 - Status code 200
                ok 5 - should be equivalent
                1..5
            ok 5 - PUT `/users/1` returns 200 if username and avatar_url updated # time=2.621ms
            
{"level":30,"time":1745838509871,"pid":282,"hostname":"k2matu.local","reqId":"req-u","res":{"statusCode":200},"responseTime":1.3141660690307617,"msg":"request completed"}
{"level":30,"time":1745838509872,"pid":282,"hostname":"k2matu.local","reqId":"req-v","req":{"method":"GET","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838509872,"pid":282,"hostname":"k2matu.local","reqId":"req-v","res":{"statusCode":200},"responseTime":0.2874159812927246,"msg":"request completed"}
{"level":30,"time":1745838509873,"pid":282,"hostname":"k2matu.local","reqId":"req-w","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0

            UPDATE users
            SET username = 'lumi', password_hash = '$2b$10$2.dkjCQxaEi6n0peMt0CBOrX1'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
            WHERE id = 1.0
        
{"level":30,"time":1745838509945,"pid":282,"hostname":"k2matu.local","reqId":"req-w","res":{"statusCode":200},"responseTime":71.74941730499268,"msg":"request completed"}
            # Subtest: PUT `/users/1` returns 200 if password updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
{"level":30,"time":1745838509945,"pid":282,"hostname":"k2matu.local","reqId":"req-x","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
{"level":30,"time":1745838510015,"pid":282,"hostname":"k2matu.local","reqId":"req-x","res":{"statusCode":401},"responseTime":69.96175003051758,"msg":"request completed"}
                ok 4 - Status code 401
                ok 5 - should be equal
{"level":30,"time":1745838510016,"pid":282,"hostname":"k2matu.local","reqId":"req-y","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
{"level":30,"time":1745838510086,"pid":282,"hostname":"k2matu.local","reqId":"req-y","res":{"statusCode":200},"responseTime":70.36724996566772,"msg":"request completed"}
                ok 6 - Token is present
                ok 7 - Status code 200
                ok 8 - should be equivalent
                1..8
            ok 6 - PUT `/users/1` returns 200 if password updated # time=213.811ms
            
            1..6
        ok 4 - PUT `/users/:id` # time=299.198ms
        
        1..4
    ok 2 - User Routes Suite # time=660.1ms
    
{"level":30,"time":1745838510087,"pid":282,"hostname":"k2matu.local","reqId":"req-z","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
{"level":30,"time":1745838510158,"pid":282,"hostname":"k2matu.local","reqId":"req-z","res":{"statusCode":200},"responseTime":70.56500005722046,"msg":"request completed"}

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
    # Subtest: POST `/login`
        # Subtest: GET `/friends` returns 404 when no friends found for user
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 1 - GET `/friends` returns 404 when no friends found for user # time=6.722ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
        # Subtest: PATCH `/friends-requests/2` returns 404 when friend request not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 2 - PATCH `/friends-requests/2` returns 404 when friend request not found # time=0.982ms
        
        # Subtest: POST `/friend-requests/:id`
            # Subtest: POST `/friend-requests/1` returns 400 when request to itself
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - POST `/friend-requests/1` returns 400 when request to itself # time=41.806ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 0.0 AND friend_id = 1.0
            OR friend_id = 0.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 0.0)
        
SqliteError: FOREIGN KEY constraint failed
    at Object.sendFriendRequest [90m(file:///Users/kale/Desktop/check/backend/[39mcontrollers/friendController.js:80:12[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m {
  code: [32m'SQLITE_CONSTRAINT_FOREIGNKEY'[39m
}
            # Subtest: POST `/friend-requests/0` returns 500 when invalid id
                ok 1 - Status code 500
                ok 2 - should be equal
                1..2
            ok 2 - POST `/friend-requests/0` returns 500 when invalid id # time=3.456ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
            # Subtest: POST `/friend-requests/2` returns 200 when successfully sent
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 3 - POST `/friend-requests/2` returns 200 when successfully sent # time=1.85ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        
            # Subtest: POST `/friend-requests/2` returns 409 when friend request already exists
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 4 - POST `/friend-requests/2` returns 409 when friend request already exists # time=0.871ms
            
            1..4
        ok 3 - POST `/friend-requests/:id` # time=62.388ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 6.0) OR (user_id = 6.0 AND friend_id = 1.0)
        
        # Subtest: GET `/friends/:id/status`
            # Subtest: GET `/friends/:id/status` returns 404 when friend not found
                ok 1 - Status code 404
                ok 2 - should be equal
                1..2
            ok 1 - GET `/friends/:id/status` returns 404 when friend not found # time=34.714ms
            

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
            # Subtest: GET `/friends/:id/status` returns 400 when friend request pending
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - GET `/friends/:id/status` returns 400 when friend request pending # time=0.702ms
            
            1..2
        ok 4 - GET `/friends/:id/status` # time=69.358ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friends-requests/2` returns 400 waiting for friend to accept request
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 5 - PATCH `/friends-requests/2` returns 400 waiting for friend to accept request # time=0.77ms
        
{"level":30,"time":1745838510165,"pid":282,"hostname":"k2matu.local","reqId":"req-10","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510165,"pid":282,"hostname":"k2matu.local","reqId":"req-10","res":{"statusCode":404},"responseTime":0.4775829315185547,"msg":"request completed"}
{"level":30,"time":1745838510166,"pid":282,"hostname":"k2matu.local","reqId":"req-11","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510166,"pid":282,"hostname":"k2matu.local","reqId":"req-11","res":{"statusCode":404},"responseTime":0.4820418357849121,"msg":"request completed"}
{"level":30,"time":1745838510221,"pid":282,"hostname":"k2matu.local","reqId":"req-12","req":{"method":"POST","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510222,"pid":282,"hostname":"k2matu.local","reqId":"req-12","res":{"statusCode":400},"responseTime":0.399749755859375,"msg":"request completed"}
{"level":30,"time":1745838510222,"pid":282,"hostname":"k2matu.local","reqId":"req-13","req":{"method":"POST","url":"/friend-requests/0","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510225,"pid":282,"hostname":"k2matu.local","reqId":"req-13","res":{"statusCode":500},"responseTime":2.8329577445983887,"msg":"request completed"}
{"level":30,"time":1745838510226,"pid":282,"hostname":"k2matu.local","reqId":"req-14","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510227,"pid":282,"hostname":"k2matu.local","reqId":"req-14","res":{"statusCode":200},"responseTime":1.0974578857421875,"msg":"request completed"}
{"level":30,"time":1745838510228,"pid":282,"hostname":"k2matu.local","reqId":"req-15","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510229,"pid":282,"hostname":"k2matu.local","reqId":"req-15","res":{"statusCode":409},"responseTime":0.4282088279724121,"msg":"request completed"}
{"level":30,"time":1745838510296,"pid":282,"hostname":"k2matu.local","reqId":"req-16","req":{"method":"GET","url":"/friends/6/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510297,"pid":282,"hostname":"k2matu.local","reqId":"req-16","res":{"statusCode":404},"responseTime":0.611875057220459,"msg":"request completed"}
{"level":30,"time":1745838510298,"pid":282,"hostname":"k2matu.local","reqId":"req-17","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510298,"pid":282,"hostname":"k2matu.local","reqId":"req-17","res":{"statusCode":400},"responseTime":0.27870798110961914,"msg":"request completed"}
{"level":30,"time":1745838510299,"pid":282,"hostname":"k2matu.local","reqId":"req-18","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510299,"pid":282,"hostname":"k2matu.local","reqId":"req-18","res":{"statusCode":400},"responseTime":0.259458065032959,"msg":"request completed"}
{"level":30,"time":1745838510300,"pid":282,"hostname":"k2matu.local","reqId":"req-19","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
{"level":30,"time":1745838510372,"pid":282,"hostname":"k2matu.local","reqId":"req-19","res":{"statusCode":200},"responseTime":71.9939169883728,"msg":"request completed"}
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0

            UPDATE friends 
            SET status = 'accepted' 
            WHERE user_id = 1.0 AND friend_id = 2.0
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
        # Subtest: PATCH `/friends-requests/2` returns 200 accept friend request
            ok 1 - Status code 200
            ok 2 - should be equal
            ok 3 - should be equivalent
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
            # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - PATCH `/friend-requests/2` returns 400 when already friends # time=0.785ms
            
            1..4
        ok 6 - PATCH `/friends-requests/2` returns 200 accept friend request # time=75.419ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 7 - PATCH `/friend-requests/2` returns 400 when already friends # time=0.616ms
        

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        
        # Subtest: POST `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 8 - POST `/friend-requests/2` returns 400 when already friends # time=0.586ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        

            SELECT username, online_status FROM users 
            WHERE id = 2.0
        
        # Subtest: GET `/friends/:id/status` returns 200 when already friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 9 - GET `/friends/:id/status` returns 200 when already friends # time=0.813ms
        

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
        # Subtest: GET `/friends` returns 200 returning all friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 10 - GET `/friends` returns 200 returning all friends # time=0.7ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 4.0) OR (user_id = 4.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 404 when unauthorized action
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 11 - DELETE `/friends/:id` returns 404 when unauthorized action # time=0.663ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 200 when friend removed
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 12 - DELETE `/friends/:id` returns 200 when friend removed # time=1.197ms
        
        1..12
    ok 3 - POST `/login` # time=293.386ms
    
{"level":30,"time":1745838510372,"pid":282,"hostname":"k2matu.local","reqId":"req-1a","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510373,"pid":282,"hostname":"k2matu.local","reqId":"req-1a","res":{"statusCode":200},"responseTime":1.026707649230957,"msg":"request completed"}
{"level":30,"time":1745838510374,"pid":282,"hostname":"k2matu.local","reqId":"req-1b","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510374,"pid":282,"hostname":"k2matu.local","reqId":"req-1b","res":{"statusCode":400},"responseTime":0.3521246910095215,"msg":"request completed"}
{"level":30,"time":1745838510375,"pid":282,"hostname":"k2matu.local","reqId":"req-1c","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510375,"pid":282,"hostname":"k2matu.local","reqId":"req-1c","res":{"statusCode":400},"responseTime":0.24437475204467773,"msg":"request completed"}
{"level":30,"time":1745838510376,"pid":282,"hostname":"k2matu.local","reqId":"req-1d","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510376,"pid":282,"hostname":"k2matu.local","reqId":"req-1d","res":{"statusCode":400},"responseTime":0.2481250762939453,"msg":"request completed"}
{"level":30,"time":1745838510376,"pid":282,"hostname":"k2matu.local","reqId":"req-1e","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510377,"pid":282,"hostname":"k2matu.local","reqId":"req-1e","res":{"statusCode":200},"responseTime":0.42475032806396484,"msg":"request completed"}
{"level":30,"time":1745838510377,"pid":282,"hostname":"k2matu.local","reqId":"req-1f","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510378,"pid":282,"hostname":"k2matu.local","reqId":"req-1f","res":{"statusCode":200},"responseTime":0.3267092704772949,"msg":"request completed"}
{"level":30,"time":1745838510378,"pid":282,"hostname":"k2matu.local","reqId":"req-1g","req":{"method":"DELETE","url":"/friends/4","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510379,"pid":282,"hostname":"k2matu.local","reqId":"req-1g","res":{"statusCode":404},"responseTime":0.3479170799255371,"msg":"request completed"}
{"level":30,"time":1745838510379,"pid":282,"hostname":"k2matu.local","reqId":"req-1h","req":{"method":"DELETE","url":"/friends/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510380,"pid":282,"hostname":"k2matu.local","reqId":"req-1h","res":{"statusCode":200},"responseTime":0.8136248588562012,"msg":"request completed"}
{"level":30,"time":1745838510381,"pid":282,"hostname":"k2matu.local","reqId":"req-1i","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
{"level":30,"time":1745838510453,"pid":282,"hostname":"k2matu.local","reqId":"req-1i","res":{"statusCode":200},"responseTime":72.09187507629395,"msg":"request completed"}
{"level":30,"time":1745838510453,"pid":282,"hostname":"k2matu.local","reqId":"req-1j","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
{"level":30,"time":1745838510523,"pid":282,"hostname":"k2matu.local","reqId":"req-1j","res":{"statusCode":200},"responseTime":69.81237459182739,"msg":"request completed"}
SELECT * FROM players WHERE user_id = 2.0
    # Subtest: POST `/login`
        # Subtest: GET `/players` returns 404 when no players found for user
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 1 - GET `/players` returns 404 when no players found for user # time=8.365ms
        
{"level":30,"time":1745838510531,"pid":282,"hostname":"k2matu.local","reqId":"req-1k","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510532,"pid":282,"hostname":"k2matu.local","reqId":"req-1k","res":{"statusCode":404},"responseTime":0.485166072845459,"msg":"request completed"}
{"level":30,"time":1745838510532,"pid":282,"hostname":"k2matu.local","reqId":"req-1l","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 1.0
        # Subtest: POST `/players` returns 201 on successful creation
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 2 - POST `/players` returns 201 on successful creation # time=1.956ms
        
{"level":30,"time":1745838510534,"pid":282,"hostname":"k2matu.local","reqId":"req-1l","res":{"statusCode":201},"responseTime":1.4225001335144043,"msg":"request completed"}
{"level":30,"time":1745838510534,"pid":282,"hostname":"k2matu.local","reqId":"req-1m","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
        # Subtest: POST `/players` returns 409 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 3 - POST `/players` returns 409 for duplicate display_name # time=0.786ms
        
{"level":30,"time":1745838510535,"pid":282,"hostname":"k2matu.local","reqId":"req-1m","res":{"statusCode":409},"responseTime":0.45041656494140625,"msg":"request completed"}
{"level":30,"time":1745838510535,"pid":282,"hostname":"k2matu.local","reqId":"req-1n","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player2', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 2.0
{"level":30,"time":1745838510536,"pid":282,"hostname":"k2matu.local","reqId":"req-1n","res":{"statusCode":201},"responseTime":0.9912919998168945,"msg":"request completed"}
{"level":30,"time":1745838510536,"pid":282,"hostname":"k2matu.local","reqId":"req-1o","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player3', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 3.0
{"level":30,"time":1745838510537,"pid":282,"hostname":"k2matu.local","reqId":"req-1o","res":{"statusCode":201},"responseTime":0.853874683380127,"msg":"request completed"}
{"level":30,"time":1745838510537,"pid":282,"hostname":"k2matu.local","reqId":"req-1p","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player4', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 4.0
{"level":30,"time":1745838510538,"pid":282,"hostname":"k2matu.local","reqId":"req-1p","res":{"statusCode":201},"responseTime":0.8804159164428711,"msg":"request completed"}
{"level":30,"time":1745838510538,"pid":282,"hostname":"k2matu.local","reqId":"req-1q","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player5', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 5.0
{"level":30,"time":1745838510539,"pid":282,"hostname":"k2matu.local","reqId":"req-1q","res":{"statusCode":201},"responseTime":0.9332079887390137,"msg":"request completed"}
{"level":30,"time":1745838510539,"pid":282,"hostname":"k2matu.local","reqId":"req-1r","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player6', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 6.0
{"level":30,"time":1745838510540,"pid":282,"hostname":"k2matu.local","reqId":"req-1r","res":{"statusCode":201},"responseTime":0.9056668281555176,"msg":"request completed"}
{"level":30,"time":1745838510540,"pid":282,"hostname":"k2matu.local","reqId":"req-1s","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player7', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 7.0
{"level":30,"time":1745838510541,"pid":282,"hostname":"k2matu.local","reqId":"req-1s","res":{"statusCode":201},"responseTime":0.8387918472290039,"msg":"request completed"}
{"level":30,"time":1745838510541,"pid":282,"hostname":"k2matu.local","reqId":"req-1t","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player8', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 8.0
{"level":30,"time":1745838510542,"pid":282,"hostname":"k2matu.local","reqId":"req-1t","res":{"statusCode":201},"responseTime":0.9626660346984863,"msg":"request completed"}
{"level":30,"time":1745838510542,"pid":282,"hostname":"k2matu.local","reqId":"req-1u","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
        # Subtest: POST `/players` returns 400 when max players limit is reached
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 4 - POST `/players` returns 400 when max players limit is reached # time=7.958ms
        
SELECT * FROM players WHERE id = 8.0 AND user_id = 1.0
        # Subtest: GET `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 5 - GET `/players/:id` returns 404 when unauthorized # time=0.742ms
        
SELECT * FROM players WHERE id = 100.0 AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 6 - GET `/players/:id` returns 404 when player does not exist # time=0.535ms
        
SELECT * FROM players WHERE id = 8.0 AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 200 with valid data
            ok 1 - should be equal
            ok 2 - should be equivalent
            1..2
        ok 7 - GET `/players/:id` returns 200 with valid data # time=0.782ms
        
DELETE FROM players WHERE id = 3.0 AND user_id = 1.0
        # Subtest: DELETE `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 8 - DELETE `/players/:id` returns 404 when unauthorized # time=1.042ms
        
DELETE FROM players WHERE id = 100.0 AND user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 9 - DELETE `/players/:id` returns 404 when player does not exist # time=0.691ms
        
DELETE FROM players WHERE id = 3.0 AND user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 200 on success
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 10 - DELETE `/players/:id` returns 200 on success # time=1.256ms
        
SELECT * FROM players WHERE user_id = 2.0
        # Subtest: GET `/players` returns remaining players
            ok 1 - should be equal
            ok 2 - should be equivalent
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 11 - GET `/players` returns remaining players # time=1.087ms
        
{"level":30,"time":1745838510543,"pid":282,"hostname":"k2matu.local","reqId":"req-1u","res":{"statusCode":400},"responseTime":0.3289170265197754,"msg":"request completed"}
{"level":30,"time":1745838510543,"pid":282,"hostname":"k2matu.local","reqId":"req-1v","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510544,"pid":282,"hostname":"k2matu.local","reqId":"req-1v","res":{"statusCode":404},"responseTime":0.36458396911621094,"msg":"request completed"}
{"level":30,"time":1745838510544,"pid":282,"hostname":"k2matu.local","reqId":"req-1w","req":{"method":"GET","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510544,"pid":282,"hostname":"k2matu.local","reqId":"req-1w","res":{"statusCode":404},"responseTime":0.22720766067504883,"msg":"request completed"}
{"level":30,"time":1745838510545,"pid":282,"hostname":"k2matu.local","reqId":"req-1x","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510545,"pid":282,"hostname":"k2matu.local","reqId":"req-1x","res":{"statusCode":200},"responseTime":0.3527088165283203,"msg":"request completed"}
{"level":30,"time":1745838510546,"pid":282,"hostname":"k2matu.local","reqId":"req-1y","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510546,"pid":282,"hostname":"k2matu.local","reqId":"req-1y","res":{"statusCode":404},"responseTime":0.5528745651245117,"msg":"request completed"}
{"level":30,"time":1745838510547,"pid":282,"hostname":"k2matu.local","reqId":"req-1z","req":{"method":"DELETE","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510547,"pid":282,"hostname":"k2matu.local","reqId":"req-1z","res":{"statusCode":404},"responseTime":0.31537532806396484,"msg":"request completed"}
{"level":30,"time":1745838510548,"pid":282,"hostname":"k2matu.local","reqId":"req-20","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510549,"pid":282,"hostname":"k2matu.local","reqId":"req-20","res":{"statusCode":200},"responseTime":0.850250244140625,"msg":"request completed"}
{"level":30,"time":1745838510549,"pid":282,"hostname":"k2matu.local","reqId":"req-21","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510550,"pid":282,"hostname":"k2matu.local","reqId":"req-21","res":{"statusCode":200},"responseTime":0.44395780SELECT * FROM players WHERE id = 1.0 AND user_id = 1.0
        # Subtest: PUT `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 12 - PUT `/players/:id` returns 404 when unauthorized # time=2.689ms
        
SELECT * FROM players WHERE id = 100.0 AND user_id = 2.0
        # Subtest: PUT `/players/:id` returns 404 for invalid id
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 13 - PUT `/players/:id` returns 404 for invalid id # time=0.645ms
        
SELECT * FROM players WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM players WHERE display_name = 'Player7'
        # Subtest: PUT `/players/:id` returns 400 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 14 - PUT `/players/:id` returns 400 for duplicate display_name # time=0.636ms
        
SELECT * FROM players WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM players WHERE display_name = 'updatedPlayer'
UPDATE players SET display_name = 'updatedPlayer', avatar_url = 'notnull.com' WHERE id = 1.0
        # Subtest: PUT `/players/:id` returns 200 when update is successful
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 15 - PUT `/players/:id` returns 200 when update is successful # time=1.48ms
        
        1..15
    ok 4 - POST `/login` # time=175.713ms
    
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
SELECT * FROM users WHERE username = 'lumi'
56335449,"msg":"request completed"}
{"level":30,"time":1745838510550,"pid":282,"hostname":"k2matu.local","reqId":"req-22","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510553,"pid":282,"hostname":"k2matu.local","reqId":"req-22","res":{"statusCode":404},"responseTime":2.3067922592163086,"msg":"request completed"}
{"level":30,"time":1745838510553,"pid":282,"hostname":"k2matu.local","reqId":"req-23","req":{"method":"PUT","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510553,"pid":282,"hostname":"k2matu.local","reqId":"req-23","res":{"statusCode":404},"responseTime":0.35091733932495117,"msg":"request completed"}
{"level":30,"time":1745838510554,"pid":282,"hostname":"k2matu.local","reqId":"req-24","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510554,"pid":282,"hostname":"k2matu.local","reqId":"req-24","res":{"statusCode":400},"responseTime":0.3619999885559082,"msg":"request completed"}
{"level":30,"time":1745838510554,"pid":282,"hostname":"k2matu.local","reqId":"req-25","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510556,"pid":282,"hostname":"k2matu.local","reqId":"req-25","res":{"statusCode":200},"responseTime":1.0665416717529297,"msg":"request completed"}
{"level":30,"time":1745838510556,"pid":282,"hostname":"k2matu.local","reqId":"req-26","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510628,"pid":282,"hostname":"k2matu.local","reqId":"req-26","res":{"statusCode":200},"responseTime":71.87400007247925,"msg":"request completed"}
{"level":30,"time":1745838510628,"pid":282,"hostname":"k2matu.local","reqId":"req-27","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
        
    # Subtest: POST `/login` - Login as kim
        # Subtest: GET `/match-histories` returns 200 with empty array when no matches found for user
            ok 1 - Status code should be 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/match-histories` returns 200 with empty array when no matches found for user # time=7.859ms
        
{"level":30,"time":1745838510700,"pid":282,"hostname":"k2matu.local","reqId":"req-27","res":{"statusCode":200},"responseTime":71.1556248664856,"msg":"request completed"}
{"level":30,"time":1745838510707,"pid":282,"hostname":"k2matu.local","reqId":"req-28","req":{"method":"GET","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510708,"pid":282,"hostname":"k2matu.local","reqId":"req-28","res":{"statusCode":200},"responseTime":0.42812538146972656,"msg":"request completed"}
{"level":30,"time":1745838510708,"pid":282,"hostname":"k2matu.local","reqId":"req-29","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/match-histories` returns 400 when missing one player
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 2 - POST `/match-histories` returns 400 when missing one player # time=1.288ms
        
{"level":30,"time":1745838510709,"pid":282,"hostname":"k2matu.local","reqId":"req-29","res":{"statusCode":400},"responseTime":0.7812919616699219,"msg":"request completed"}
{"level":30,"time":1745838510710,"pid":282,"hostname":"k2matu.local","reqId":"req-2a","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 100.0)
    
ROLLBACK
        # Subtest: POST `/match-histories` returns 500 when player does not exist
            ok 1 - Status code should be 500
            ok 2 - should be equal
            1..2
        ok 3 - POST `/match-histories` returns 500 when player does not exist # time=2.536ms
        
{"level":30,"time":1745838510712,"pid":282,"hostname":"k2matu.local","reqId":"req-2a","res":{"statusCode":500},"responseTime":2.0394997596740723,"msg":"request completed"}
{"level":30,"time":1745838510712,"pid":282,"hostname":"k2matu.local","reqId":"req-2b","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 1.0)
    

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 2.0)
    
COMMIT
        # Subtest: POST `/match-histories` returns 201 when match is successfully created
            ok 1 - Status code should be 201
            ok 2 - should be equal
            1..2
        ok 4 - POST `/match-histories` returns 201 when match is successfully created # time=1.658ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = 200.0
        
        # Subtest: GET `/match-histories/200` returns 404 when match is not found
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 5 - GET `/match-histories/200` returns 404 when match is not found # time=0.872ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = 1.0
        
        # Subtest: GET `/match-histories/1` returns 200 for an existing match
            ok 1 - Status code should be 200
            ok 2 - should be equivalent
            1..2
        ok 6 - GET `/match-histories/1` returns 200 for an existing match # time=0.95ms
        
{"level":30,"time":1745838510714,"pid":282,"hostname":"k2matu.local","reqId":"req-2b","res":{"statusCode":201},"responseTime":1.208916187286377,"msg":"request completed"}
{"level":30,"time":1745838510714,"pid":282,"hostname":"k2matu.local","reqId":"req-2c","req":{"method":"GET","url":"/match-histories/200","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510715,"pid":282,"hostname":"k2matu.local","reqId":"req-2c","res":{"statusCode":404},"responseTime":0.45445823669433594,"msg":"request completed"}
{"level":30,"time":1745838510715,"pid":282,"hostname":"k2matu.local","reqId":"req-2d","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510716,"pid":282,"hostname":"k2matu.local","reqId":"req-2d","res":{"statusCode":200},"responseTime":0.4081249237060547,"msg":"request completed"}
{"level":30,"time":1745838510716,"pid":282,"hostname":"k2matu.local","reqId":"req-2e","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 1.0
        # Subtest: PUT /match-histories/:id returns 403 when unauthorized to update
            ok 1 - Status code should be 403
            ok 2 - should be equal
            1..2
        ok 7 - PUT /match-histories/:id returns 403 when unauthorized to update # time=1.159ms
        
SELECT * FROM match_history WHERE id = 100.0 AND user_id = 2.0
        # Subtest: PUT /match-histories/:id returns 403 when match not found
            ok 1 - Status code should be 403
            ok 2 - should be equal
            1..2
        ok 8 - PUT /match-histories/:id returns 403 when match not found # time=0.618ms
        
        # Subtest: PUT /match-histories/:id returns 400 when score is missing
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 9 - PUT /match-histories/:id returns 400 when score is missing # time=0.7ms
        
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 1.0 AND player_id = 1.0
    
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 4.0
COMMIT
        # Subtest: PUT /match-histories/:id returns 404 when player not in match
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 10 - PUT /match-histories/:id returns 404 when player not in match # time=1.806ms
        
        # Subtest: PUT /match-histories/:id returns 400 when winner is not part of the players
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 11 - PUT /match-histories/:id returns 400 when winner is not part of the players # time=0.565ms
        
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 1.0 AND player_id = 1.0
    
UPDATE players SET losses = losses + 1 WHERE id = 1.0
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 2.0

        UPDATE match_player_history SET score = 3.0 WHERE match_id = 1.0 AND player_id = 2.0
    
SELECT * FROM match_winner_history WHERE match_id = 1.0 AND winner_id = 2.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES (1.0, 2.0)
UPDATE players SET wins = wins + 1 WHERE id = 2.0
COMMIT
        # Subtest: PUT /match-histories/:id returns 200 on success
            ok 1 - Status code should be 200
            ok 2 - should be equal

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = 1.0
        
            ok 3 - should be equivalent
            1..3
        ok 12 - PUT /match-histories/:id returns 200 on success # time=2.731ms
        
DELETE FROM match_history WHERE id = 1.0 AND user_id = 1.0
        # Subtest: DELETE /match-histories/:id returns 404 when unauthorized
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 13 - DELETE /match-histories/:id returns 404 when unauthorized # time=0.901ms
        
DELETE FROM match_history WHERE id = 100.0 AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 404 when match does not exist
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 14 - DELETE /match-histories/:id returns 404 when match does not exist # time=0.592ms
        
DELETE FROM match_history WHERE id = 1.0 AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 200 on success
            ok 1 - Status code should be 200
            ok 2 - should be equal
            1..2
        ok 15 - DELETE /match-histories/:id returns 200 on success # time=1.112ms
        
        1..15
    ok 5 - POST `/login` - Login as kim # time=171.266ms
    

            SELECT
                t.id AS tournament_id,
                t.name,
                t.status,
                t.current_round,
                t.winner_id,
                mh.id as match_id,
                mh.type,
                mh.date,
                mh.round,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            JOIN tournaments t ON t.id = mh.tournament_id
        
    # Subtest: GET `/tournaments` returns 404 when no tournament exist
        ok 1 - Status code 404
        ok 2 - should be equivalent
        1..2
    ok 6 - GET `/tournaments` returns 404 when no tournament exist # time=0.778ms
    
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
SELECT * FROM users WHERE username = 'lumi'
{"level":30,"time":1745838510717,"pid":282,"hostname":"k2matu.local","reqId":"req-2e","res":{"statusCode":403},"responseTime":0.8207077980041504,"msg":"request completed"}
{"level":30,"time":1745838510718,"pid":282,"hostname":"k2matu.local","reqId":"req-2f","req":{"method":"PUT","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
DELETE FROM 'players'
DELETE FROM sqlite_sequence WHERE name='players'
DELETE FROM 'match_history'
DELETE FROM sqlite_sequence WHERE name='match_history'
{"level":30,"time":1745838510718,"pid":282,"hostname":"k2matu.local","reqId":"req-2f","res":{"statusCode":403},"responseTime":0.3299999237060547,"msg":"request completed"}
{"level":30,"time":1745838510718,"pid":282,"hostname":"k2matu.local","reqId":"req-2g","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510718,"pid":282,"hostname":"k2matu.local","reqId":"req-2g","res":{"statusCode":400},"err":{"type":"Error","message":"body/players/1 must have required property 'score'","stack":"Error: body/players/1 must have required property 'score'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/players/1","schemaPath":"#/properties/players/items/required","keyword":"required","params":{"missingProperty":"score"},"message":"must have required property 'score'"}],"validationContext":"body"},"msg":"body/players/1 must have required property 'score'"}
{"level":30,"time":1745838510719,"pid":282,"hostname":"k2matu.local","reqId":"req-2g","res":{"statusCode":400},"responseTime":0.4255828857421875,"msg":"request completed"}
{"level":30,"time":1745838510719,"pid":282,"hostname":"k2matu.local","reqId":"req-2h","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510720,"pid":282,"hostname":"k2matu.local","reqId":"req-2h","res":{"statusCode":404},"responseTime":0.7409582138061523,"msg":"request completed"}
{"level":40,"time":1745838510720,"pid":282,"hostname":"k2matu.local","reqId":"req-2h","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.updateMatchHistory (file:///Users/kale/Desktop/check/backend/controllers/matchHistoryController.js:184:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?"}
{"level":30,"time":1745838510721,"pid":282,"hostname":"k2matu.local","reqId":"req-2i","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510721,"pid":282,"hostname":"k2matu.local","reqId":"req-2i","res":{"statusCode":400},"responseTime":0.23879194259643555,"msg":"request completed"}
{"level":30,"time":1745838510722,"pid":282,"hostname":"k2matu.local","reqId":"req-2j","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510723,"pid":282,"hostname":"k2matu.local","reqId":"req-2j","res":{"statusCode":200},"responseTime":1.6288328170776367,"msg":"request completed"}
{"level":30,"time":1745838510724,"pid":282,"hostname":"k2matu.local","reqId":"req-2k","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510724,"pid":282,"hostname":"k2matu.local","reqId":"req-2k","res":{"statusCode":200},"responseTime":0.33500003814697266,"msg":"request completed"}
{"level":30,"time":1745838510725,"pid":282,"hostname":"k2matu.local","reqId":"req-2l","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510725,"pid":282,"hostname":"k2matu.local","reqId":"req-2l","res":{"statusCode":404},"responseTime":0.3968338966369629,"msg":"request completed"}
{"level":30,"time":1745838510726,"pid":282,"hostname":"k2matu.local","reqId":"req-2m","req":{"method":"DELETE","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510726,"pid":282,"hostname":"k2matu.local","reqId":"req-2m","res":{"statusCode":404},"responseTime":0.25754213333129883,"msg":"request completed"}
{"level":30,"time":1745838510726,"pid":282,"hostname":"k2matu.local","reqId":"req-2n","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510727,"pid":282,"hostname":"k2matu.local","reqId":"req-2n","res":{"statusCode":200},"responseTime":0.7407917976379395,"msg":"request completed"}
{"level":30,"time":1745838510728,"pid":282,"hostname":"k2matu.local","reqId":"req-2o","req":{"method":"GET","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510728,"pid":282,"hostname":"k2matu.local","reqId":"req-2o","res":{"statusCode":404},"responseTime":0.37604188919067383,"msg":"request completed"}
{"level":30,"time":1745838510729,"pid":282,"hostname":"k2matu.local","reqId":"req-2p","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510801,"pid":282,"hostname":"k2matu.local","reqId":"req-2p","res":{"statusCode":200},"responseTime":72.47179222106934,"msg":"request completed"}
{"level":30,"time":1745838510801,"pid":282,"hostname":"k2matu.local","reqId":"req-2q","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510873,"pid":282,"hostname":"k2matu.local","reqId":"req-2q","res":{"statusCode":200},"responseTime":71.94458293SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 1.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player2', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 2.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player3', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 3.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player4', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 4.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player5', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 5.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player6', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 6.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player7', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 7.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player8', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 8.0
    # Subtest: POST `/login` - Login as kim
        ok 1 - should be equal
        # Subtest: POST `/tournaments` returns 400 when creating tournament with 1 player
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 2 - POST `/tournaments` returns 400 when creating tournament with 1 player # time=6.828ms
        
        # Subtest: POST `/tournaments` returns 400 when creating tournament with 2 players
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 3 - POST `/tournaments` returns 400 when creating tournament with 2 players # time=0.813ms
        
BEGIN
SELECT * FROM tournaments WHERE name = 'T1'
SELECT * FROM players WHERE id = 1.0
SELECT * FROM players WHERE id = 2.0
SELECT * FROM players WHERE id = 100.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.createTournament [90m(file:///Users/kale/Desktop/check/backend/[39mcontrollers/tournamentController.js:218:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at [90m/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:214:9
[90m    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)[39m
    at done [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:207:14[90m)[39m
    at Parser.defaultJsonParser [as fn] [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:312:7[90m)[39m
        # Subtest: POST `/tournaments` returns 400 when creating tournament with invalid player
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 4 - POST `/tournaments` returns 400 when creating tournament with invalid player # time=1.973ms
        
        # Subtest: POST `/tournaments` returns 400 when missing player_ids
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 5 - POST `/tournaments` returns 400 when missing player_ids # time=0.721ms
        
        # Subtest: POST `/tournaments` returns 400 when missing name
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 6 - POST `/tournaments` returns 400 when missing name # time=0.603ms
        
BEGIN
SELECT * FROM tournaments WHERE name = 'T1'
SELECT * FROM players WHERE id = 1.0
SELECT * FROM players WHERE id = 2.0
SELECT * FROM players WHERE id = 3.0
INSERT INTO tournaments (name, user_id) VALUES ('T1', 2.0)
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('tournament', 1.0, 0.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (1.0, 3.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (1.0, 2.0)
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('tournament', 1.0, 0.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (2.0, 1.0)
INSERT INTO match_winner_history (match_id, winner_id) VALUES (2.0, 1.0)

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id, 
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

COMMIT
        # Subtest: POST `/tournaments` returns 200 when creating tournament with 3 players
            ok 1 - Status code 200
            ok 2 - should be equal
            ok 3 - should be equivalent
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM match_history WHERE tournament_id = 1.0 AND round = 0.0
SELECT * FROM match_winner_history WHERE match_id = 1.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.advanceTournament [90m(file:///Users/kale/Desktop/check/backend/[39mcontrollers/tournamentController.js:300:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m
            # Subtest: PUT `/tournaments/:id` returns 404 when match not played
                ok 1 - Status code 404
                ok 2 - should be equal
                1..2
            ok 4 - PUT `/tournaments/:id` returns 404 when match not played # time=2.285ms
            
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 2.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 1.0 AND player_id = 2.0
    
UPDATE players SET losses = losses + 1 WHERE id = 2.0
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 3.0

        UPDATE match_player_history SET score = 5.0 WHERE match_id = 1.0 AND player_id = 3.0
    
SELECT * FROM match_winner_history WHERE match_id = 1.0 AND winner_id = 3.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES (1.0, 3.0)
UPDATE players SET wins = wins + 1 WHERE id = 3.0
COMMIT
            # Subtest: PUT `/tournaments/:id` returns 200 on success
                ok 1 - Status code 200
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM match_history WHERE tournament_id = 1.0 AND round = 0.0
SELECT * FROM match_winner_history WHERE match_id = 1.0
SELECT * FROM match_winner_history WHERE match_id = 2.0
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('tournament', 1.0, 1.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (3.0, 3.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (3.0, 1.0)
UPDATE tournaments SET current_round = current_round + 1 WHERE id = 1.0

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id, 
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

COMMIT
                ok 2 - Status code 200
                ok 3 - should be equal
                ok 4 - should be equivalent
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 1.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.advanceTournament [90m(file:///Users/kale/Desktop/check/backend/[39mcontrollers/tournamentController.js:300:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m
                # Subtest: PUT `/tournaments/:id` returns 404 unauthorized
                    ok 1 - Status code 404
                    ok 2 - should be equal
                    1..2
                ok 5 - PUT `/tournaments/:id` returns 404 unauthorized # time=2.406ms
                
SELECT * FROM match_history WHERE id = 3.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 3.0 AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 3.0 AND player_id = 1.0
    
SELECT * FROM match_player_history WHERE match_id = 3.0 AND player_id = 3.0

        UPDATE match_player_history SET score = 1.0 WHERE match_id = 3.0 AND player_id = 3.0
    
UPDATE players SET losses = losses + 1 WHERE id = 3.0
SELECT * FROM match_winner_history WHERE match_id = 3.0 AND winner_id = 1.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES (3.0, 1.0)
UPDATE players SET wins = wins + 1 WHERE id = 1.0
COMMIT
                # Subtest: PUT `/tournaments/:id` returns 200 on tournament finish
                    ok 1 - Status code 200
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM match_history WHERE tournament_id = 1.0 AND round = 1.0
SELECT * FROM match_winner_history WHERE match_id = 3.0
UPDATE tournaments SET status = 'finished', winner_id = 1.0, current_round = 2.0 WHERE id = 1.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.advanceTournament [90m(file:///Users/kale/Desktop/check/backend/[39mcontrollers/tournamentController.js:300:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m
                    ok 2 - Status code 200
                    ok 3 - should be equal
                    1..3
                ok 6 - PUT `/tournaments/:id` returns 200 on tournament finish # time=3.575ms
                
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.advanceTournament [90m(file:///Users/kale/Desktop/check/backend/[39mcontrollers/tournamentController.js:300:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m
                # Subtest: PUT `/tournaments/:id` returns 400 when already finished
BEGIN
SELECT * FROM tournaments WHERE name = 'T1'
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.createTournament [90m(file:///Users/kale/Desktop/check/backend/[39mcontrollers/tournamentController.js:218:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at [90m/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:214:9
[90m    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)[39m
    at done [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:207:14[90m)[39m
    at Parser.defaultJsonParser [as fn] [90m(/Users/kale/Desktop/check/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:312:7[90m)[39m

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id, 
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 10.0


    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id, 
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

DELETE FROM tournaments WHERE id = 1.0 and user_id = 1.0
DELETE FROM tournaments WHERE id = 1.0 and user_id = 2.0
🧹 testPong.db wiped clean for next test
                    ok 1 - Status code 400
                    ok 2 - should be equal
                    1..2
                ok 7 - PUT `/tournaments/:id` returns 400 when already finished # time=1.515ms
                
                1..7
            ok 5 - PUT `/tournaments/:id` returns 200 on success # time=12.23ms
            
            1..5
        ok 7 - POST `/tournaments` returns 200 when creating tournament with 3 players # time=18.135ms
        
        # Subtest: POST `/tournaments` returns 400 on duplicate name
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 8 - POST `/tournaments` returns 400 on duplicate name # time=3.278ms
        
        # Subtest: GET `/tournaments/:id` returns 404 if tournament not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 9 - GET `/tournaments/:id` returns 404 if tournament not found # time=0.765ms
        
        # Subtest: GET `/tournaments/:id` returns 200 on success
            ok 1 - Status code 200
            1..1
        ok 10 - GET `/tournaments/:id` returns 200 on success # time=0.512ms
        
        # Subtest: DELETE `/tournaments/:id` returns 404 unauthorized
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 11 - DELETE `/tournaments/:id` returns 404 unauthorized # time=0.651ms
        
        # Subtest: DELETE `/tournaments/:id` returns 200 on success
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 12 - DELETE `/tournaments/:id` returns 200 on success # time=1.075ms
        
        1..12
    ok 7 - POST `/login` - Login as kim # time=193.165ms
    
    1..7
ok 1 - All Test # time=2436.817ms

914795,"msg":"request completed"}
{"level":30,"time":1745838510875,"pid":282,"hostname":"k2matu.local","reqId":"req-2r","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510877,"pid":282,"hostname":"k2matu.local","reqId":"req-2r","res":{"statusCode":201},"responseTime":1.1157078742980957,"msg":"request completed"}
{"level":30,"time":1745838510877,"pid":282,"hostname":"k2matu.local","reqId":"req-2s","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510878,"pid":282,"hostname":"k2matu.local","reqId":"req-2s","res":{"statusCode":201},"responseTime":0.9629173278808594,"msg":"request completed"}
{"level":30,"time":1745838510878,"pid":282,"hostname":"k2matu.local","reqId":"req-2t","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510879,"pid":282,"hostname":"k2matu.local","reqId":"req-2t","res":{"statusCode":201},"responseTime":0.9014158248901367,"msg":"request completed"}
{"level":30,"time":1745838510879,"pid":282,"hostname":"k2matu.local","reqId":"req-2u","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510880,"pid":282,"hostname":"k2matu.local","reqId":"req-2u","res":{"statusCode":201},"responseTime":0.7897915840148926,"msg":"request completed"}
{"level":30,"time":1745838510880,"pid":282,"hostname":"k2matu.local","reqId":"req-2v","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510880,"pid":282,"hostname":"k2matu.local","reqId":"req-2v","res":{"statusCode":201},"responseTime":0.8014578819274902,"msg":"request completed"}
{"level":30,"time":1745838510881,"pid":282,"hostname":"k2matu.local","reqId":"req-2w","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510881,"pid":282,"hostname":"k2matu.local","reqId":"req-2w","res":{"statusCode":201},"responseTime":0.7104167938232422,"msg":"request completed"}
{"level":30,"time":1745838510882,"pid":282,"hostname":"k2matu.local","reqId":"req-2x","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510883,"pid":282,"hostname":"k2matu.local","reqId":"req-2x","res":{"statusCode":201},"responseTime":0.9828329086303711,"msg":"request completed"}
{"level":30,"time":1745838510883,"pid":282,"hostname":"k2matu.local","reqId":"req-2y","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510884,"pid":282,"hostname":"k2matu.local","reqId":"req-2y","res":{"statusCode":201},"responseTime":0.8500423431396484,"msg":"request completed"}
{"level":30,"time":1745838510890,"pid":282,"hostname":"k2matu.local","reqId":"req-2z","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510891,"pid":282,"hostname":"k2matu.local","reqId":"req-2z","res":{"statusCode":400},"err":{"type":"Error","message":"body/player_ids must NOT have fewer than 3 items","stack":"Error: body/player_ids must NOT have fewer than 3 items\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/player_ids","schemaPath":"#/properties/player_ids/minItems","keyword":"minItems","params":{"limit":3},"message":"must NOT have fewer than 3 items"}],"validationContext":"body"},"msg":"body/player_ids must NOT have fewer than 3 items"}
{"level":30,"time":1745838510891,"pid":282,"hostname":"k2matu.local","reqId":"req-2z","res":{"statusCode":400},"responseTime":0.7550830841064453,"msg":"request completed"}
{"level":30,"time":1745838510892,"pid":282,"hostname":"k2matu.local","reqId":"req-30","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510892,"pid":282,"hostname":"k2matu.local","reqId":"req-30","res":{"statusCode":400},"err":{"type":"Error","message":"body/player_ids must NOT have fewer than 3 items","stack":"Error: body/player_ids must NOT have fewer than 3 items\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/player_ids","schemaPath":"#/properties/player_ids/minItems","keyword":"minItems","params":{"limit":3},"message":"must NOT have fewer than 3 items"}],"validationContext":"body"},"msg":"body/player_ids must NOT have fewer than 3 items"}
{"level":30,"time":1745838510892,"pid":282,"hostname":"k2matu.local","reqId":"req-30","res":{"statusCode":400},"responseTime":0.39783382415771484,"msg":"request completed"}
{"level":30,"time":1745838510893,"pid":282,"hostname":"k2matu.local","reqId":"req-31","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510894,"pid":282,"hostname":"k2matu.local","reqId":"req-31","res":{"statusCode":400},"responseTime":0.9201250076293945,"msg":"request completed"}
{"level":40,"time":1745838510894,"pid":282,"hostname":"k2matu.local","reqId":"req-31","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?\n    at _Reply.Reply.send (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.createTournament (file:///Users/kale/Desktop/check/backend/controllers/tournamentController.js:241:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?"}
{"level":30,"time":1745838510895,"pid":282,"hostname":"k2matu.local","reqId":"req-32","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510895,"pid":282,"hostname":"k2matu.local","reqId":"req-32","res":{"statusCode":400},"err":{"type":"Error","message":"body/player_ids must NOT have fewer than 3 items","stack":"Error: body/player_ids must NOT have fewer than 3 items\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/player_ids","schemaPath":"#/properties/player_ids/minItems","keyword":"minItems","params":{"limit":3},"message":"must NOT have fewer than 3 items"}],"validationContext":"body"},"msg":"body/player_ids must NOT have fewer than 3 items"}
{"level":30,"time":1745838510895,"pid":282,"hostname":"k2matu.local","reqId":"req-32","res":{"statusCode":400},"responseTime":0.39349985122680664,"msg":"request completed"}
{"level":30,"time":1745838510896,"pid":282,"hostname":"k2matu.local","reqId":"req-33","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510896,"pid":282,"hostname":"k2matu.local","reqId":"req-33","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'name'","stack":"Error: body must have required property 'name'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"name"},"message":"must have required property 'name'"}],"validationContext":"body"},"msg":"body must have required property 'name'"}
{"level":30,"time":1745838510896,"pid":282,"hostname":"k2matu.local","reqId":"req-33","res":{"statusCode":400},"responseTime":0.31966590881347656,"msg":"request completed"}
{"level":30,"time":1745838510897,"pid":282,"hostname":"k2matu.local","reqId":"req-34","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510899,"pid":282,"hostname":"k2matu.local","reqId":"req-34","res":{"statusCode":200},"responseTime":2.022124767303467,"msg":"request completed"}
{"level":30,"time":1745838510901,"pid":282,"hostname":"k2matu.local","reqId":"req-35","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510901,"pid":282,"hostname":"k2matu.local","reqId":"req-35","res":{"statusCode":404},"responseTime":0.8294997215270996,"msg":"request completed"}
{"level":40,"time":1745838510902,"pid":282,"hostname":"k2matu.local","reqId":"req-35","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.advanceTournament (file:///Users/kale/Desktop/check/backend/controllers/tournamentController.js:317:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at Object.handleRequest (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:44:9)\n    at runPreParsing (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/route.js:571:19)\n    at next (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/hooks.js:236:9)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?"}
{"level":30,"time":1745838510902,"pid":282,"hostname":"k2matu.local","reqId":"req-36","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510904,"pid":282,"hostname":"k2matu.local","reqId":"req-36","res":{"statusCode":200},"responseTime":1.4302496910095215,"msg":"request completed"}
{"level":30,"time":1745838510904,"pid":282,"hostname":"k2matu.local","reqId":"req-37","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510906,"pid":282,"hostname":"k2matu.local","reqId":"req-37","res":{"statusCode":200},"responseTime":1.4679594039916992,"msg":"request completed"}
{"level":30,"time":1745838510908,"pid":282,"hostname":"k2matu.local","reqId":"req-38","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510908,"pid":282,"hostname":"k2matu.local","reqId":"req-38","res":{"statusCode":404},"responseTime":0.42549991607666016,"msg":"request completed"}
{"level":40,"time":1745838510909,"pid":282,"hostname":"k2matu.local","reqId":"req-38","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.advanceTournament (file:///Users/kale/Desktop/check/backend/controllers/tournamentController.js:317:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at Object.handleRequest (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:44:9)\n    at runPreParsing (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/route.js:571:19)\n    at next (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/hooks.js:236:9)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?"}
{"level":30,"time":1745838510909,"pid":282,"hostname":"k2matu.local","reqId":"req-39","req":{"method":"PUT","url":"/match-histories/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510911,"pid":282,"hostname":"k2matu.local","reqId":"req-39","res":{"statusCode":200},"responseTime":1.5304999351501465,"msg":"request completed"}
{"level":30,"time":1745838510911,"pid":282,"hostname":"k2matu.local","reqId":"req-3a","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510912,"pid":282,"hostname":"k2matu.local","reqId":"req-3a","res":{"statusCode":200},"responseTime":0.6495418548583984,"msg":"request completed"}
{"level":40,"time":1745838510912,"pid":282,"hostname":"k2matu.local","reqId":"req-3a","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.advanceTournament (file:///Users/kale/Desktop/check/backend/controllers/tournamentController.js:317:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at Object.handleRequest (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:44:9)\n    at runPreParsing (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/route.js:571:19)\n    at next (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/hooks.js:236:9)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?"}
{"level":30,"time":1745838510913,"pid":282,"hostname":"k2matu.local","reqId":"req-3b","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510913,"pid":282,"hostname":"k2matu.local","reqId":"req-3b","res":{"statusCode":400},"responseTime":0.3469581604003906,"msg":"request completed"}
{"level":40,"time":1745838510914,"pid":282,"hostname":"k2matu.local","reqId":"req-3b","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.advanceTournament (file:///Users/kale/Desktop/check/backend/controllers/tournamentController.js:317:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at Object.handleRequest (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:44:9)\n    at runPreParsing (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/route.js:571:19)\n    at next (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/hooks.js:236:9)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?"}
{"level":30,"time":1745838510915,"pid":282,"hostname":"k2matu.local","reqId":"req-3c","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510917,"pid":282,"hostname":"k2matu.local","reqId":"req-3c","res":{"statusCode":400},"responseTime":2.2687082290649414,"msg":"request completed"}
{"level":40,"time":1745838510918,"pid":282,"hostname":"k2matu.local","reqId":"req-3c","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?\n    at _Reply.Reply.send (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.createTournament (file:///Users/kale/Desktop/check/backend/controllers/tournamentController.js:241:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/check/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?"}
{"level":30,"time":1745838510918,"pid":282,"hostname":"k2matu.local","reqId":"req-3d","req":{"method":"GET","url":"/tournaments/10","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510919,"pid":282,"hostname":"k2matu.local","reqId":"req-3d","res":{"statusCode":404},"responseTime":0.3835000991821289,"msg":"request completed"}
{"level":30,"time":1745838510919,"pid":282,"hostname":"k2matu.local","reqId":"req-3e","req":{"method":"GET","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510919,"pid":282,"hostname":"k2matu.local","reqId":"req-3e","res":{"statusCode":200},"responseTime":0.26954221725463867,"msg":"request completed"}
{"level":30,"time":1745838510920,"pid":282,"hostname":"k2matu.local","reqId":"req-3f","req":{"method":"DELETE","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510920,"pid":282,"hostname":"k2matu.local","reqId":"req-3f","res":{"statusCode":404},"responseTime":0.36483287811279297,"msg":"request completed"}
{"level":30,"time":1745838510920,"pid":282,"hostname":"k2matu.local","reqId":"req-3g","req":{"method":"DELETE","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745838510921,"pid":282,"hostname":"k2matu.local","reqId":"req-3g","res":{"statusCode":200},"responseTime":0.7402501106262207,"msg":"request completed"}
1..1
