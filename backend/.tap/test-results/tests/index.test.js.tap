Using testPong.db

	CREATE TABLE IF NOT EXISTS users (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		username TEXT NOT NULL UNIQUE,
		email TEXT NOT NULL UNIQUE,
		password_hash TEXT NOT NULL,
		avatar_url TEXT DEFAULT NULL,
		online_status BOOLEAN DEFAULT FALSE,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	)

PRAGMA foreign_keys = ON

	CREATE TABLE IF NOT EXISTS players (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		display_name TEXT NOT NULL UNIQUE,
		wins INTEGER DEFAULT 0,
		losses INTEGER DEFAULT 0,
		avatar_url TEXT DEFAULT NULL,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS friends (
		user_id INTEGER,
		friend_id INTEGER,
		status TEXT DEFAULT 'pending',
		PRIMARY KEY (user_id, friend_id),
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS tournaments (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		name TEXT NOT NULL,
		status TEXT DEFAULT 'pending',
		current_round INTEGER DEFAULT 0,
		winner_id INTEGER,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)


	CREATE TABLE IF NOT EXISTS match_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		type TEXT NOT NULL,
		tournament_id INTEGER DEFAULT NULL,
		round INTEGER,
		date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS match_player_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		player_id INTEGER NOT NULL,
		score INTEGER DEFAULT 0 NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (player_id) REFERENCES players(id),
		UNIQUE (match_id, player_id)
	)


	CREATE TABLE IF NOT EXISTS match_winner_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		winner_id INTEGER NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)

TAP version 14
# Subtest: All Test
{"level":30,"time":1745577690795,"pid":2142,"hostname":"k2matu.local","reqId":"req-1","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users
    # Subtest: Auth Routes Suite
        # Subtest: GET `/users` returns empty array
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/users` returns empty array # time=32.174ms
        
        # Subtest: POST `/register`
            # Subtest: returns 400 if email is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if email is missing # time=130.689ms
            
{"level":30,"time":1745577690798,"pid":2142,"hostname":"k2matu.local","reqId":"req-1","res":{"statusCode":200},"responseTime":3.001708984375,"msg":"request completed"}
{"level":30,"time":1745577690943,"pid":2142,"hostname":"k2matu.local","reqId":"req-2","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577690945,"pid":2142,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'email'","stack":"Error: body must have required property 'email'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"email"},"message":"must have required property 'email'"}],"validationContext":"body"},"msg":"body must have required property 'email'"}
{"level":30,"time":1745577690946,"pid":2142,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"responseTime":2.59208345413208,"msg":"request completed"}
{"level":30,"time":1745577690947,"pid":2142,"hostname":"k2matu.local","reqId":"req-3","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if invalid email
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if invalid email # time=1.482ms
            
{"level":30,"time":1745577690947,"pid":2142,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"err":{"type":"Error","message":"body/email must match format \"email\"","stack":"Error: body/email must match format \"email\"\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/email","schemaPath":"#/properties/email/format","keyword":"format","params":{"format":"email"},"message":"must match format \"email\""}],"validationContext":"body"},"msg":"body/email must match format \"email\""}
{"level":30,"time":1745577690948,"pid":2142,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"responseTime":0.9566249847412109,"msg":"request completed"}
{"level":30,"time":1745577690948,"pid":2142,"hostname":"k2matu.local","reqId":"req-4","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username < 3 chars
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - returns 400 if username < 3 chars # time=0.864ms
            
{"level":30,"time":1745577690949,"pid":2142,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"err":{"type":"Error","message":"body/username must NOT have fewer than 3 characters","stack":"Error: body/username must NOT have fewer than 3 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/username","schemaPath":"#/properties/username/minLength","keyword":"minLength","params":{"limit":3},"message":"must NOT have fewer than 3 characters"}],"validationContext":"body"},"msg":"body/username must NOT have fewer than 3 characters"}
{"level":30,"time":1745577690949,"pid":2142,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"responseTime":0.3663749694824219,"msg":"request completed"}
{"level":30,"time":1745577690949,"pid":2142,"hostname":"k2matu.local","reqId":"req-5","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - returns 400 if username is missing # time=0.828ms
            
{"level":30,"time":1745577690950,"pid":2142,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745577690950,"pid":2142,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"responseTime":0.3429579734802246,"msg":"request completed"}
{"level":30,"time":1745577690950,"pid":2142,"hostname":"k2matu.local","reqId":"req-6","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 5 - returns 400 if password is missing # time=0.754ms
            
            # Subtest: returns 400 if invalid password
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 6 - returns 400 if invalid password # time=1.093ms
            
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'testuse@email.com', '$2b$10$4ijyK1jE3sFm2W8d97Aw.e71w'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 1.0
            # Subtest: returns 201 if successfully created user
                ok 1 - Status code 201
                ok 2 - should be equal
SELECT * FROM users
                ok 3 - Status code 200
                ok 4 - One user in the database
                ok 5 - should be equivalent
                1..5
            ok 7 - returns 201 if successfully created user # time=80.285ms
            
{"level":30,"time":1745577690951,"pid":2142,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745577690951,"pid":2142,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"responseTime":0.29604101181030273,"msg":"request completed"}
{"level":30,"time":1745577690951,"pid":2142,"hostname":"k2matu.local","reqId":"req-7","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'new@email.com', '$2b$10$5feF7zyOxdghItcqoNur9e8T4'/*+28 bytes*/)
            # Subtest: returns 400 if duplicate name
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 8 - returns 400 if duplicate name # time=71.333ms
            
{"level":30,"time":1745577690952,"pid":2142,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"err":{"type":"Error","message":"body/password must NOT have fewer than 6 characters","stack":"Error: body/password must NOT have fewer than 6 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/password","schemaPath":"#/properties/password/minLength","keyword":"minLength","params":{"limit":6},"message":"must NOT have fewer than 6 characters"}],"validationContext":"body"},"msg":"body/password must NOT have fewer than 6 characters"}
{"level":30,"time":1745577690952,"pid":2142,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"responseTime":0.5620002746582031,"msg":"request completed"}
{"level":30,"time":1745577690953,"pid":2142,"hostname":"k2matu.local","reqId":"req-8","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691031,"pid":2142,"hostname":"k2matu.local","reqId":"req-8","res":{"statusCode":201},"responseTime":78.33750009536743,"msg":"request completed"}
{"level":30,"time":1745577691031,"pid":2142,"hostname":"k2matu.local","reqId":"req-9","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691032,"pid":2142,"hostname":"k2matu.local","reqId":"req-9","res":{"statusCode":200},"responseTime":0.36266613006591797,"msg":"request completed"}
{"level":30,"time":1745577691033,"pid":2142,"hostname":"k2matu.local","reqId":"req-a","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691104,"pid":2142,"hostname":"k2matu.local","reqId":"req-a","res":{"statusCode":409},"responseTime":70.59558391571045,"msg":"request completed"}
{"level":30,"time":1745577691105,"pid":2142,"hostname":"k2matu.local","reqId":"req-b","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('newuser', 'testuse@email.com', '$2b$10$MzqjiGqWlJ6vxzk5BqOrEOAXE'/*+28 bytes*/)
{"level":30,"time":1745577691175,"pid":2142,"hostname":"k2matu.local","reqId":"req-b","res":{"statusCode":409},"responseTime":70.6104998588562,"msg":"request completed"}
            # Subtest: returns 400 if duplicate email
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 9 - returns 400 if duplicate email # time=71.362ms
            
{"level":30,"time":1745577691176,"pid":2142,"hostname":"k2matu.local","reqId":"req-c","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('kim', 'kim@email.com', '$2b$10$TVvdX3Aj3fubt1A6QIoDKuL32'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 2.0
{"level":30,"time":1745577691247,"pid":2142,"hostname":"k2matu.local","reqId":"req-c","res":{"statusCode":201},"responseTime":70.72412490844727,"msg":"request completed"}
            # Subtest: returns 201 if successfully created another user
                ok 1 - Status code 201
                ok 2 - should be equal
                1..2
            ok 10 - returns 201 if successfully created another user # time=71.375ms
            
            1..10
        ok 2 - POST `/register` # time=446.747ms
        
{"level":30,"time":1745577691407,"pid":2142,"hostname":"k2matu.local","reqId":"req-d","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/login`
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if username is missing # time=128.658ms
            
{"level":30,"time":1745577691408,"pid":2142,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745577691408,"pid":2142,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"responseTime":1.5248751640319824,"msg":"request completed"}
{"level":30,"time":1745577691409,"pid":2142,"hostname":"k2matu.local","reqId":"req-e","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if password is missing # time=0.873ms
            
{"level":30,"time":1745577691409,"pid":2142,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745577691409,"pid":2142,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"responseTime":0.35933399200439453,"msg":"request completed"}
{"level":30,"time":1745577691410,"pid":2142,"hostname":"k2matu.local","reqId":"req-f","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'nonexistentuser'
            # Subtest: returns 401 if user not found
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 3 - returns 401 if user not found # time=1.178ms
            
{"level":30,"time":1745577691411,"pid":2142,"hostname":"k2matu.local","reqId":"req-f","res":{"statusCode":401},"responseTime":0.5214591026306152,"msg":"request completed"}
{"level":30,"time":1745577691411,"pid":2142,"hostname":"k2matu.local","reqId":"req-g","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
{"level":30,"time":1745577691482,"pid":2142,"hostname":"k2matu.local","reqId":"req-g","res":{"statusCode":401},"responseTime":70.37245798110962,"msg":"request completed"}
            # Subtest: returns 401 if password is incorrect
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 4 - returns 401 if password is incorrect # time=70.925ms
            
{"level":30,"time":1745577691483,"pid":2142,"hostname":"k2matu.local","reqId":"req-h","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
			SET online_status = TRUE
			WHERE id = 2.0 
			AND online_status = FALSE
			
{"level":30,"time":1745577691554,"pid":2142,"hostname":"k2matu.local","reqId":"req-h","res":{"statusCode":200},"responseTime":71.77720928192139,"msg":"request completed"}
            # Subtest: returns 200 if login is successful
                ok 1 - Status code 200
                ok 2 - Token is present
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = '2'
                ok 4 - Status code 200
                ok 5 - should be equivalent
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
			SET online_status = FALSE 
			WHERE id = 2.0 
			AND online_status = TRUE
			
                # Subtest: POST `/logout`
                    # Subtest: returns 200 if logout is successful
                        ok 1 - Status code 200
                        ok 2 - should be equal
SELECT * FROM users WHERE id = '2'
                        ok 3 - Status code 200
                        ok 4 - should be equivalent
                        1..4
                    ok 1 - returns 200 if logout is successful # time=12.941ms
                    
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
			SET online_status = FALSE 
			WHERE id = 2.0 
			AND online_status = TRUE
			
                    # Subtest: returns 400 if user already logged out
                        ok 1 - Status code 404
                        ok 2 - should be equal
                        1..2
                    ok 2 - returns 400 if user already logged out # time=0.95ms
                    
                    1..2
                ok 6 - POST `/logout` # time=24.366ms
                
                1..6
            ok 5 - returns 200 if login is successful # time=98.821ms
            
            1..5
        ok 3 - POST `/login` # time=333.479ms
        
        1..3
    ok 1 - Auth Routes Suite # time=823.129ms
    
SELECT * FROM users
    # Subtest: User Routes Suite
        # Subtest: GET `/users` returns two users
            ok 1 - Status code 200
            ok 2 - Two user in the database
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 1 - GET `/users` returns two users # time=257.532ms
        
SELECT * FROM users WHERE id = '2'
        # Subtest: GET `/users/:id` returns second user
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 2 - GET `/users/:id` returns second user # time=0.948ms
        
SELECT * FROM users WHERE id = '3'
        # Subtest: GET `/users/:id` returns 404 user not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 3 - GET `/users/:id` returns 404 user not found # time=0.574ms
        
{"level":30,"time":1745577691555,"pid":2142,"hostname":"k2matu.local","reqId":"req-i","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691556,"pid":2142,"hostname":"k2matu.local","reqId":"req-i","res":{"statusCode":200},"responseTime":0.535707950592041,"msg":"request completed"}
{"level":30,"time":1745577691576,"pid":2142,"hostname":"k2matu.local","reqId":"req-j","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691578,"pid":2142,"hostname":"k2matu.local","reqId":"req-j","res":{"statusCode":200},"responseTime":1.9353747367858887,"msg":"request completed"}
{"level":30,"time":1745577691579,"pid":2142,"hostname":"k2matu.local","reqId":"req-k","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691579,"pid":2142,"hostname":"k2matu.local","reqId":"req-k","res":{"statusCode":200},"responseTime":0.24066591262817383,"msg":"request completed"}
{"level":30,"time":1745577691580,"pid":2142,"hostname":"k2matu.local","reqId":"req-l","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691580,"pid":2142,"hostname":"k2matu.local","reqId":"req-l","res":{"statusCode":404},"responseTime":0.39362525939941406,"msg":"request completed"}
{"level":30,"time":1745577691927,"pid":2142,"hostname":"k2matu.local","reqId":"req-m","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691927,"pid":2142,"hostname":"k2matu.local","reqId":"req-m","res":{"statusCode":200},"responseTime":0.4760408401489258,"msg":"request completed"}
{"level":30,"time":1745577691928,"pid":2142,"hostname":"k2matu.local","reqId":"req-n","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691928,"pid":2142,"hostname":"k2matu.local","reqId":"req-n","res":{"statusCode":200},"responseTime":0.34708261489868164,"msg":"request completed"}
{"level":30,"time":1745577691929,"pid":2142,"hostname":"k2matu.local","reqId":"req-o","req":{"method":"GET","url":"/users/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577691929,"pid":2142,"hostname":"k2matu.local","reqId":"req-o","res":{"statusCode":404},"responseTime":0.20229101181030273,"msg":"request completed"}
{"level":30,"time":1745577691930,"pid":2142,"hostname":"k2matu.local","reqId":"req-p","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'testuser'
UPDATE users
			SET online_status = TRUE
			WHERE id = 1.0 
			AND online_status = FALSE
			
{"level":30,"time":1745577692002,"pid":2142,"hostname":"k2matu.local","reqId":"req-p","res":{"statusCode":200},"responseTime":72.33837509155273,"msg":"request completed"}
{"level":30,"time":1745577692006,"pid":2142,"hostname":"k2matu.local","reqId":"req-q","req":{"method":"PUT","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: PUT `/users/:id`
            # Subtest: PUT `/users/2` returns 403 if unauthoritized
                ok 1 - Status code 403
                ok 2 - should be equal
                1..2
            ok 1 - PUT `/users/2` returns 403 if unauthoritized # time=3.954ms
            
{"level":30,"time":1745577692007,"pid":2142,"hostname":"k2matu.local","reqId":"req-q","res":{"statusCode":403},"responseTime":0.5867919921875,"msg":"request completed"}
{"level":30,"time":1745577692007,"pid":2142,"hostname":"k2matu.local","reqId":"req-r","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'kim'
            # Subtest: PUT `/users/1` returns 400 if username already taken
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - PUT `/users/1` returns 400 if username already taken # time=0.926ms
            
{"level":30,"time":1745577692008,"pid":2142,"hostname":"k2matu.local","reqId":"req-r","res":{"statusCode":400},"responseTime":0.4835829734802246,"msg":"request completed"}
{"level":30,"time":1745577692008,"pid":2142,"hostname":"k2matu.local","reqId":"req-s","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'kim@email.com'
            # Subtest: PUT `/users/1` returns 400 if email already in use
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - PUT `/users/1` returns 400 if email already in use # time=0.771ms
            
{"level":30,"time":1745577692009,"pid":2142,"hostname":"k2matu.local","reqId":"req-s","res":{"statusCode":400},"responseTime":0.37275028228759766,"msg":"request completed"}
{"level":30,"time":1745577692009,"pid":2142,"hostname":"k2matu.local","reqId":"req-t","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'new@email.com'

			UPDATE users
			SET username = 'testuser', password_hash = '$2b$10$4ijyK1jE3sFm2W8d97Aw.e71w'/*+28 bytes*/, email = 'new@email.com', avatar_url = NULL
			WHERE username = 'testuser'
		
            # Subtest: PUT `/users/1` returns 200 if email updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 4 - PUT `/users/1` returns 200 if email updated # time=2.006ms
            
{"level":30,"time":1745577692011,"pid":2142,"hostname":"k2matu.local","reqId":"req-t","res":{"statusCode":200},"responseTime":1.322916030883789,"msg":"request completed"}
{"level":30,"time":1745577692012,"pid":2142,"hostname":"k2matu.local","reqId":"req-u","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'lumi'

			UPDATE users
			SET username = 'lumi', password_hash = '$2b$10$4ijyK1jE3sFm2W8d97Aw.e71w'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
			WHERE username = 'testuser'
		
            # Subtest: PUT `/users/1` returns 200 if username and avatar_url updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = '1'
                ok 4 - Status code 200
                ok 5 - should be equivalent
                1..5
            ok 5 - PUT `/users/1` returns 200 if username and avatar_url updated # time=2.089ms
            
{"level":30,"time":1745577692013,"pid":2142,"hostname":"k2matu.local","reqId":"req-u","res":{"statusCode":200},"responseTime":1.0227503776550293,"msg":"request completed"}
{"level":30,"time":1745577692013,"pid":2142,"hostname":"k2matu.local","reqId":"req-v","req":{"method":"GET","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692013,"pid":2142,"hostname":"k2matu.local","reqId":"req-v","res":{"statusCode":200},"responseTime":0.1789999008178711,"msg":"request completed"}
{"level":30,"time":1745577692014,"pid":2142,"hostname":"k2matu.local","reqId":"req-w","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0

			UPDATE users
			SET username = 'lumi', password_hash = '$2b$10$35Fk1AGn9qEO1MDtYlnWFejko'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
			WHERE username = 'lumi'
		
{"level":30,"time":1745577692086,"pid":2142,"hostname":"k2matu.local","reqId":"req-w","res":{"statusCode":200},"responseTime":72.17462491989136,"msg":"request completed"}
            # Subtest: PUT `/users/1` returns 200 if password updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
{"level":30,"time":1745577692087,"pid":2142,"hostname":"k2matu.local","reqId":"req-x","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
{"level":30,"time":1745577692156,"pid":2142,"hostname":"k2matu.local","reqId":"req-x","res":{"statusCode":401},"responseTime":69.35658407211304,"msg":"request completed"}
                ok 4 - Status code 401
                ok 5 - should be equal
{"level":30,"time":1745577692156,"pid":2142,"hostname":"k2matu.local","reqId":"req-y","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
UPDATE users
			SET online_status = TRUE
			WHERE id = 1.0 
			AND online_status = FALSE
			
{"level":30,"time":1745577692226,"pid":2142,"hostname":"k2matu.local","reqId":"req-y","res":{"statusCode":200},"responseTime":69.64554214477539,"msg":"request completed"}
                ok 6 - Token is present
                ok 7 - Status code 200
                ok 8 - should be equivalent
                1..8
            ok 6 - PUT `/users/1` returns 200 if password updated # time=212.909ms
            
            1..6
        ok 4 - PUT `/users/:id` # time=297.01ms
        
        1..4
    ok 2 - User Routes Suite # time=645.165ms
    
{"level":30,"time":1745577692227,"pid":2142,"hostname":"k2matu.local","reqId":"req-z","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
UPDATE users
			SET online_status = TRUE
			WHERE id = 1.0 
			AND online_status = FALSE
			
{"level":30,"time":1745577692297,"pid":2142,"hostname":"k2matu.local","reqId":"req-z","res":{"statusCode":200},"responseTime":69.77349996566772,"msg":"request completed"}

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
    # Subtest: POST `/login`
        # Subtest: GET `/friends` returns 404 when no friends found for user
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 1 - GET `/friends` returns 404 when no friends found for user # time=6.76ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
        # Subtest: PATCH `/friends-requests/2` returns 404 when friend request not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 2 - PATCH `/friends-requests/2` returns 404 when friend request not found # time=0.794ms
        
        # Subtest: POST `/friend-requests/:id`
            # Subtest: POST `/friend-requests/1` returns 400 when request to itself
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - POST `/friend-requests/1` returns 400 when request to itself # time=41.484ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 0.0 AND friend_id = 1.0
            OR friend_id = 0.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 0.0)
        
SqliteError: FOREIGN KEY constraint failed
    at Object.sendFriendRequest [90m(file:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/friendController.js:61:12[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m {
  code: [32m'SQLITE_CONSTRAINT_FOREIGNKEY'[39m
}
            # Subtest: POST `/friend-requests/0` returns 500 when invalid id
                ok 1 - Status code 500
                ok 2 - should be equal
                1..2
            ok 2 - POST `/friend-requests/0` returns 500 when invalid id # time=2.834ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
            # Subtest: POST `/friend-requests/2` returns 200 when successfully sent
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 3 - POST `/friend-requests/2` returns 200 when successfully sent # time=2.61ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        
            # Subtest: POST `/friend-requests/2` returns 409 when friend request already exists
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 4 - POST `/friend-requests/2` returns 409 when friend request already exists # time=0.988ms
            
            1..4
        ok 3 - POST `/friend-requests/:id` # time=62.162ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 6.0) OR (user_id = 6.0 AND friend_id = 1.0)
        
        # Subtest: GET `/friends/:id/status`
            # Subtest: GET `/friends/:id/status` returns 404 when friend not found
                ok 1 - Status code 404
                ok 2 - should be equal
                1..2
            ok 1 - GET `/friends/:id/status` returns 404 when friend not found # time=33.378ms
            

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
            # Subtest: GET `/friends/:id/status` returns 400 when friend request pending
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - GET `/friends/:id/status` returns 400 when friend request pending # time=0.664ms
            
            1..2
        ok 4 - GET `/friends/:id/status` # time=67.395ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friends-requests/2` returns 400 waiting for friend to accept request
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 5 - PATCH `/friends-requests/2` returns 400 waiting for friend to accept request # time=0.652ms
        
{"level":30,"time":1745577692304,"pid":2142,"hostname":"k2matu.local","reqId":"req-10","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692304,"pid":2142,"hostname":"k2matu.local","reqId":"req-10","res":{"statusCode":404},"responseTime":0.46358299255371094,"msg":"request completed"}
{"level":30,"time":1745577692305,"pid":2142,"hostname":"k2matu.local","reqId":"req-11","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692305,"pid":2142,"hostname":"k2matu.local","reqId":"req-11","res":{"statusCode":404},"responseTime":0.38341712951660156,"msg":"request completed"}
{"level":30,"time":1745577692360,"pid":2142,"hostname":"k2matu.local","reqId":"req-12","req":{"method":"POST","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692361,"pid":2142,"hostname":"k2matu.local","reqId":"req-12","res":{"statusCode":400},"responseTime":0.3345832824707031,"msg":"request completed"}
{"level":30,"time":1745577692361,"pid":2142,"hostname":"k2matu.local","reqId":"req-13","req":{"method":"POST","url":"/friend-requests/0","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692363,"pid":2142,"hostname":"k2matu.local","reqId":"req-13","res":{"statusCode":500},"responseTime":2.1933751106262207,"msg":"request completed"}
{"level":30,"time":1745577692364,"pid":2142,"hostname":"k2matu.local","reqId":"req-14","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692366,"pid":2142,"hostname":"k2matu.local","reqId":"req-14","res":{"statusCode":200},"responseTime":1.85841703414917,"msg":"request completed"}
{"level":30,"time":1745577692367,"pid":2142,"hostname":"k2matu.local","reqId":"req-15","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692368,"pid":2142,"hostname":"k2matu.local","reqId":"req-15","res":{"statusCode":409},"responseTime":0.4365830421447754,"msg":"request completed"}
{"level":30,"time":1745577692434,"pid":2142,"hostname":"k2matu.local","reqId":"req-16","req":{"method":"GET","url":"/friends/6/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692434,"pid":2142,"hostname":"k2matu.local","reqId":"req-16","res":{"statusCode":404},"responseTime":0.4859161376953125,"msg":"request completed"}
{"level":30,"time":1745577692435,"pid":2142,"hostname":"k2matu.local","reqId":"req-17","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692435,"pid":2142,"hostname":"k2matu.local","reqId":"req-17","res":{"statusCode":400},"responseTime":0.27191591262817383,"msg":"request completed"}
{"level":30,"time":1745577692436,"pid":2142,"hostname":"k2matu.local","reqId":"req-18","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692436,"pid":2142,"hostname":"k2matu.local","reqId":"req-18","res":{"statusCode":400},"responseTime":0.24279117584228516,"msg":"request completed"}
{"level":30,"time":1745577692436,"pid":2142,"hostname":"k2matu.local","reqId":"req-19","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
			SET online_status = TRUE
			WHERE id = 2.0 
			AND online_status = FALSE
			
{"level":30,"time":1745577692508,"pid":2142,"hostname":"k2matu.local","reqId":"req-19","res":{"statusCode":200},"responseTime":71.59941673278809,"msg":"request completed"}
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0

            UPDATE friends 
            SET status = 'accepted' 
            WHERE user_id = 1.0 AND friend_id = 2.0
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
        # Subtest: PATCH `/friends-requests/2` returns 200 accept friend request
            ok 1 - Status code 200
            ok 2 - should be equal
            ok 3 - should be equivalent
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
            # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - PATCH `/friend-requests/2` returns 400 when already friends # time=0.792ms
            
            1..4
        ok 6 - PATCH `/friends-requests/2` returns 200 accept friend request # time=75.213ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 7 - PATCH `/friend-requests/2` returns 400 when already friends # time=0.631ms
        

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        
        # Subtest: POST `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 8 - POST `/friend-requests/2` returns 400 when already friends # time=0.517ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        

            SELECT username, online_status FROM users 
            WHERE id = 2.0
        
        # Subtest: GET `/friends/:id/status` returns 200 when already friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 9 - GET `/friends/:id/status` returns 200 when already friends # time=0.788ms
        

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
        # Subtest: GET `/friends` returns 200 returning all friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 10 - GET `/friends` returns 200 returning all friends # time=0.683ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 4.0) OR (user_id = 4.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 404 when unauthorized action
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 11 - DELETE `/friends/:id` returns 404 when unauthorized action # time=0.573ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 200 when friend removed
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 12 - DELETE `/friends/:id` returns 200 when friend removed # time=1.124ms
        
        1..12
    ok 3 - POST `/login` # time=289.681ms
    
{"level":30,"time":1745577692508,"pid":2142,"hostname":"k2matu.local","reqId":"req-1a","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692509,"pid":2142,"hostname":"k2matu.local","reqId":"req-1a","res":{"statusCode":200},"responseTime":1.1775832176208496,"msg":"request completed"}
{"level":30,"time":1745577692511,"pid":2142,"hostname":"k2matu.local","reqId":"req-1b","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692511,"pid":2142,"hostname":"k2matu.local","reqId":"req-1b","res":{"statusCode":400},"responseTime":0.3629579544067383,"msg":"request completed"}
{"level":30,"time":1745577692512,"pid":2142,"hostname":"k2matu.local","reqId":"req-1c","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692512,"pid":2142,"hostname":"k2matu.local","reqId":"req-1c","res":{"statusCode":400},"responseTime":0.24125003814697266,"msg":"request completed"}
{"level":30,"time":1745577692512,"pid":2142,"hostname":"k2matu.local","reqId":"req-1d","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692513,"pid":2142,"hostname":"k2matu.local","reqId":"req-1d","res":{"statusCode":400},"responseTime":0.20595788955688477,"msg":"request completed"}
{"level":30,"time":1745577692513,"pid":2142,"hostname":"k2matu.local","reqId":"req-1e","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692514,"pid":2142,"hostname":"k2matu.local","reqId":"req-1e","res":{"statusCode":200},"responseTime":0.395291805267334,"msg":"request completed"}
{"level":30,"time":1745577692514,"pid":2142,"hostname":"k2matu.local","reqId":"req-1f","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692514,"pid":2142,"hostname":"k2matu.local","reqId":"req-1f","res":{"statusCode":200},"responseTime":0.30824995040893555,"msg":"request completed"}
{"level":30,"time":1745577692515,"pid":2142,"hostname":"k2matu.local","reqId":"req-1g","req":{"method":"DELETE","url":"/friends/4","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692515,"pid":2142,"hostname":"k2matu.local","reqId":"req-1g","res":{"statusCode":404},"responseTime":0.26074981689453125,"msg":"request completed"}
{"level":30,"time":1745577692515,"pid":2142,"hostname":"k2matu.local","reqId":"req-1h","req":{"method":"DELETE","url":"/friends/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692516,"pid":2142,"hostname":"k2matu.local","reqId":"req-1h","res":{"statusCode":200},"responseTime":0.8003749847412109,"msg":"request completed"}
{"level":30,"time":1745577692517,"pid":2142,"hostname":"k2matu.local","reqId":"req-1i","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
			SET online_status = TRUE
			WHERE id = 2.0 
			AND online_status = FALSE
			
{"level":30,"time":1745577692588,"pid":2142,"hostname":"k2matu.local","reqId":"req-1i","res":{"statusCode":200},"responseTime":70.83637523651123,"msg":"request completed"}
{"level":30,"time":1745577692588,"pid":2142,"hostname":"k2matu.local","reqId":"req-1j","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
UPDATE users
			SET online_status = TRUE
			WHERE id = 1.0 
			AND online_status = FALSE
			
{"level":30,"time":1745577692658,"pid":2142,"hostname":"k2matu.local","reqId":"req-1j","res":{"statusCode":200},"responseTime":69.54841709136963,"msg":"request completed"}
SELECT * FROM players WHERE user_id = 2.0
    # Subtest: POST `/login`
        # Subtest: GET `/players` returns 404 when no players found for user
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 1 - GET `/players` returns 404 when no players found for user # time=8.452ms
        
{"level":30,"time":1745577692666,"pid":2142,"hostname":"k2matu.local","reqId":"req-1k","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692667,"pid":2142,"hostname":"k2matu.local","reqId":"req-1k","res":{"statusCode":404},"responseTime":0.48570871353149414,"msg":"request completed"}
{"level":30,"time":1745577692667,"pid":2142,"hostname":"k2matu.local","reqId":"req-1l","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 1.0
        # Subtest: POST `/players` returns 201 on successful creation
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 2 - POST `/players` returns 201 on successful creation # time=2.794ms
        
{"level":30,"time":1745577692669,"pid":2142,"hostname":"k2matu.local","reqId":"req-1l","res":{"statusCode":201},"responseTime":2.1280417442321777,"msg":"request completed"}
{"level":30,"time":1745577692670,"pid":2142,"hostname":"k2matu.local","reqId":"req-1m","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
        # Subtest: POST `/players` returns 409 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 3 - POST `/players` returns 409 for duplicate display_name # time=0.945ms
        
{"level":30,"time":1745577692671,"pid":2142,"hostname":"k2matu.local","reqId":"req-1m","res":{"statusCode":409},"responseTime":0.5427498817443848,"msg":"request completed"}
{"level":30,"time":1745577692671,"pid":2142,"hostname":"k2matu.local","reqId":"req-1n","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player2', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 2.0
{"level":30,"time":1745577692672,"pid":2142,"hostname":"k2matu.local","reqId":"req-1n","res":{"statusCode":201},"responseTime":1.1808748245239258,"msg":"request completed"}
{"level":30,"time":1745577692672,"pid":2142,"hostname":"k2matu.local","reqId":"req-1o","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player3', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 3.0
{"level":30,"time":1745577692673,"pid":2142,"hostname":"k2matu.local","reqId":"req-1o","res":{"statusCode":201},"responseTime":0.9721670150756836,"msg":"request completed"}
{"level":30,"time":1745577692674,"pid":2142,"hostname":"k2matu.local","reqId":"req-1p","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player4', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 4.0
{"level":30,"time":1745577692675,"pid":2142,"hostname":"k2matu.local","reqId":"req-1p","res":{"statusCode":201},"responseTime":1.0082907676696777,"msg":"request completed"}
{"level":30,"time":1745577692675,"pid":2142,"hostname":"k2matu.local","reqId":"req-1q","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player5', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 5.0
{"level":30,"time":1745577692676,"pid":2142,"hostname":"k2matu.local","reqId":"req-1q","res":{"statusCode":201},"responseTime":0.8727908134460449,"msg":"request completed"}
{"level":30,"time":1745577692676,"pid":2142,"hostname":"k2matu.local","reqId":"req-1r","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player6', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 6.0
{"level":30,"time":1745577692677,"pid":2142,"hostname":"k2matu.local","reqId":"req-1r","res":{"statusCode":201},"responseTime":0.913416862487793,"msg":"request completed"}
{"level":30,"time":1745577692677,"pid":2142,"hostname":"k2matu.local","reqId":"req-1s","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player7', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 7.0
{"level":30,"time":1745577692678,"pid":2142,"hostname":"k2matu.local","reqId":"req-1s","res":{"statusCode":201},"responseTime":0.9887919425964355,"msg":"request completed"}
{"level":30,"time":1745577692678,"pid":2142,"hostname":"k2matu.local","reqId":"req-1t","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player8', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 8.0
{"level":30,"time":1745577692679,"pid":2142,"hostname":"k2matu.local","reqId":"req-1t","res":{"statusCode":201},"responseTime":1.1560420989990234,"msg":"request completed"}
{"level":30,"time":1745577692679,"pid":2142,"hostname":"k2matu.local","reqId":"req-1u","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
        # Subtest: POST `/players` returns 400 when max players limit is reached
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 4 - POST `/players` returns 400 when max players limit is reached # time=8.785ms
        
SELECT * FROM players WHERE id = '8' AND user_id = 1.0
        # Subtest: GET `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 5 - GET `/players/:id` returns 404 when unauthorized # time=0.685ms
        
SELECT * FROM players WHERE id = '100' AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 6 - GET `/players/:id` returns 404 when player does not exist # time=0.512ms
        
SELECT * FROM players WHERE id = '8' AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 200 with valid data
            ok 1 - should be equal
            ok 2 - should be equivalent
            1..2
        ok 7 - GET `/players/:id` returns 200 with valid data # time=0.674ms
        
DELETE FROM players WHERE id = '3' and user_id = 1.0
        # Subtest: DELETE `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 8 - DELETE `/players/:id` returns 404 when unauthorized # time=0.563ms
        
DELETE FROM players WHERE id = '100' and user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 9 - DELETE `/players/:id` returns 404 when player does not exist # time=0.502ms
        
DELETE FROM players WHERE id = '3' and user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 200 on success
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 10 - DELETE `/players/:id` returns 200 on success # time=1.122ms
        
SELECT * FROM players WHERE user_id = 2.0
        # Subtest: GET `/players` returns remaining players
            ok 1 - should be equal
            ok 2 - should be equivalent
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 11 - GET `/players` returns remaining players # time=1.086ms
        
{"level":30,"time":1745577692680,"pid":2142,"hostname":"k2matu.local","reqId":"req-1u","res":{"statusCode":400},"responseTime":0.3690829277038574,"msg":"request completed"}
{"level":30,"time":1745577692680,"pid":2142,"hostname":"k2matu.local","reqId":"req-1v","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692681,"pid":2142,"hostname":"k2matu.local","reqId":"req-1v","res":{"statusCode":404},"responseTime":0.28299999237060547,"msg":"request completed"}
{"level":30,"time":1745577692681,"pid":2142,"hostname":"k2matu.local","reqId":"req-1w","req":{"method":"GET","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692681,"pid":2142,"hostname":"k2matu.local","reqId":"req-1w","res":{"statusCode":404},"responseTime":0.21291589736938477,"msg":"request completed"}
{"level":30,"time":1745577692682,"pid":2142,"hostname":"k2matu.local","reqId":"req-1x","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692682,"pid":2142,"hostname":"k2matu.local","reqId":"req-1x","res":{"statusCode":200},"responseTime":0.28350019454956055,"msg":"request completed"}
{"level":30,"time":1745577692682,"pid":2142,"hostname":"k2matu.local","reqId":"req-1y","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692683,"pid":2142,"hostname":"k2matu.local","reqId":"req-1y","res":{"statusCode":404},"responseTime":0.2512502670288086,"msg":"request completed"}
{"level":30,"time":1745577692683,"pid":2142,"hostname":"k2matu.local","reqId":"req-1z","req":{"method":"DELETE","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692683,"pid":2142,"hostname":"k2matu.local","reqId":"req-1z","res":{"statusCode":404},"responseTime":0.21299982070922852,"msg":"request completed"}
{"level":30,"time":1745577692684,"pid":2142,"hostname":"k2matu.local","reqId":"req-20","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692684,"pid":2142,"hostname":"k2matu.local","reqId":"req-20","res":{"statusCode":200},"responseTime":0.7714591026306152,"msg":"request completed"}
{"level":30,"time":1745577692685,"pid":2142,"hostname":"k2matu.local","reqId":"req-21","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692685,"pid":2142,"hostname":"k2matu.local","reqId":"req-21","res":{"statusCode":200},"responseTime":0.43104076385498047,"msg":"request completed"}
{"level":30,"time":17455776SELECT * FROM players WHERE id = '1' and user_id = 1.0
        # Subtest: PUT `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 12 - PUT `/players/:id` returns 404 when unauthorized # time=2.391ms
        
SELECT * FROM players WHERE id = '100' and user_id = 2.0
        # Subtest: PUT `/players/:id` returns 404 for invalid id
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 13 - PUT `/players/:id` returns 404 for invalid id # time=0.676ms
        
SELECT * FROM players WHERE id = '1' and user_id = 2.0
SELECT * FROM players WHERE display_name = 'Player7'
        # Subtest: PUT `/players/:id` returns 400 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 14 - PUT `/players/:id` returns 400 for duplicate display_name # time=0.8ms
        
SELECT * FROM players WHERE id = '1' and user_id = 2.0
SELECT * FROM players WHERE display_name = 'updatedPlayer'
UPDATE players SET display_name = 'updatedPlayer', avatar_url = 'notnull.com' WHERE id = '1'
        # Subtest: PUT `/players/:id` returns 200 when update is successful
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 15 - PUT `/players/:id` returns 200 when update is successful # time=1.631ms
        
        1..15
    ok 4 - POST `/login` # time=175.244ms
    
SELECT * FROM users WHERE username = 'kim'
UPDATE users
			SET online_status = TRUE
			WHERE id = 2.0 
			AND online_status = FALSE
			
SELECT * FROM users WHERE username = 'lumi'
92686,"pid":2142,"hostname":"k2matu.local","reqId":"req-22","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
UPDATE users
			SET online_status = TRUE
			WHERE id = 1.0 
			AND online_status = FALSE
			

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
        
    # Subtest: POST `/login`
        # Subtest: GET `/match-histories` returns 200 empty array when no matches found for user
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/match-histories` returns 200 empty array when no matches found for user # time=8.589ms
        
{"level":30,"time":1745577692688,"pid":2142,"hostname":"k2matu.local","reqId":"req-22","res":{"statusCode":404},"responseTime":2.006124973297119,"msg":"request completed"}
{"level":30,"time":1745577692689,"pid":2142,"hostname":"k2matu.local","reqId":"req-23","req":{"method":"PUT","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692689,"pid":2142,"hostname":"k2matu.local","reqId":"req-23","res":{"statusCode":404},"responseTime":0.3587498664855957,"msg":"request completed"}
{"level":30,"time":1745577692689,"pid":2142,"hostname":"k2matu.local","reqId":"req-24","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692690,"pid":2142,"hostname":"k2matu.local","reqId":"req-24","res":{"statusCode":400},"responseTime":0.38670825958251953,"msg":"request completed"}
{"level":30,"time":1745577692690,"pid":2142,"hostname":"k2matu.local","reqId":"req-25","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692691,"pid":2142,"hostname":"k2matu.local","reqId":"req-25","res":{"statusCode":200},"responseTime":1.1781673431396484,"msg":"request completed"}
{"level":30,"time":1745577692692,"pid":2142,"hostname":"k2matu.local","reqId":"req-26","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692764,"pid":2142,"hostname":"k2matu.local","reqId":"req-26","res":{"statusCode":200},"responseTime":71.72749996185303,"msg":"request completed"}
{"level":30,"time":1745577692764,"pid":2142,"hostname":"k2matu.local","reqId":"req-27","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692835,"pid":2142,"hostname":"k2matu.local","reqId":"req-27","res":{"statusCode":200},"responseTime":70.40245819091797,"msg":"request completed"}
{"level":30,"time":1745577692843,"pid":2142,"hostname":"k2matu.local","reqId":"req-28","req":{"method":"GET","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692844,"pid":2142,"hostname":"k2matu.local","reqId":"req-28","res":{"statusCode":200},"responseTime":0.47191667556762695,"msg":"request completed"}
{"level":30,"time":1745577692844,"pid":2142,"hostname":"k2matu.local","reqId":"req-29","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/match-histories` returns 500 when missing one player
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 2 - POST `/match-histories` returns 500 when missing one player # time=1.279ms
        
{"level":30,"time":1745577692845,"pid":2142,"hostname":"k2matu.local","reqId":"req-29","res":{"statusCode":400},"responseTime":0.7654590606689453,"msg":"request completed"}
{"level":30,"time":1745577692846,"pid":2142,"hostname":"k2matu.local","reqId":"req-2a","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 100.0)
ROLLBACK
SqliteError: FOREIGN KEY constraint failed
    at [90mfile:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/matchHistoryController.js:115:31
    at sqliteTransaction [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mbetter-sqlite3[24m/lib/methods/transaction.js:65:24[90m)[39m
    at Object.createMatchHistory [90m(file:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/matchHistoryController.js:120:9[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at [90m/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:214:9
[90m    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)[39m {
  code: [32m'SQLITE_CONSTRAINT_FOREIGNKEY'[39m
}
        # Subtest: POST `/match-histories` returns 500 when player does not exist
            ok 1 - Status code 500
            ok 2 - should be equal
            1..2
        ok 3 - POST `/match-histories` returns 500 when player does not exist # time=2.689ms
        
{"level":30,"time":1745577692848,"pid":2142,"hostname":"k2matu.local","reqId":"req-2a","res":{"statusCode":500},"responseTime":2.1725001335144043,"msg":"request completed"}
{"level":30,"time":1745577692848,"pid":2142,"hostname":"k2matu.local","reqId":"req-2b","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 1.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 2.0)
COMMIT
        # Subtest: POST `/match-histories` returns 200 when succesfully created match
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 4 - POST `/match-histories` returns 200 when succesfully created match # time=1.639ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = '200'
            
        # Subtest: GET `/match-histories/200` returns 404 match not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 5 - GET `/match-histories/200` returns 404 match not found # time=0.695ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = '1'
            
        # Subtest: GET `/match-histories/1` returns 200
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 6 - GET `/match-histories/1` returns 200 # time=0.947ms
        
SELECT * FROM match_history WHERE id = '1' AND user_id = 1.0
        # Subtest: PUT /match-histories/:id returns 403 when unauthorized
            ok 1 - Status code 403
            ok 2 - should be equal
            1..2
        ok 7 - PUT /match-histories/:id returns 403 when unauthorized # time=1.212ms
        
SELECT * FROM match_history WHERE id = '100' AND user_id = 2.0
        # Subtest: PUT /match-histories/:id returns 403 when match not found
            ok 1 - Status code 403
            ok 2 - should be equal
            1..2
        ok 8 - PUT /match-histories/:id returns 403 when match not found # time=0.712ms
        
        # Subtest: PUT /match-histories/:id returns 400 when missing score
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 9 - PUT /match-histories/:id returns 400 when missing score # time=0.766ms
        
SELECT * FROM match_history WHERE id = '1' AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = '1' and player_id = 1.0

        UPDATE match_player_history SET
        score = 2.0 WHERE match_id = '1' AND player_id = 1.0  
    
SELECT * FROM match_player_history WHERE match_id = '1' and player_id = 4.0
COMMIT
        # Subtest: PUT /match-histories/:id returns 404 when player not in match
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 10 - PUT /match-histories/:id returns 404 when player not in match # time=2.133ms
        
        # Subtest: PUT /match-histories/:id returns 404 when winner not a player
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 11 - PUT /match-histories/:id returns 404 when winner not a player # time=0.639ms
        
SELECT * FROM match_history WHERE id = '1' AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = '1' and player_id = 1.0

        UPDATE match_player_history SET
        score = 2.0 WHERE match_id = '1' AND player_id = 1.0  
    
UPDATE players SET losses = losses + 1 WHERE id = 1.0
SELECT * FROM match_player_history WHERE match_id = '1' and player_id = 2.0

        UPDATE match_player_history SET
        score = 3.0 WHERE match_id = '1' AND player_id = 2.0  
    
SELECT * FROM match_winner_history WHERE match_id = '1' AND winner_id = 2.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES ('1', 2.0)
UPDATE players SET wins = wins + 1 WHERE id = 2.0
COMMIT
        # Subtest: PUT /match-histories/:id returns 200 on success
            ok 1 - Status code 200
            ok 2 - should be equal

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = '1'
            
            ok 3 - should be equivalent
            1..3
        ok 12 - PUT /match-histories/:id returns 200 on success # time=2.512ms
        
DELETE FROM match_history WHERE id = '1' AND user_id = 1.0
        # Subtest: DELETE /match-histories/:id returns 404 when unauthoritized
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 13 - DELETE /match-histories/:id returns 404 when unauthoritized # time=0.741ms
        
DELETE FROM match_history WHERE id = '100' AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 404 when match does not exist
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 14 - DELETE /match-histories/:id returns 404 when match does not exist # time=0.527ms
        
DELETE FROM match_history WHERE id = '1' AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 200 on success
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 15 - DELETE /match-histories/:id returns 200 on success # time=1.061ms
        
        1..15
    ok 5 - POST `/login` # time=171.146ms
    
    1..5
🧹 testPong.db wiped clean for next test
ok 1 - All Test # time=2194.859ms

{"level":30,"time":1745577692850,"pid":2142,"hostname":"k2matu.local","reqId":"req-2b","res":{"statusCode":200},"responseTime":1.2330002784729004,"msg":"request completed"}
{"level":30,"time":1745577692850,"pid":2142,"hostname":"k2matu.local","reqId":"req-2c","req":{"method":"GET","url":"/match-histories/200","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692851,"pid":2142,"hostname":"k2matu.local","reqId":"req-2c","res":{"statusCode":404},"responseTime":0.32312488555908203,"msg":"request completed"}
{"level":30,"time":1745577692851,"pid":2142,"hostname":"k2matu.local","reqId":"req-2d","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692851,"pid":2142,"hostname":"k2matu.local","reqId":"req-2d","res":{"statusCode":200},"responseTime":0.3796248435974121,"msg":"request completed"}
{"level":30,"time":1745577692852,"pid":2142,"hostname":"k2matu.local","reqId":"req-2e","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692853,"pid":2142,"hostname":"k2matu.local","reqId":"req-2e","res":{"statusCode":403},"responseTime":0.836249828338623,"msg":"request completed"}
{"level":30,"time":1745577692853,"pid":2142,"hostname":"k2matu.local","reqId":"req-2f","req":{"method":"PUT","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692854,"pid":2142,"hostname":"k2matu.local","reqId":"req-2f","res":{"statusCode":403},"responseTime":0.372042179107666,"msg":"request completed"}
{"level":30,"time":1745577692854,"pid":2142,"hostname":"k2matu.local","reqId":"req-2g","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692854,"pid":2142,"hostname":"k2matu.local","reqId":"req-2g","res":{"statusCode":400},"err":{"type":"Error","message":"body/players/1 must have required property 'score'","stack":"Error: body/players/1 must have required property 'score'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/players/1","schemaPath":"#/properties/players/items/required","keyword":"required","params":{"missingProperty":"score"},"message":"must have required property 'score'"}],"validationContext":"body"},"msg":"body/players/1 must have required property 'score'"}
{"level":30,"time":1745577692855,"pid":2142,"hostname":"k2matu.local","reqId":"req-2g","res":{"statusCode":400},"responseTime":0.4484996795654297,"msg":"request completed"}
{"level":30,"time":1745577692855,"pid":2142,"hostname":"k2matu.local","reqId":"req-2h","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692856,"pid":2142,"hostname":"k2matu.local","reqId":"req-2h","res":{"statusCode":404},"responseTime":0.8650422096252441,"msg":"request completed"}
{"level":40,"time":1745577692856,"pid":2142,"hostname":"k2matu.local","reqId":"req-2h","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.updateMatchHistory (file:///Users/kale/Desktop/ft_transcendence/backend/controllers/matchHistoryController.js:176:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?"}
{"level":30,"time":1745577692857,"pid":2142,"hostname":"k2matu.local","reqId":"req-2i","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692858,"pid":2142,"hostname":"k2matu.local","reqId":"req-2i","res":{"statusCode":400},"responseTime":0.3021669387817383,"msg":"request completed"}
{"level":30,"time":1745577692858,"pid":2142,"hostname":"k2matu.local","reqId":"req-2j","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692860,"pid":2142,"hostname":"k2matu.local","reqId":"req-2j","res":{"statusCode":200},"responseTime":1.5683341026306152,"msg":"request completed"}
{"level":30,"time":1745577692860,"pid":2142,"hostname":"k2matu.local","reqId":"req-2k","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692860,"pid":2142,"hostname":"k2matu.local","reqId":"req-2k","res":{"statusCode":200},"responseTime":0.24470901489257812,"msg":"request completed"}
{"level":30,"time":1745577692861,"pid":2142,"hostname":"k2matu.local","reqId":"req-2l","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692861,"pid":2142,"hostname":"k2matu.local","reqId":"req-2l","res":{"statusCode":404},"responseTime":0.2845001220703125,"msg":"request completed"}
{"level":30,"time":1745577692861,"pid":2142,"hostname":"k2matu.local","reqId":"req-2m","req":{"method":"DELETE","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692862,"pid":2142,"hostname":"k2matu.local","reqId":"req-2m","res":{"statusCode":404},"responseTime":0.23799991607666016,"msg":"request completed"}
{"level":30,"time":1745577692862,"pid":2142,"hostname":"k2matu.local","reqId":"req-2n","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745577692863,"pid":2142,"hostname":"k2matu.local","reqId":"req-2n","res":{"statusCode":200},"responseTime":0.7500410079956055,"msg":"request completed"}
1..1
