Using testPong.db

	CREATE TABLE IF NOT EXISTS users (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		username TEXT NOT NULL UNIQUE,
		email TEXT NOT NULL UNIQUE,
		password_hash TEXT NOT NULL,
		avatar_url TEXT DEFAULT NULL,
		online_status BOOLEAN DEFAULT FALSE,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	)

PRAGMA foreign_keys = ON

	CREATE TABLE IF NOT EXISTS players (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		display_name TEXT NOT NULL UNIQUE,
		wins INTEGER DEFAULT 0,
		losses INTEGER DEFAULT 0,
		avatar_url TEXT DEFAULT NULL,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS friends (
		user_id INTEGER,
		friend_id INTEGER,
		status TEXT DEFAULT 'pending',
		PRIMARY KEY (user_id, friend_id),
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS tournaments (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		name TEXT NOT NULL,
		status TEXT DEFAULT 'pending',
		current_round INTEGER DEFAULT 0,
		winner_id INTEGER,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id)
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)


	CREATE TABLE IF NOT EXISTS match_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		type TEXT NOT NULL,
		tournament_id INTEGER DEFAULT NULL,
		round INTEGER,
		date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS match_player_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		player_id INTEGER NOT NULL,
		score INTEGER DEFAULT 0 NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (player_id) REFERENCES players(id),
		UNIQUE (match_id, player_id)
	)


	CREATE TABLE IF NOT EXISTS match_winner_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		winner_id INTEGER NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)

TAP version 14
# Subtest: All Test
{"level":30,"time":1745686260872,"pid":60365,"hostname":"k2matu.local","reqId":"req-1","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users
    # Subtest: Auth Routes Suite
        # Subtest: GET `/users` returns empty array
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/users` returns empty array # time=33.359ms
        
        # Subtest: POST `/register`
            # Subtest: returns 400 if email is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if email is missing # time=135.136ms
            
{"level":30,"time":1745686260876,"pid":60365,"hostname":"k2matu.local","reqId":"req-1","res":{"statusCode":200},"responseTime":2.821791648864746,"msg":"request completed"}
{"level":30,"time":1745686261025,"pid":60365,"hostname":"k2matu.local","reqId":"req-2","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686261027,"pid":60365,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'email'","stack":"Error: body must have required property 'email'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"email"},"message":"must have required property 'email'"}],"validationContext":"body"},"msg":"body must have required property 'email'"}
{"level":30,"time":1745686261028,"pid":60365,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"responseTime":2.5793752670288086,"msg":"request completed"}
{"level":30,"time":1745686261029,"pid":60365,"hostname":"k2matu.local","reqId":"req-3","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if invalid email
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if invalid email # time=1.693ms
            
{"level":30,"time":1745686261030,"pid":60365,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"err":{"type":"Error","message":"body/email must match format \"email\"","stack":"Error: body/email must match format \"email\"\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/email","schemaPath":"#/properties/email/format","keyword":"format","params":{"format":"email"},"message":"must match format \"email\""}],"validationContext":"body"},"msg":"body/email must match format \"email\""}
{"level":30,"time":1745686261030,"pid":60365,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"responseTime":1.095250129699707,"msg":"request completed"}
{"level":30,"time":1745686261031,"pid":60365,"hostname":"k2matu.local","reqId":"req-4","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username < 3 chars
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - returns 400 if username < 3 chars # time=0.767ms
            
{"level":30,"time":1745686261031,"pid":60365,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"err":{"type":"Error","message":"body/username must NOT have fewer than 3 characters","stack":"Error: body/username must NOT have fewer than 3 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/username","schemaPath":"#/properties/username/minLength","keyword":"minLength","params":{"limit":3},"message":"must NOT have fewer than 3 characters"}],"validationContext":"body"},"msg":"body/username must NOT have fewer than 3 characters"}
{"level":30,"time":1745686261031,"pid":60365,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"responseTime":0.31241559982299805,"msg":"request completed"}
{"level":30,"time":1745686261032,"pid":60365,"hostname":"k2matu.local","reqId":"req-5","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - returns 400 if username is missing # time=0.73ms
            
{"level":30,"time":1745686261032,"pid":60365,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745686261032,"pid":60365,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"responseTime":0.30316734313964844,"msg":"request completed"}
{"level":30,"time":1745686261032,"pid":60365,"hostname":"k2matu.local","reqId":"req-6","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 5 - returns 400 if password is missing # time=0.707ms
            
            # Subtest: returns 400 if invalid password
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 6 - returns 400 if invalid password # time=0.833ms
            
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'testuse@email.com', '$2b$10$boHFcybpyQcZDhTspM7nTeDHv'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 1.0
            # Subtest: returns 201 if successfully created user
                ok 1 - Status code 201
                ok 2 - should be equal
SELECT * FROM users
                ok 3 - Status code 200
                ok 4 - One user in the database
                ok 5 - should be equivalent
                1..5
            ok 7 - returns 201 if successfully created user # time=83.965ms
            
{"level":30,"time":1745686261033,"pid":60365,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745686261033,"pid":60365,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"responseTime":0.27733421325683594,"msg":"request completed"}
{"level":30,"time":1745686261033,"pid":60365,"hostname":"k2matu.local","reqId":"req-7","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'new@email.com', '$2b$10$tBZCZcwDhJfleGR6sldpdet.J'/*+28 bytes*/)
            # Subtest: returns 400 if duplicate name
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 8 - returns 400 if duplicate name # time=72.04ms
            
{"level":30,"time":1745686261034,"pid":60365,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"err":{"type":"Error","message":"body/password must NOT have fewer than 6 characters","stack":"Error: body/password must NOT have fewer than 6 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/password","schemaPath":"#/properties/password/minLength","keyword":"minLength","params":{"limit":6},"message":"must NOT have fewer than 6 characters"}],"validationContext":"body"},"msg":"body/password must NOT have fewer than 6 characters"}
{"level":30,"time":1745686261034,"pid":60365,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"responseTime":0.3886251449584961,"msg":"request completed"}
{"level":30,"time":1745686261034,"pid":60365,"hostname":"k2matu.local","reqId":"req-8","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686261116,"pid":60365,"hostname":"k2matu.local","reqId":"req-8","res":{"statusCode":201},"responseTime":81.81670904159546,"msg":"request completed"}
{"level":30,"time":1745686261117,"pid":60365,"hostname":"k2matu.local","reqId":"req-9","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686261117,"pid":60365,"hostname":"k2matu.local","reqId":"req-9","res":{"statusCode":200},"responseTime":0.4956674575805664,"msg":"request completed"}
{"level":30,"time":1745686261119,"pid":60365,"hostname":"k2matu.local","reqId":"req-a","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686261190,"pid":60365,"hostname":"k2matu.local","reqId":"req-a","res":{"statusCode":409},"responseTime":71.31616687774658,"msg":"request completed"}
{"level":30,"time":1745686261191,"pid":60365,"hostname":"k2matu.local","reqId":"req-b","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('newuser', 'testuse@email.com', '$2b$10$fTOBh3/3NKnxqB1SoPKJAu2hp'/*+28 bytes*/)
{"level":30,"time":1745686261262,"pid":60365,"hostname":"k2matu.local","reqId":"req-b","res":{"statusCode":409},"responseTime":71.62258434295654,"msg":"request completed"}
            # Subtest: returns 400 if duplicate email
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 9 - returns 400 if duplicate email # time=72.457ms
            
{"level":30,"time":1745686261264,"pid":60365,"hostname":"k2matu.local","reqId":"req-c","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('kim', 'kim@email.com', '$2b$10$B1LnK5x/ECMP/W/mKrrbru3ez'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 2.0
{"level":30,"time":1745686261335,"pid":60365,"hostname":"k2matu.local","reqId":"req-c","res":{"statusCode":201},"responseTime":71.65875005722046,"msg":"request completed"}
            # Subtest: returns 201 if successfully created another user
                ok 1 - Status code 201
                ok 2 - should be equal
                1..2
            ok 10 - returns 201 if successfully created another user # time=72.39ms
            
            1..10
        ok 2 - POST `/register` # time=457.904ms
        
{"level":30,"time":1745686261498,"pid":60365,"hostname":"k2matu.local","reqId":"req-d","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/login`
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if username is missing # time=131.195ms
            
{"level":30,"time":1745686261499,"pid":60365,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745686261500,"pid":60365,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"responseTime":1.4925003051757812,"msg":"request completed"}
{"level":30,"time":1745686261501,"pid":60365,"hostname":"k2matu.local","reqId":"req-e","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if password is missing # time=0.803ms
            
{"level":30,"time":1745686261501,"pid":60365,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745686261501,"pid":60365,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"responseTime":0.3408327102661133,"msg":"request completed"}
{"level":30,"time":1745686261502,"pid":60365,"hostname":"k2matu.local","reqId":"req-f","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'nonexistentuser'
            # Subtest: returns 401 if user not found
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 3 - returns 401 if user not found # time=1.217ms
            
{"level":30,"time":1745686261502,"pid":60365,"hostname":"k2matu.local","reqId":"req-f","res":{"statusCode":401},"responseTime":0.592958927154541,"msg":"request completed"}
{"level":30,"time":1745686261503,"pid":60365,"hostname":"k2matu.local","reqId":"req-g","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
{"level":30,"time":1745686261574,"pid":60365,"hostname":"k2matu.local","reqId":"req-g","res":{"statusCode":401},"responseTime":70.89087533950806,"msg":"request completed"}
            # Subtest: returns 401 if password is incorrect
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 4 - returns 401 if password is incorrect # time=71.584ms
            
{"level":30,"time":1745686261575,"pid":60365,"hostname":"k2matu.local","reqId":"req-h","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
{"level":30,"time":1745686261648,"pid":60365,"hostname":"k2matu.local","reqId":"req-h","res":{"statusCode":200},"responseTime":73.13641738891602,"msg":"request completed"}
            # Subtest: returns 200 if login is successful
                ok 1 - Status code 200
                ok 2 - Token is present
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = '2'
                ok 4 - Status code 200
                ok 5 - should be equivalent
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
            SET online_status = FALSE 
            WHERE id = 2.0 
            AND online_status = TRUE
        
                # Subtest: POST `/logout`
                    # Subtest: returns 200 if logout is successful
                        ok 1 - Status code 200
                        ok 2 - should be equal
SELECT * FROM users WHERE id = '2'
                        ok 3 - Status code 200
                        ok 4 - should be equivalent
                        1..4
                    ok 1 - returns 200 if logout is successful # time=13.598ms
                    
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
            SET online_status = FALSE 
            WHERE id = 2.0 
            AND online_status = TRUE
        
                    # Subtest: returns 400 if user already logged out
                        ok 1 - Status code 404
                        ok 2 - should be equal
                        1..2
                    ok 2 - returns 400 if user already logged out # time=0.967ms
                    
                    1..2
                ok 6 - POST `/logout` # time=25.919ms
                
                1..6
            ok 5 - returns 200 if login is successful # time=101.332ms
            
            1..5
        ok 3 - POST `/login` # time=339.892ms
        
        1..3
    ok 1 - Auth Routes Suite # time=841.988ms
    
SELECT * FROM users
    # Subtest: User Routes Suite
        # Subtest: GET `/users` returns two users
            ok 1 - Status code 200
            ok 2 - Two user in the database
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 1 - GET `/users` returns two users # time=257.599ms
        
SELECT * FROM users WHERE id = '2'
        # Subtest: GET `/users/:id` returns second user
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 2 - GET `/users/:id` returns second user # time=0.707ms
        
SELECT * FROM users WHERE id = '3'
        # Subtest: GET `/users/:id` returns 404 user not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 3 - GET `/users/:id` returns 404 user not found # time=0.488ms
        
{"level":30,"time":1745686261649,"pid":60365,"hostname":"k2matu.local","reqId":"req-i","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686261649,"pid":60365,"hostname":"k2matu.local","reqId":"req-i","res":{"statusCode":200},"responseTime":0.31566667556762695,"msg":"request completed"}
{"level":30,"time":1745686261671,"pid":60365,"hostname":"k2matu.local","reqId":"req-j","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686261673,"pid":60365,"hostname":"k2matu.local","reqId":"req-j","res":{"statusCode":200},"responseTime":2.053708076477051,"msg":"request completed"}
{"level":30,"time":1745686261674,"pid":60365,"hostname":"k2matu.local","reqId":"req-k","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686261674,"pid":60365,"hostname":"k2matu.local","reqId":"req-k","res":{"statusCode":200},"responseTime":0.2379169464111328,"msg":"request completed"}
{"level":30,"time":1745686261675,"pid":60365,"hostname":"k2matu.local","reqId":"req-l","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686261675,"pid":60365,"hostname":"k2matu.local","reqId":"req-l","res":{"statusCode":404},"responseTime":0.4274158477783203,"msg":"request completed"}
{"level":30,"time":1745686262037,"pid":60365,"hostname":"k2matu.local","reqId":"req-m","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262037,"pid":60365,"hostname":"k2matu.local","reqId":"req-m","res":{"statusCode":200},"responseTime":0.44549989700317383,"msg":"request completed"}
{"level":30,"time":1745686262038,"pid":60365,"hostname":"k2matu.local","reqId":"req-n","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262038,"pid":60365,"hostname":"k2matu.local","reqId":"req-n","res":{"statusCode":200},"responseTime":0.24145793914794922,"msg":"request completed"}
{"level":30,"time":1745686262039,"pid":60365,"hostname":"k2matu.local","reqId":"req-o","req":{"method":"GET","url":"/users/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262039,"pid":60365,"hostname":"k2matu.local","reqId":"req-o","res":{"statusCode":404},"responseTime":0.1632089614868164,"msg":"request completed"}
{"level":30,"time":1745686262039,"pid":60365,"hostname":"k2matu.local","reqId":"req-p","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'testuser'
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
{"level":30,"time":1745686262112,"pid":60365,"hostname":"k2matu.local","reqId":"req-p","res":{"statusCode":200},"responseTime":72.80983400344849,"msg":"request completed"}
{"level":30,"time":1745686262116,"pid":60365,"hostname":"k2matu.local","reqId":"req-q","req":{"method":"PUT","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: PUT `/users/:id`
            # Subtest: PUT `/users/2` returns 403 if unauthoritized
                ok 1 - Status code 403
                ok 2 - should be equal
                1..2
            ok 1 - PUT `/users/2` returns 403 if unauthoritized # time=3.585ms
            
{"level":30,"time":1745686262116,"pid":60365,"hostname":"k2matu.local","reqId":"req-q","res":{"statusCode":403},"responseTime":0.5152502059936523,"msg":"request completed"}
{"level":30,"time":1745686262117,"pid":60365,"hostname":"k2matu.local","reqId":"req-r","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'kim'
            # Subtest: PUT `/users/1` returns 400 if username already taken
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - PUT `/users/1` returns 400 if username already taken # time=0.855ms
            
{"level":30,"time":1745686262117,"pid":60365,"hostname":"k2matu.local","reqId":"req-r","res":{"statusCode":400},"responseTime":0.45116710662841797,"msg":"request completed"}
{"level":30,"time":1745686262118,"pid":60365,"hostname":"k2matu.local","reqId":"req-s","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'kim@email.com'
            # Subtest: PUT `/users/1` returns 400 if email already in use
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - PUT `/users/1` returns 400 if email already in use # time=0.708ms
            
{"level":30,"time":1745686262118,"pid":60365,"hostname":"k2matu.local","reqId":"req-s","res":{"statusCode":400},"responseTime":0.3417501449584961,"msg":"request completed"}
{"level":30,"time":1745686262119,"pid":60365,"hostname":"k2matu.local","reqId":"req-t","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'new@email.com'

            UPDATE users
            SET username = 'testuser', password_hash = '$2b$10$boHFcybpyQcZDhTspM7nTeDHv'/*+28 bytes*/, email = 'new@email.com', avatar_url = NULL
            WHERE id = 1.0
        
            # Subtest: PUT `/users/1` returns 200 if email updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 4 - PUT `/users/1` returns 200 if email updated # time=2.142ms
            
{"level":30,"time":1745686262120,"pid":60365,"hostname":"k2matu.local","reqId":"req-t","res":{"statusCode":200},"responseTime":1.4296669960021973,"msg":"request completed"}
{"level":30,"time":1745686262121,"pid":60365,"hostname":"k2matu.local","reqId":"req-u","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'lumi'

            UPDATE users
            SET username = 'lumi', password_hash = '$2b$10$boHFcybpyQcZDhTspM7nTeDHv'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
            WHERE id = 1.0
        
            # Subtest: PUT `/users/1` returns 200 if username and avatar_url updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = '1'
                ok 4 - Status code 200
                ok 5 - should be equivalent
                1..5
            ok 5 - PUT `/users/1` returns 200 if username and avatar_url updated # time=2.522ms
            
{"level":30,"time":1745686262122,"pid":60365,"hostname":"k2matu.local","reqId":"req-u","res":{"statusCode":200},"responseTime":1.1968340873718262,"msg":"request completed"}
{"level":30,"time":1745686262123,"pid":60365,"hostname":"k2matu.local","reqId":"req-v","req":{"method":"GET","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262123,"pid":60365,"hostname":"k2matu.local","reqId":"req-v","res":{"statusCode":200},"responseTime":0.2172088623046875,"msg":"request completed"}
{"level":30,"time":1745686262124,"pid":60365,"hostname":"k2matu.local","reqId":"req-w","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0

            UPDATE users
            SET username = 'lumi', password_hash = '$2b$10$NEGQgDssh7ECHe/1mo7g3.df4'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
            WHERE id = 1.0
        
{"level":30,"time":1745686262198,"pid":60365,"hostname":"k2matu.local","reqId":"req-w","res":{"statusCode":200},"responseTime":74.65720796585083,"msg":"request completed"}
            # Subtest: PUT `/users/1` returns 200 if password updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
{"level":30,"time":1745686262199,"pid":60365,"hostname":"k2matu.local","reqId":"req-x","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
{"level":30,"time":1745686262269,"pid":60365,"hostname":"k2matu.local","reqId":"req-x","res":{"statusCode":401},"responseTime":69.6116247177124,"msg":"request completed"}
                ok 4 - Status code 401
                ok 5 - should be equal
{"level":30,"time":1745686262269,"pid":60365,"hostname":"k2matu.local","reqId":"req-y","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
{"level":30,"time":1745686262339,"pid":60365,"hostname":"k2matu.local","reqId":"req-y","res":{"statusCode":200},"responseTime":70.161208152771,"msg":"request completed"}
                ok 6 - Token is present
                ok 7 - Status code 200
                ok 8 - should be equivalent
                1..8
            ok 6 - PUT `/users/1` returns 200 if password updated # time=216.122ms
            
            1..6
        ok 4 - PUT `/users/:id` # time=300.709ms
        
        1..4
    ok 2 - User Routes Suite # time=663.648ms
    
{"level":30,"time":1745686262340,"pid":60365,"hostname":"k2matu.local","reqId":"req-z","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
{"level":30,"time":1745686262411,"pid":60365,"hostname":"k2matu.local","reqId":"req-z","res":{"statusCode":200},"responseTime":70.88104057312012,"msg":"request completed"}

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
    # Subtest: POST `/login`
        # Subtest: GET `/friends` returns 404 when no friends found for user
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 1 - GET `/friends` returns 404 when no friends found for user # time=7.292ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
        # Subtest: PATCH `/friends-requests/2` returns 404 when friend request not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 2 - PATCH `/friends-requests/2` returns 404 when friend request not found # time=0.783ms
        
        # Subtest: POST `/friend-requests/:id`
            # Subtest: POST `/friend-requests/1` returns 400 when request to itself
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - POST `/friend-requests/1` returns 400 when request to itself # time=43.191ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 0.0 AND friend_id = 1.0
            OR friend_id = 0.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 0.0)
        
SqliteError: FOREIGN KEY constraint failed
    at Object.sendFriendRequest [90m(file:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/friendController.js:80:12[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m {
  code: [32m'SQLITE_CONSTRAINT_FOREIGNKEY'[39m
}
            # Subtest: POST `/friend-requests/0` returns 500 when invalid id
                ok 1 - Status code 500
                ok 2 - should be equal
                1..2
            ok 2 - POST `/friend-requests/0` returns 500 when invalid id # time=2.62ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
            # Subtest: POST `/friend-requests/2` returns 200 when successfully sent
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 3 - POST `/friend-requests/2` returns 200 when successfully sent # time=2.191ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        
            # Subtest: POST `/friend-requests/2` returns 409 when friend request already exists
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 4 - POST `/friend-requests/2` returns 409 when friend request already exists # time=0.83ms
            
            1..4
        ok 3 - POST `/friend-requests/:id` # time=64.346ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 6.0) OR (user_id = 6.0 AND friend_id = 1.0)
        
        # Subtest: GET `/friends/:id/status`
            # Subtest: GET `/friends/:id/status` returns 404 when friend not found
                ok 1 - Status code 404
                ok 2 - should be equal
                1..2
            ok 1 - GET `/friends/:id/status` returns 404 when friend not found # time=33.551ms
            

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
            # Subtest: GET `/friends/:id/status` returns 400 when friend request pending
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - GET `/friends/:id/status` returns 400 when friend request pending # time=0.654ms
            
            1..2
        ok 4 - GET `/friends/:id/status` # time=67.882ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friends-requests/2` returns 400 waiting for friend to accept request
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 5 - PATCH `/friends-requests/2` returns 400 waiting for friend to accept request # time=0.601ms
        
{"level":30,"time":1745686262419,"pid":60365,"hostname":"k2matu.local","reqId":"req-10","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262419,"pid":60365,"hostname":"k2matu.local","reqId":"req-10","res":{"statusCode":404},"responseTime":0.5516252517700195,"msg":"request completed"}
{"level":30,"time":1745686262420,"pid":60365,"hostname":"k2matu.local","reqId":"req-11","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262420,"pid":60365,"hostname":"k2matu.local","reqId":"req-11","res":{"statusCode":404},"responseTime":0.3759160041809082,"msg":"request completed"}
{"level":30,"time":1745686262478,"pid":60365,"hostname":"k2matu.local","reqId":"req-12","req":{"method":"POST","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262478,"pid":60365,"hostname":"k2matu.local","reqId":"req-12","res":{"statusCode":400},"responseTime":0.2919168472290039,"msg":"request completed"}
{"level":30,"time":1745686262479,"pid":60365,"hostname":"k2matu.local","reqId":"req-13","req":{"method":"POST","url":"/friend-requests/0","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262481,"pid":60365,"hostname":"k2matu.local","reqId":"req-13","res":{"statusCode":500},"responseTime":2.0489158630371094,"msg":"request completed"}
{"level":30,"time":1745686262482,"pid":60365,"hostname":"k2matu.local","reqId":"req-14","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262483,"pid":60365,"hostname":"k2matu.local","reqId":"req-14","res":{"statusCode":200},"responseTime":1.4850831031799316,"msg":"request completed"}
{"level":30,"time":1745686262484,"pid":60365,"hostname":"k2matu.local","reqId":"req-15","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262485,"pid":60365,"hostname":"k2matu.local","reqId":"req-15","res":{"statusCode":409},"responseTime":0.3987917900085449,"msg":"request completed"}
{"level":30,"time":1745686262551,"pid":60365,"hostname":"k2matu.local","reqId":"req-16","req":{"method":"GET","url":"/friends/6/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262552,"pid":60365,"hostname":"k2matu.local","reqId":"req-16","res":{"statusCode":404},"responseTime":0.4862079620361328,"msg":"request completed"}
{"level":30,"time":1745686262552,"pid":60365,"hostname":"k2matu.local","reqId":"req-17","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262553,"pid":60365,"hostname":"k2matu.local","reqId":"req-17","res":{"statusCode":400},"responseTime":0.26258373260498047,"msg":"request completed"}
{"level":30,"time":1745686262553,"pid":60365,"hostname":"k2matu.local","reqId":"req-18","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262553,"pid":60365,"hostname":"k2matu.local","reqId":"req-18","res":{"statusCode":400},"responseTime":0.23704099655151367,"msg":"request completed"}
{"level":30,"time":1745686262554,"pid":60365,"hostname":"k2matu.local","reqId":"req-19","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
{"level":30,"time":1745686262625,"pid":60365,"hostname":"k2matu.local","reqId":"req-19","res":{"statusCode":200},"responseTime":71.56583404541016,"msg":"request completed"}
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0

            UPDATE friends 
            SET status = 'accepted' 
            WHERE user_id = 1.0 AND friend_id = 2.0
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
        # Subtest: PATCH `/friends-requests/2` returns 200 accept friend request
            ok 1 - Status code 200
            ok 2 - should be equal
            ok 3 - should be equivalent
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
            # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - PATCH `/friend-requests/2` returns 400 when already friends # time=0.912ms
            
            1..4
        ok 6 - PATCH `/friends-requests/2` returns 200 accept friend request # time=75.307ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 7 - PATCH `/friend-requests/2` returns 400 when already friends # time=0.737ms
        

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        
        # Subtest: POST `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 8 - POST `/friend-requests/2` returns 400 when already friends # time=0.508ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        

            SELECT username, online_status FROM users 
            WHERE id = 2.0
        
        # Subtest: GET `/friends/:id/status` returns 200 when already friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 9 - GET `/friends/:id/status` returns 200 when already friends # time=0.727ms
        

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
        # Subtest: GET `/friends` returns 200 returning all friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 10 - GET `/friends` returns 200 returning all friends # time=0.579ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 4.0) OR (user_id = 4.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 404 when unauthorized action
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 11 - DELETE `/friends/:id` returns 404 when unauthorized action # time=0.494ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 200 when friend removed
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 12 - DELETE `/friends/:id` returns 200 when friend removed # time=1.426ms
        
        1..12
    ok 3 - POST `/login` # time=294.19ms
    
{"level":30,"time":1745686262626,"pid":60365,"hostname":"k2matu.local","reqId":"req-1a","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262627,"pid":60365,"hostname":"k2matu.local","reqId":"req-1a","res":{"statusCode":200},"responseTime":1.2038750648498535,"msg":"request completed"}
{"level":30,"time":1745686262628,"pid":60365,"hostname":"k2matu.local","reqId":"req-1b","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262629,"pid":60365,"hostname":"k2matu.local","reqId":"req-1b","res":{"statusCode":400},"responseTime":0.3480830192565918,"msg":"request completed"}
{"level":30,"time":1745686262629,"pid":60365,"hostname":"k2matu.local","reqId":"req-1c","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262630,"pid":60365,"hostname":"k2matu.local","reqId":"req-1c","res":{"statusCode":400},"responseTime":0.32308292388916016,"msg":"request completed"}
{"level":30,"time":1745686262630,"pid":60365,"hostname":"k2matu.local","reqId":"req-1d","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262630,"pid":60365,"hostname":"k2matu.local","reqId":"req-1d","res":{"statusCode":400},"responseTime":0.2116250991821289,"msg":"request completed"}
{"level":30,"time":1745686262631,"pid":60365,"hostname":"k2matu.local","reqId":"req-1e","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262631,"pid":60365,"hostname":"k2matu.local","reqId":"req-1e","res":{"statusCode":200},"responseTime":0.3293752670288086,"msg":"request completed"}
{"level":30,"time":1745686262632,"pid":60365,"hostname":"k2matu.local","reqId":"req-1f","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262632,"pid":60365,"hostname":"k2matu.local","reqId":"req-1f","res":{"statusCode":200},"responseTime":0.25225019454956055,"msg":"request completed"}
{"level":30,"time":1745686262632,"pid":60365,"hostname":"k2matu.local","reqId":"req-1g","req":{"method":"DELETE","url":"/friends/4","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262632,"pid":60365,"hostname":"k2matu.local","reqId":"req-1g","res":{"statusCode":404},"responseTime":0.21449995040893555,"msg":"request completed"}
{"level":30,"time":1745686262633,"pid":60365,"hostname":"k2matu.local","reqId":"req-1h","req":{"method":"DELETE","url":"/friends/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262634,"pid":60365,"hostname":"k2matu.local","reqId":"req-1h","res":{"statusCode":200},"responseTime":1.0314159393310547,"msg":"request completed"}
{"level":30,"time":1745686262635,"pid":60365,"hostname":"k2matu.local","reqId":"req-1i","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
{"level":30,"time":1745686262706,"pid":60365,"hostname":"k2matu.local","reqId":"req-1i","res":{"statusCode":200},"responseTime":70.98383283615112,"msg":"request completed"}
{"level":30,"time":1745686262706,"pid":60365,"hostname":"k2matu.local","reqId":"req-1j","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
{"level":30,"time":1745686262776,"pid":60365,"hostname":"k2matu.local","reqId":"req-1j","res":{"statusCode":200},"responseTime":70.15208292007446,"msg":"request completed"}
SELECT * FROM players WHERE user_id = 2.0
    # Subtest: POST `/login`
        # Subtest: GET `/players` returns 404 when no players found for user
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 1 - GET `/players` returns 404 when no players found for user # time=9.101ms
        
{"level":30,"time":1745686262785,"pid":60365,"hostname":"k2matu.local","reqId":"req-1k","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262786,"pid":60365,"hostname":"k2matu.local","reqId":"req-1k","res":{"statusCode":404},"responseTime":0.6887092590332031,"msg":"request completed"}
{"level":30,"time":1745686262786,"pid":60365,"hostname":"k2matu.local","reqId":"req-1l","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 1.0
        # Subtest: POST `/players` returns 201 on successful creation
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 2 - POST `/players` returns 201 on successful creation # time=2.631ms
        
{"level":30,"time":1745686262788,"pid":60365,"hostname":"k2matu.local","reqId":"req-1l","res":{"statusCode":201},"responseTime":1.9002909660339355,"msg":"request completed"}
{"level":30,"time":1745686262789,"pid":60365,"hostname":"k2matu.local","reqId":"req-1m","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
        # Subtest: POST `/players` returns 409 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 3 - POST `/players` returns 409 for duplicate display_name # time=1.172ms
        
{"level":30,"time":1745686262790,"pid":60365,"hostname":"k2matu.local","reqId":"req-1m","res":{"statusCode":409},"responseTime":0.7114582061767578,"msg":"request completed"}
{"level":30,"time":1745686262790,"pid":60365,"hostname":"k2matu.local","reqId":"req-1n","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player2', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 2.0
{"level":30,"time":1745686262792,"pid":60365,"hostname":"k2matu.local","reqId":"req-1n","res":{"statusCode":201},"responseTime":1.4224591255187988,"msg":"request completed"}
{"level":30,"time":1745686262792,"pid":60365,"hostname":"k2matu.local","reqId":"req-1o","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player3', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 3.0
{"level":30,"time":1745686262793,"pid":60365,"hostname":"k2matu.local","reqId":"req-1o","res":{"statusCode":201},"responseTime":1.0797080993652344,"msg":"request completed"}
{"level":30,"time":1745686262793,"pid":60365,"hostname":"k2matu.local","reqId":"req-1p","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player4', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 4.0
{"level":30,"time":1745686262794,"pid":60365,"hostname":"k2matu.local","reqId":"req-1p","res":{"statusCode":201},"responseTime":0.8394169807434082,"msg":"request completed"}
{"level":30,"time":1745686262794,"pid":60365,"hostname":"k2matu.local","reqId":"req-1q","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player5', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 5.0
{"level":30,"time":1745686262795,"pid":60365,"hostname":"k2matu.local","reqId":"req-1q","res":{"statusCode":201},"responseTime":1.2562499046325684,"msg":"request completed"}
{"level":30,"time":1745686262796,"pid":60365,"hostname":"k2matu.local","reqId":"req-1r","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player6', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 6.0
{"level":30,"time":1745686262797,"pid":60365,"hostname":"k2matu.local","reqId":"req-1r","res":{"statusCode":201},"responseTime":1.2327919006347656,"msg":"request completed"}
{"level":30,"time":1745686262797,"pid":60365,"hostname":"k2matu.local","reqId":"req-1s","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player7', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 7.0
{"level":30,"time":1745686262798,"pid":60365,"hostname":"k2matu.local","reqId":"req-1s","res":{"statusCode":201},"responseTime":0.9753341674804688,"msg":"request completed"}
{"level":30,"time":1745686262798,"pid":60365,"hostname":"k2matu.local","reqId":"req-1t","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player8', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 8.0
{"level":30,"time":1745686262799,"pid":60365,"hostname":"k2matu.local","reqId":"req-1t","res":{"statusCode":201},"responseTime":1.2761249542236328,"msg":"request completed"}
{"level":30,"time":1745686262800,"pid":60365,"hostname":"k2matu.local","reqId":"req-1u","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
        # Subtest: POST `/players` returns 400 when max players limit is reached
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 4 - POST `/players` returns 400 when max players limit is reached # time=10.023ms
        
SELECT * FROM players WHERE id = '8' AND user_id = 1.0
        # Subtest: GET `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 5 - GET `/players/:id` returns 404 when unauthorized # time=0.712ms
        
SELECT * FROM players WHERE id = '100' AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 6 - GET `/players/:id` returns 404 when player does not exist # time=0.477ms
        
SELECT * FROM players WHERE id = '8' AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 200 with valid data
            ok 1 - should be equal
            ok 2 - should be equivalent
            1..2
        ok 7 - GET `/players/:id` returns 200 with valid data # time=0.735ms
        
DELETE FROM players WHERE id = '3' AND user_id = 1.0
        # Subtest: DELETE `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 8 - DELETE `/players/:id` returns 404 when unauthorized # time=0.68ms
        
DELETE FROM players WHERE id = '100' AND user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 9 - DELETE `/players/:id` returns 404 when player does not exist # time=0.862ms
        
DELETE FROM players WHERE id = '3' AND user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 200 on success
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 10 - DELETE `/players/:id` returns 200 on success # time=1.308ms
        
SELECT * FROM players WHERE user_id = 2.0
        # Subtest: GET `/players` returns remaining players
            ok 1 - should be equal
            ok 2 - should be equivalent
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 11 - GET `/players` returns remaining players # time=1.139ms
        
{"level":30,"time":1745686262800,"pid":60365,"hostname":"k2matu.local","reqId":"req-1u","res":{"statusCode":400},"responseTime":0.38108396530151367,"msg":"request completed"}
{"level":30,"time":1745686262801,"pid":60365,"hostname":"k2matu.local","reqId":"req-1v","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262801,"pid":60365,"hostname":"k2matu.local","reqId":"req-1v","res":{"statusCode":404},"responseTime":0.30425024032592773,"msg":"request completed"}
{"level":30,"time":1745686262802,"pid":60365,"hostname":"k2matu.local","reqId":"req-1w","req":{"method":"GET","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262802,"pid":60365,"hostname":"k2matu.local","reqId":"req-1w","res":{"statusCode":404},"responseTime":0.1902909278869629,"msg":"request completed"}
{"level":30,"time":1745686262802,"pid":60365,"hostname":"k2matu.local","reqId":"req-1x","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262802,"pid":60365,"hostname":"k2matu.local","reqId":"req-1x","res":{"statusCode":200},"responseTime":0.2849998474121094,"msg":"request completed"}
{"level":30,"time":1745686262803,"pid":60365,"hostname":"k2matu.local","reqId":"req-1y","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262803,"pid":60365,"hostname":"k2matu.local","reqId":"req-1y","res":{"statusCode":404},"responseTime":0.32124996185302734,"msg":"request completed"}
{"level":30,"time":1745686262804,"pid":60365,"hostname":"k2matu.local","reqId":"req-1z","req":{"method":"DELETE","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262804,"pid":60365,"hostname":"k2matu.local","reqId":"req-1z","res":{"statusCode":404},"responseTime":0.35945796966552734,"msg":"request completed"}
{"level":30,"time":1745686262805,"pid":60365,"hostname":"k2mSELECT * FROM players WHERE id = '1' AND user_id = 1.0
        # Subtest: PUT `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 12 - PUT `/players/:id` returns 404 when unauthorized # time=2.699ms
        
SELECT * FROM players WHERE id = '100' AND user_id = 2.0
        # Subtest: PUT `/players/:id` returns 404 for invalid id
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 13 - PUT `/players/:id` returns 404 for invalid id # time=0.702ms
        
SELECT * FROM players WHERE id = '1' AND user_id = 2.0
SELECT * FROM players WHERE display_name = 'Player7'
        # Subtest: PUT `/players/:id` returns 400 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 14 - PUT `/players/:id` returns 400 for duplicate display_name # time=0.808ms
        
SELECT * FROM players WHERE id = '1' AND user_id = 2.0
SELECT * FROM players WHERE display_name = 'updatedPlayer'
UPDATE players SET display_name = 'updatedPlayer', avatar_url = 'notnull.com' WHERE id = '1'
        # Subtest: PUT `/players/:id` returns 200 when update is successful
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 15 - PUT `/players/:id` returns 200 when update is successful # time=1.658ms
        
        1..15
    ok 4 - POST `/login` # time=179.241ms
    
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
SELECT * FROM users WHERE username = 'lumi'
atu.local","reqId":"req-20","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262806,"pid":60365,"hostname":"k2matu.local","reqId":"req-20","res":{"statusCode":200},"responseTime":0.8740830421447754,"msg":"request completed"}
{"level":30,"time":1745686262806,"pid":60365,"hostname":"k2matu.local","reqId":"req-21","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262807,"pid":60365,"hostname":"k2matu.local","reqId":"req-21","res":{"statusCode":200},"responseTime":0.46295785903930664,"msg":"request completed"}
{"level":30,"time":1745686262807,"pid":60365,"hostname":"k2matu.local","reqId":"req-22","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
        
    # Subtest: POST `/login` - Login as kim
        # Subtest: GET `/match-histories` returns 200 with empty array when no matches found for user
            ok 1 - Status code should be 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/match-histories` returns 200 with empty array when no matches found for user # time=8.627ms
        
{"level":30,"time":1745686262810,"pid":60365,"hostname":"k2matu.local","reqId":"req-22","res":{"statusCode":404},"responseTime":2.2917089462280273,"msg":"request completed"}
{"level":30,"time":1745686262810,"pid":60365,"hostname":"k2matu.local","reqId":"req-23","req":{"method":"PUT","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262811,"pid":60365,"hostname":"k2matu.local","reqId":"req-23","res":{"statusCode":404},"responseTime":0.3705000877380371,"msg":"request completed"}
{"level":30,"time":1745686262811,"pid":60365,"hostname":"k2matu.local","reqId":"req-24","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262811,"pid":60365,"hostname":"k2matu.local","reqId":"req-24","res":{"statusCode":400},"responseTime":0.41283369064331055,"msg":"request completed"}
{"level":30,"time":1745686262812,"pid":60365,"hostname":"k2matu.local","reqId":"req-25","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262813,"pid":60365,"hostname":"k2matu.local","reqId":"req-25","res":{"statusCode":200},"responseTime":1.2070417404174805,"msg":"request completed"}
{"level":30,"time":1745686262814,"pid":60365,"hostname":"k2matu.local","reqId":"req-26","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262885,"pid":60365,"hostname":"k2matu.local","reqId":"req-26","res":{"statusCode":200},"responseTime":71.49254131317139,"msg":"request completed"}
{"level":30,"time":1745686262886,"pid":60365,"hostname":"k2matu.local","reqId":"req-27","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262956,"pid":60365,"hostname":"k2matu.local","reqId":"req-27","res":{"statusCode":200},"responseTime":70.03900003433228,"msg":"request completed"}
{"level":30,"time":1745686262964,"pid":60365,"hostname":"k2matu.local","reqId":"req-28","req":{"method":"GET","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262965,"pid":60365,"hostname":"k2matu.local","reqId":"req-28","res":{"statusCode":200},"responseTime":0.5001249313354492,"msg":"request completed"}
{"level":30,"time":1745686262966,"pid":60365,"hostname":"k2matu.local","reqId":"req-29","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/match-histories` returns 400 when missing one player
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 2 - POST `/match-histories` returns 400 when missing one player # time=1.324ms
        
{"level":30,"time":1745686262966,"pid":60365,"hostname":"k2matu.local","reqId":"req-29","res":{"statusCode":400},"responseTime":0.8042078018188477,"msg":"request completed"}
{"level":30,"time":1745686262967,"pid":60365,"hostname":"k2matu.local","reqId":"req-2a","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 100.0)
    
ROLLBACK
        # Subtest: POST `/match-histories` returns 500 when player does not exist
            ok 1 - Status code should be 500
            ok 2 - should be equal
            1..2
        ok 3 - POST `/match-histories` returns 500 when player does not exist # time=2.561ms
        
{"level":30,"time":1745686262969,"pid":60365,"hostname":"k2matu.local","reqId":"req-2a","res":{"statusCode":500},"responseTime":2.1867918968200684,"msg":"request completed"}
{"level":30,"time":1745686262970,"pid":60365,"hostname":"k2matu.local","reqId":"req-2b","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 1.0)
    

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 2.0)
    
COMMIT
        # Subtest: POST `/match-histories` returns 201 when match is successfully created
            ok 1 - Status code should be 201
            ok 2 - should be equal
            1..2
        ok 4 - POST `/match-histories` returns 201 when match is successfully created # time=1.5ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = '200'
        
        # Subtest: GET `/match-histories/200` returns 404 when match is not found
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 5 - GET `/match-histories/200` returns 404 when match is not found # time=0.662ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = '1'
        
        # Subtest: GET `/match-histories/1` returns 200 for an existing match
            ok 1 - Status code should be 200
            ok 2 - should be equivalent
            1..2
        ok 6 - GET `/match-histories/1` returns 200 for an existing match # time=0.912ms
        
{"level":30,"time":1745686262971,"pid":60365,"hostname":"k2matu.local","reqId":"req-2b","res":{"statusCode":201},"responseTime":1.1589579582214355,"msg":"request completed"}
{"level":30,"time":1745686262971,"pid":60365,"hostname":"k2matu.local","reqId":"req-2c","req":{"method":"GET","url":"/match-histories/200","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262972,"pid":60365,"hostname":"k2matu.local","reqId":"req-2c","res":{"statusCode":404},"responseTime":0.3007502555847168,"msg":"request completed"}
{"level":30,"time":1745686262972,"pid":60365,"hostname":"k2matu.local","reqId":"req-2d","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262972,"pid":60365,"hostname":"k2matu.local","reqId":"req-2d","res":{"statusCode":200},"responseTime":0.3635830879211426,"msg":"request completed"}
{"level":30,"time":1745686262973,"pid":60365,"hostname":"k2matu.local","reqId":"req-2e","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = '1' AND user_id = 1.0
        # Subtest: PUT /match-histories/:id returns 403 when unauthorized to update
            ok 1 - Status code should be 403
            ok 2 - should be equal
            1..2
        ok 7 - PUT /match-histories/:id returns 403 when unauthorized to update # time=1.214ms
        
{"level":30,"time":1745686262974,"pid":60365,"hostname":"k2matu.local","reqId":"req-2e","res":{"statusCode":403},"responseTime":0.8380417823791504,"msg":"request completed"}
{"level":30,"time":1745686262974,"pid":60365,"hostname":"k2matu.local","reqId":"req-2f","req":{"method":"PUT","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = '100' AND user_id = 2.0
        # Subtest: PUT /match-histories/:id returns 403 when match not found
            ok 1 - Status code should be 403
            ok 2 - should be equal
            1..2
        ok 8 - PUT /match-histories/:id returns 403 when match not found # time=0.852ms
        
{"level":30,"time":1745686262975,"pid":60365,"hostname":"k2matu.local","reqId":"req-2f","res":{"statusCode":403},"responseTime":0.4775829315185547,"msg":"request completed"}
{"level":30,"time":1745686262975,"pid":60365,"hostname":"k2matu.local","reqId":"req-2g","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: PUT /match-histories/:id returns 400 when score is missing
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 9 - PUT /match-histories/:id returns 400 when score is missing # time=0.994ms
        
SELECT * FROM match_history WHERE id = '1' AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = '1' AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = '1' AND player_id = 1.0
    
SELECT * FROM match_player_history WHERE match_id = '1' AND player_id = 4.0
COMMIT
        # Subtest: PUT /match-histories/:id returns 404 when player not in match
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 10 - PUT /match-histories/:id returns 404 when player not in match # time=2.369ms
        
        # Subtest: PUT /match-histories/:id returns 400 when winner is not part of the players
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 11 - PUT /match-histories/:id returns 400 when winner is not part of the players # time=0.677ms
        
SELECT * FROM match_history WHERE id = '1' AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = '1' AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = '1' AND player_id = 1.0
    
UPDATE players SET losses = losses + 1 WHERE id = 1.0
SELECT * FROM match_player_history WHERE match_id = '1' AND player_id = 2.0

        UPDATE match_player_history SET score = 3.0 WHERE match_id = '1' AND player_id = 2.0
    
SELECT * FROM match_winner_history WHERE match_id = '1' AND winner_id = 2.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES ('1', 2.0)
UPDATE players SET wins = wins + 1 WHERE id = 2.0
COMMIT
        # Subtest: PUT /match-histories/:id returns 200 on success
            ok 1 - Status code should be 200
            ok 2 - should be equal

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = '1'
        
            ok 3 - should be equivalent
            1..3
        ok 12 - PUT /match-histories/:id returns 200 on success # time=2.549ms
        
DELETE FROM match_history WHERE id = '1' AND user_id = 1.0
        # Subtest: DELETE /match-histories/:id returns 404 when unauthorized
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 13 - DELETE /match-histories/:id returns 404 when unauthorized # time=0.709ms
        
DELETE FROM match_history WHERE id = '100' AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 404 when match does not exist
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 14 - DELETE /match-histories/:id returns 404 when match does not exist # time=0.475ms
        
DELETE FROM match_history WHERE id = '1' AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 200 on success
            ok 1 - Status code should be 200
            ok 2 - should be equal
            1..2
        ok 15 - DELETE /match-histories/:id returns 200 on success # time=0.836ms
        
        1..15
    ok 5 - POST `/login` - Login as kim # time=170.799ms
    

            SELECT
                t.id AS tournament_id,
                t.name,
                t.status,
                t.current_round,
                t.winner_id,
                mh.id as match_id,
                mh.type,
                mh.date,
                mh.round,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            JOIN tournaments t ON t.id = mh.tournament_id
        
    # Subtest: GET `/tournaments` returns 404 when no tournament exist
        ok 1 - Status code 404
        ok 2 - should be equivalent
        1..2
    ok 6 - GET `/tournaments` returns 404 when no tournament exist # time=0.619ms
    
SELECT * FROM users WHERE username = 'kim'
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0 
            AND online_status = FALSE
        
SELECT * FROM users WHERE username = 'lumi'
{"level":30,"time":1745686262976,"pid":60365,"hostname":"k2matu.local","reqId":"req-2g","res":{"statusCode":400},"err":{"type":"Error","message":"body/players/1 must have required property 'score'","stack":"Error: body/players/1 must have required property 'score'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/players/1","schemaPath":"#/properties/players/items/required","keyword":"required","params":{"missingProperty":"score"},"message":"must have required property 'score'"}],"validationContext":"body"},"msg":"body/players/1 must have required property 'score'"}
{"level":30,"time":1745686262976,"pid":60365,"hostname":"k2matu.local","reqId":"req-2g","res":{"statusCode":400},"responseTime":0.5797090530395508,"msg":"request completed"}
{"level":30,"time":1745686262976,"pid":60365,"hostname":"k2matu.local","reqId":"req-2h","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0 
            AND online_status = FALSE
        
DELETE FROM 'players'
DELETE FROM sqlite_sequence WHERE name='players'
DELETE FROM 'match_history'
DELETE FROM sqlite_sequence WHERE name='match_history'
{"level":30,"time":1745686262977,"pid":60365,"hostname":"k2matu.local","reqId":"req-2h","res":{"statusCode":404},"responseTime":0.9421253204345703,"msg":"request completed"}
{"level":40,"time":1745686262978,"pid":60365,"hostname":"k2matu.local","reqId":"req-2h","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.updateMatchHistory (file:///Users/kale/Desktop/ft_transcendence/backend/controllers/matchHistoryController.js:184:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?"}
{"level":30,"time":1745686262979,"pid":60365,"hostname":"k2matu.local","reqId":"req-2i","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262979,"pid":60365,"hostname":"k2matu.local","reqId":"req-2i","res":{"statusCode":400},"responseTime":0.2661252021789551,"msg":"request completed"}
{"level":30,"time":1745686262980,"pid":60365,"hostname":"k2matu.local","reqId":"req-2j","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262981,"pid":60365,"hostname":"k2matu.local","reqId":"req-2j","res":{"statusCode":200},"responseTime":1.6028337478637695,"msg":"request completed"}
{"level":30,"time":1745686262982,"pid":60365,"hostname":"k2matu.local","reqId":"req-2k","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262982,"pid":60365,"hostname":"k2matu.local","reqId":"req-2k","res":{"statusCode":200},"responseTime":0.24841594696044922,"msg":"request completed"}
{"level":30,"time":1745686262982,"pid":60365,"hostname":"k2matu.local","reqId":"req-2l","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262983,"pid":60365,"hostname":"k2matu.local","reqId":"req-2l","res":{"statusCode":404},"responseTime":0.2756667137145996,"msg":"request completed"}
{"level":30,"time":1745686262983,"pid":60365,"hostname":"k2matu.local","reqId":"req-2m","req":{"method":"DELETE","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262983,"pid":60365,"hostname":"k2matu.local","reqId":"req-2m","res":{"statusCode":404},"responseTime":0.2082500457763672,"msg":"request completed"}
{"level":30,"time":1745686262984,"pid":60365,"hostname":"k2matu.local","reqId":"req-2n","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262984,"pid":60365,"hostname":"k2matu.local","reqId":"req-2n","res":{"statusCode":200},"responseTime":0.5894169807434082,"msg":"request completed"}
{"level":30,"time":1745686262985,"pid":60365,"hostname":"k2matu.local","reqId":"req-2o","req":{"method":"GET","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686262985,"pid":60365,"hostname":"k2matu.local","reqId":"req-2o","res":{"statusCode":404},"responseTime":0.28083324432373047,"msg":"request completed"}
{"level":30,"time":1745686262986,"pid":60365,"hostname":"k2matu.local","reqId":"req-2p","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263056,"pid":60365,"hostname":"k2matu.local","reqId":"req-2p","res":{"statusCode":200},"responseTime":70.60054206848145,"msg":"request completed"}
{"level":30,"time":1745686263056,"pid":60365,"hostname":"k2matu.local","reqId":"req-2q","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263127,"pid":60365,"hostname":"k2matu.local","reqId":"req-2q","res":{"statusCode":200},"responseTime":71.06845808029175,"msg":"request completed"}
{"level":30,"time":1745686263130,"pid":60365,"hostname":"k2matu.local","reqId":"req-2r","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 1.0
{"level":30,"time":1745686263131,"pid":60365,"hostname":"k2matu.local","reqId":"req-2r","res":{"statusCode":201},"responseTime":1.1058330535888672,"msg":"request completed"}
{"level":30,"time":1745686263131,"pid":60365,"hostname":"k2matu.local","reqId":"req-2s","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player2', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 2.0
{"level":30,"time":1745686263132,"pid":60365,"hostname":"k2matu.local","reqId":"req-2s","res":{"statusCode":201},"responseTime":0.9775829315185547,"msg":"request completed"}
{"level":30,"time":1745686263132,"pid":60365,"hostname":"k2matu.local","reqId":"req-2t","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player3', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 3.0
{"level":30,"time":1745686263133,"pid":60365,"hostname":"k2matu.local","reqId":"req-2t","res":{"statusCode":201},"responseTime":0.8437089920043945,"msg":"request completed"}
{"level":30,"time":1745686263133,"pid":60365,"hostname":"k2matu.local","reqId":"req-2u","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player4', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 4.0
{"level":30,"time":1745686263134,"pid":60365,"hostname":"k2matu.local","reqId":"req-2u","res":{"statusCode":201},"responseTime":0.8472919464111328,"msg":"request completed"}
{"level":30,"time":1745686263134,"pid":60365,"hostname":"k2matu.local","reqId":"req-2v","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player5', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 5.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player6', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 6.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player7', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 7.0
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player8', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 8.0
    # Subtest: POST `/login` - Login as kim
        ok 1 - should be equal
        # Subtest: POST `/tournaments` returns 400 when creating tournament with 1 player
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 2 - POST `/tournaments` returns 400 when creating tournament with 1 player # time=6.274ms
        
        # Subtest: POST `/tournaments` returns 400 when creating tournament with 2 players
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 3 - POST `/tournaments` returns 400 when creating tournament with 2 players # time=0.636ms
        
BEGIN
SELECT * FROM tournaments WHERE name = 'T1'
SELECT * FROM players WHERE id = 1.0
SELECT * FROM players WHERE id = 2.0
SELECT * FROM players WHERE id = 100.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.createTournament [90m(file:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/tournamentController.js:218:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at [90m/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:214:9
[90m    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)[39m
    at done [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:207:14[90m)[39m
    at Parser.defaultJsonParser [as fn] [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:312:7[90m)[39m
        # Subtest: POST `/tournaments` returns 400 when creating tournament with invalid player
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 4 - POST `/tournaments` returns 400 when creating tournament with invalid player # time=1.946ms
        
        # Subtest: POST `/tournaments` returns 400 when missing player_ids
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 5 - POST `/tournaments` returns 400 when missing player_ids # time=0.863ms
        
        # Subtest: POST `/tournaments` returns 400 when missing name
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 6 - POST `/tournaments` returns 400 when missing name # time=0.603ms
        
BEGIN
SELECT * FROM tournaments WHERE name = 'T1'
SELECT * FROM players WHERE id = 1.0
SELECT * FROM players WHERE id = 2.0
SELECT * FROM players WHERE id = 3.0
INSERT INTO tournaments (name, user_id) VALUES ('T1', 2.0)
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('tournament', 1.0, 0.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (1.0, 3.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (1.0, 2.0)
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('tournament', 1.0, 0.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (2.0, 1.0)
INSERT INTO match_winner_history (match_id, winner_id) VALUES (2.0, 1.0)

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id, 
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

COMMIT
        # Subtest: POST `/tournaments` returns 200 when creating tournament with 3 players
            ok 1 - Status code 200
            ok 2 - should be equal
            ok 3 - should be equivalent
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM match_history WHERE tournament_id = 1.0 AND round = 0.0
SELECT * FROM match_winner_history WHERE match_id = 1.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.advanceTournament [90m(file:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/tournamentController.js:300:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m
            # Subtest: PUT `/tournaments/:id` returns 404 when match not played
                ok 1 - Status code 404
                ok 2 - should be equal
                1..2
            ok 4 - PUT `/tournaments/:id` returns 404 when match not played # time=2.301ms
            
SELECT * FROM match_history WHERE id = '1' AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = '1' AND player_id = 2.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = '1' AND player_id = 2.0
    
UPDATE players SET losses = losses + 1 WHERE id = 2.0
SELECT * FROM match_player_history WHERE match_id = '1' AND player_id = 3.0

        UPDATE match_player_history SET score = 5.0 WHERE match_id = '1' AND player_id = 3.0
    
SELECT * FROM match_winner_history WHERE match_id = '1' AND winner_id = 3.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES ('1', 3.0)
UPDATE players SET wins = wins + 1 WHERE id = 3.0
COMMIT
            # Subtest: PUT `/tournaments/:id` returns 200 on success
                ok 1 - Status code 200
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM match_history WHERE tournament_id = 1.0 AND round = 0.0
SELECT * FROM match_winner_history WHERE match_id = 1.0
SELECT * FROM match_winner_history WHERE match_id = 2.0
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('tournament', 1.0, 1.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (3.0, 1.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (3.0, 3.0)
UPDATE tournaments SET current_round = current_round + 1 WHERE id = 1.0

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id, 
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

COMMIT
                ok 2 - Status code 200
                ok 3 - should be equal
                ok 4 - should be equivalent
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 1.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.advanceTournament [90m(file:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/tournamentController.js:300:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m
                # Subtest: PUT `/tournaments/:id` returns 404 unauthorized
                    ok 1 - Status code 404
                    ok 2 - should be equal
                    1..2
                ok 5 - PUT `/tournaments/:id` returns 404 unauthorized # time=2.4ms
                
SELECT * FROM match_history WHERE id = '3' AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = '3' AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = '3' AND player_id = 1.0
    
SELECT * FROM match_player_history WHERE match_id = '3' AND player_id = 3.0

        UPDATE match_player_history SET score = 1.0 WHERE match_id = '3' AND player_id = 3.0
    
UPDATE players SET losses = losses + 1 WHERE id = 3.0
SELECT * FROM match_winner_history WHERE match_id = '3' AND winner_id = 1.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES ('3', 1.0)
UPDATE players SET wins = wins + 1 WHERE id = 1.0
COMMIT
                # Subtest: PUT `/tournaments/:id` returns 200 on tournament finish
                    ok 1 - Status code 200
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM match_history WHERE tournament_id = 1.0 AND round = 1.0
SELECT * FROM match_winner_history WHERE match_id = 3.0
UPDATE tournaments SET status = 'finished', winner_id = 1.0, current_round = 2.0 WHERE id = 1.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.advanceTournament [90m(file:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/tournamentController.js:300:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m
                    ok 2 - Status code 200
                    ok 3 - should be equal
                    1..3
                ok 6 - PUT `/tournaments/:id` returns 200 on tournament finish # time=3.543ms
                
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.advanceTournament [90m(file:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/tournamentController.js:300:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m
                # Subtest: PUT `/tournaments/:id` returns 400 when already finished
                    ok 1 - Status code 400
                    ok 2 - should be equal
                    1..2
                ok 7 - PUT `/tournaments/:id` returns 400 when already finished # time=1.32ms
BEGIN
SELECT * FROM tournaments WHERE name = 'T1'
COMMIT
TypeError: Cannot destructure property 'tournament_id' of 'rows[0]' as it is undefined.
    at Object.createTournament [90m(file:///Users/kale/Desktop/ft_transcendence/backend/[39mcontrollers/tournamentController.js:218:17[90m)[39m
    at preHandlerCallbackInner [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at [90m/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:214:9
[90m    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)[39m
    at done [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:207:14[90m)[39m
    at Parser.defaultJsonParser [as fn] [90m(/Users/kale/Desktop/ft_transcendence/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:312:7[90m)[39m

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id, 
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 10.0


    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id, 
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

DELETE FROM tournaments WHERE id = '1' and user_id = 1.0
DELETE FROM tournaments WHERE id = '1' and user_id = 2.0
🧹 testPong.db wiped clean for next test
                
                1..7
            ok 5 - PUT `/tournaments/:id` returns 200 on success # time=12.421ms
            
            1..5
        ok 7 - POST `/tournaments` returns 200 when creating tournament with 3 players # time=18.286ms
        
        # Subtest: POST `/tournaments` returns 400 on duplicate name
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 8 - POST `/tournaments` returns 400 on duplicate name # time=3.292ms
        
        # Subtest: GET `/tournaments/:id` returns 404 if tournament not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 9 - GET `/tournaments/:id` returns 404 if tournament not found # time=0.725ms
        
        # Subtest: GET `/tournaments/:id` returns 200 on success
            ok 1 - Status code 200
            1..1
        ok 10 - GET `/tournaments/:id` returns 200 on success # time=0.502ms
        
        # Subtest: DELETE `/tournaments/:id` returns 404 unauthorized
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 11 - DELETE `/tournaments/:id` returns 404 unauthorized # time=0.543ms
        
        # Subtest: DELETE `/tournaments/:id` returns 200 on success
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 12 - DELETE `/tournaments/:id` returns 200 on success # time=1.172ms
        
        1..12
    ok 7 - POST `/login` - Login as kim # time=190.078ms
    
    1..7
ok 1 - All Test # time=2434.319ms

{"level":30,"time":1745686263135,"pid":60365,"hostname":"k2matu.local","reqId":"req-2v","res":{"statusCode":201},"responseTime":0.8737907409667969,"msg":"request completed"}
{"level":30,"time":1745686263135,"pid":60365,"hostname":"k2matu.local","reqId":"req-2w","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263136,"pid":60365,"hostname":"k2matu.local","reqId":"req-2w","res":{"statusCode":201},"responseTime":0.7994170188903809,"msg":"request completed"}
{"level":30,"time":1745686263136,"pid":60365,"hostname":"k2matu.local","reqId":"req-2x","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263138,"pid":60365,"hostname":"k2matu.local","reqId":"req-2x","res":{"statusCode":201},"responseTime":0.9966254234313965,"msg":"request completed"}
{"level":30,"time":1745686263138,"pid":60365,"hostname":"k2matu.local","reqId":"req-2y","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263139,"pid":60365,"hostname":"k2matu.local","reqId":"req-2y","res":{"statusCode":201},"responseTime":0.8937921524047852,"msg":"request completed"}
{"level":30,"time":1745686263145,"pid":60365,"hostname":"k2matu.local","reqId":"req-2z","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263145,"pid":60365,"hostname":"k2matu.local","reqId":"req-2z","res":{"statusCode":400},"err":{"type":"Error","message":"body/player_ids must NOT have fewer than 3 items","stack":"Error: body/player_ids must NOT have fewer than 3 items\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/player_ids","schemaPath":"#/properties/player_ids/minItems","keyword":"minItems","params":{"limit":3},"message":"must NOT have fewer than 3 items"}],"validationContext":"body"},"msg":"body/player_ids must NOT have fewer than 3 items"}
{"level":30,"time":1745686263145,"pid":60365,"hostname":"k2matu.local","reqId":"req-2z","res":{"statusCode":400},"responseTime":0.6546249389648438,"msg":"request completed"}
{"level":30,"time":1745686263146,"pid":60365,"hostname":"k2matu.local","reqId":"req-30","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263146,"pid":60365,"hostname":"k2matu.local","reqId":"req-30","res":{"statusCode":400},"err":{"type":"Error","message":"body/player_ids must NOT have fewer than 3 items","stack":"Error: body/player_ids must NOT have fewer than 3 items\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/player_ids","schemaPath":"#/properties/player_ids/minItems","keyword":"minItems","params":{"limit":3},"message":"must NOT have fewer than 3 items"}],"validationContext":"body"},"msg":"body/player_ids must NOT have fewer than 3 items"}
{"level":30,"time":1745686263146,"pid":60365,"hostname":"k2matu.local","reqId":"req-30","res":{"statusCode":400},"responseTime":0.349459171295166,"msg":"request completed"}
{"level":30,"time":1745686263147,"pid":60365,"hostname":"k2matu.local","reqId":"req-31","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263147,"pid":60365,"hostname":"k2matu.local","reqId":"req-31","res":{"statusCode":400},"responseTime":0.892791748046875,"msg":"request completed"}
{"level":40,"time":1745686263148,"pid":60365,"hostname":"k2matu.local","reqId":"req-31","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?\n    at _Reply.Reply.send (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.createTournament (file:///Users/kale/Desktop/ft_transcendence/backend/controllers/tournamentController.js:241:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?"}
{"level":30,"time":1745686263149,"pid":60365,"hostname":"k2matu.local","reqId":"req-32","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263149,"pid":60365,"hostname":"k2matu.local","reqId":"req-32","res":{"statusCode":400},"err":{"type":"Error","message":"body/player_ids must NOT have fewer than 3 items","stack":"Error: body/player_ids must NOT have fewer than 3 items\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/player_ids","schemaPath":"#/properties/player_ids/minItems","keyword":"minItems","params":{"limit":3},"message":"must NOT have fewer than 3 items"}],"validationContext":"body"},"msg":"body/player_ids must NOT have fewer than 3 items"}
{"level":30,"time":1745686263149,"pid":60365,"hostname":"k2matu.local","reqId":"req-32","res":{"statusCode":400},"responseTime":0.39487457275390625,"msg":"request completed"}
{"level":30,"time":1745686263150,"pid":60365,"hostname":"k2matu.local","reqId":"req-33","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263150,"pid":60365,"hostname":"k2matu.local","reqId":"req-33","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'name'","stack":"Error: body must have required property 'name'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"name"},"message":"must have required property 'name'"}],"validationContext":"body"},"msg":"body must have required property 'name'"}
{"level":30,"time":1745686263150,"pid":60365,"hostname":"k2matu.local","reqId":"req-33","res":{"statusCode":400},"responseTime":0.3195829391479492,"msg":"request completed"}
{"level":30,"time":1745686263150,"pid":60365,"hostname":"k2matu.local","reqId":"req-34","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263152,"pid":60365,"hostname":"k2matu.local","reqId":"req-34","res":{"statusCode":200},"responseTime":1.999333381652832,"msg":"request completed"}
{"level":30,"time":1745686263154,"pid":60365,"hostname":"k2matu.local","reqId":"req-35","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263155,"pid":60365,"hostname":"k2matu.local","reqId":"req-35","res":{"statusCode":404},"responseTime":0.8127083778381348,"msg":"request completed"}
{"level":40,"time":1745686263156,"pid":60365,"hostname":"k2matu.local","reqId":"req-35","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.advanceTournament (file:///Users/kale/Desktop/ft_transcendence/backend/controllers/tournamentController.js:317:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at Object.handleRequest (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:44:9)\n    at runPreParsing (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/route.js:571:19)\n    at next (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/hooks.js:236:9)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?"}
{"level":30,"time":1745686263156,"pid":60365,"hostname":"k2matu.local","reqId":"req-36","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263158,"pid":60365,"hostname":"k2matu.local","reqId":"req-36","res":{"statusCode":200},"responseTime":1.4623327255249023,"msg":"request completed"}
{"level":30,"time":1745686263158,"pid":60365,"hostname":"k2matu.local","reqId":"req-37","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263160,"pid":60365,"hostname":"k2matu.local","reqId":"req-37","res":{"statusCode":200},"responseTime":1.637415885925293,"msg":"request completed"}
{"level":30,"time":1745686263162,"pid":60365,"hostname":"k2matu.local","reqId":"req-38","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263162,"pid":60365,"hostname":"k2matu.local","reqId":"req-38","res":{"statusCode":404},"responseTime":0.4068336486816406,"msg":"request completed"}
{"level":40,"time":1745686263163,"pid":60365,"hostname":"k2matu.local","reqId":"req-38","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.advanceTournament (file:///Users/kale/Desktop/ft_transcendence/backend/controllers/tournamentController.js:317:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at Object.handleRequest (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:44:9)\n    at runPreParsing (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/route.js:571:19)\n    at next (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/hooks.js:236:9)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?"}
{"level":30,"time":1745686263163,"pid":60365,"hostname":"k2matu.local","reqId":"req-39","req":{"method":"PUT","url":"/match-histories/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263165,"pid":60365,"hostname":"k2matu.local","reqId":"req-39","res":{"statusCode":200},"responseTime":1.4877500534057617,"msg":"request completed"}
{"level":30,"time":1745686263165,"pid":60365,"hostname":"k2matu.local","reqId":"req-3a","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263166,"pid":60365,"hostname":"k2matu.local","reqId":"req-3a","res":{"statusCode":200},"responseTime":0.6562089920043945,"msg":"request completed"}
{"level":40,"time":1745686263166,"pid":60365,"hostname":"k2matu.local","reqId":"req-3a","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.advanceTournament (file:///Users/kale/Desktop/ft_transcendence/backend/controllers/tournamentController.js:317:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at Object.handleRequest (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:44:9)\n    at runPreParsing (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/route.js:571:19)\n    at next (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/hooks.js:236:9)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?"}
{"level":30,"time":1745686263167,"pid":60365,"hostname":"k2matu.local","reqId":"req-3b","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263167,"pid":60365,"hostname":"k2matu.local","reqId":"req-3b","res":{"statusCode":400},"responseTime":0.342958927154541,"msg":"request completed"}
{"level":40,"time":1745686263168,"pid":60365,"hostname":"k2matu.local","reqId":"req-3b","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?\n    at _Reply.Reply.send (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.advanceTournament (file:///Users/kale/Desktop/ft_transcendence/backend/controllers/tournamentController.js:317:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at Object.handleRequest (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:44:9)\n    at runPreParsing (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/route.js:571:19)\n    at next (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/hooks.js:236:9)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments/1\" (PUT)?"}
{"level":30,"time":1745686263169,"pid":60365,"hostname":"k2matu.local","reqId":"req-3c","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263171,"pid":60365,"hostname":"k2matu.local","reqId":"req-3c","res":{"statusCode":400},"responseTime":2.288583755493164,"msg":"request completed"}
{"level":40,"time":1745686263172,"pid":60365,"hostname":"k2matu.local","reqId":"req-3c","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?\n    at _Reply.Reply.send (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.createTournament (file:///Users/kale/Desktop/ft_transcendence/backend/controllers/tournamentController.js:241:32)\n    at preHandlerCallbackInner (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?"}
{"level":30,"time":1745686263172,"pid":60365,"hostname":"k2matu.local","reqId":"req-3d","req":{"method":"GET","url":"/tournaments/10","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263173,"pid":60365,"hostname":"k2matu.local","reqId":"req-3d","res":{"statusCode":404},"responseTime":0.34954071044921875,"msg":"request completed"}
{"level":30,"time":1745686263173,"pid":60365,"hostname":"k2matu.local","reqId":"req-3e","req":{"method":"GET","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263173,"pid":60365,"hostname":"k2matu.local","reqId":"req-3e","res":{"statusCode":200},"responseTime":0.24016714096069336,"msg":"request completed"}
{"level":30,"time":1745686263174,"pid":60365,"hostname":"k2matu.local","reqId":"req-3f","req":{"method":"DELETE","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263174,"pid":60365,"hostname":"k2matu.local","reqId":"req-3f","res":{"statusCode":404},"responseTime":0.26891565322875977,"msg":"request completed"}
{"level":30,"time":1745686263174,"pid":60365,"hostname":"k2matu.local","reqId":"req-3g","req":{"method":"DELETE","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745686263175,"pid":60365,"hostname":"k2matu.local","reqId":"req-3g","res":{"statusCode":200},"responseTime":0.7436671257019043,"msg":"request completed"}
1..1
