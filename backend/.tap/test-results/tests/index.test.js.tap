Using testPong.db

	CREATE TABLE IF NOT EXISTS users (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		username TEXT NOT NULL UNIQUE,
		email TEXT NOT NULL UNIQUE,
		password_hash TEXT NOT NULL,
		avatar_url TEXT DEFAULT NULL,
		online_status BOOLEAN DEFAULT FALSE,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	)

PRAGMA foreign_keys = ON

	CREATE TABLE IF NOT EXISTS players (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		display_name TEXT NOT NULL UNIQUE,
		wins INTEGER DEFAULT 0,
		losses INTEGER DEFAULT 0,
		avatar_url TEXT DEFAULT NULL,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS friends (
		user_id INTEGER,
		friend_id INTEGER,
		status TEXT DEFAULT 'pending',
		PRIMARY KEY (user_id, friend_id),
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS tournaments (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		name TEXT NOT NULL,
		status TEXT DEFAULT 'pending',
		current_round INTEGER DEFAULT 0,
		winner_id INTEGER,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)


	CREATE TABLE IF NOT EXISTS match_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		type TEXT NOT NULL,
		tournament_id INTEGER DEFAULT NULL,
		round INTEGER,
		date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS match_player_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		player_id INTEGER NOT NULL,
		score INTEGER DEFAULT 0 NOT NULL,
		team INTEGER CHECK (team IN (1, 2)),
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (player_id) REFERENCES players(id),
		UNIQUE (match_id, player_id)
	)


	CREATE TABLE IF NOT EXISTS match_winner_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		winner_id INTEGER NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)

TAP version 14
# Subtest: All Test
{"level":30,"time":1745390901517,"pid":94144,"hostname":"k2matu.local","reqId":"req-1","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users
    # Subtest: Auth Routes Suite
        # Subtest: GET `/users` returns empty array
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/users` returns empty array # time=184.859ms
        
        # Subtest: POST `/register` returns 400 if email is missing
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 2 - POST `/register` returns 400 if email is missing # time=2.991ms
        
{"level":30,"time":1745390901521,"pid":94144,"hostname":"k2matu.local","reqId":"req-1","res":{"statusCode":200},"responseTime":2.8729171752929688,"msg":"request completed"}
{"level":30,"time":1745390901524,"pid":94144,"hostname":"k2matu.local","reqId":"req-2","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745390901525,"pid":94144,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'email'","stack":"Error: body must have required property 'email'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"email"},"message":"must have required property 'email'"}],"validationContext":"body"},"msg":"body must have required property 'email'"}
{"level":30,"time":1745390901526,"pid":94144,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"responseTime":2.4043750762939453,"msg":"request completed"}
{"level":30,"time":1745390901527,"pid":94144,"hostname":"k2matu.local","reqId":"req-3","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/register` returns 400 if invalid email
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 3 - POST `/register` returns 400 if invalid email # time=1.239ms
        
{"level":30,"time":1745390901527,"pid":94144,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"err":{"type":"Error","message":"body/email must match format \"email\"","stack":"Error: body/email must match format \"email\"\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/email","schemaPath":"#/properties/email/format","keyword":"format","params":{"format":"email"},"message":"must match format \"email\""}],"validationContext":"body"},"msg":"body/email must match format \"email\""}
{"level":30,"time":1745390901527,"pid":94144,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"responseTime":0.811500072479248,"msg":"request completed"}
{"level":30,"time":1745390901528,"pid":94144,"hostname":"k2matu.local","reqId":"req-4","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/register` returns 400 if invalid username (min 3 char)
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 4 - POST `/register` returns 400 if invalid username (min 3 char) # time=0.702ms
        
{"level":30,"time":1745390901528,"pid":94144,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"err":{"type":"Error","message":"body/username must NOT have fewer than 3 characters","stack":"Error: body/username must NOT have fewer than 3 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/username","schemaPath":"#/properties/username/minLength","keyword":"minLength","params":{"limit":3},"message":"must NOT have fewer than 3 characters"}],"validationContext":"body"},"msg":"body/username must NOT have fewer than 3 characters"}
{"level":30,"time":1745390901528,"pid":94144,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"responseTime":0.3067498207092285,"msg":"request completed"}
{"level":30,"time":1745390901529,"pid":94144,"hostname":"k2matu.local","reqId":"req-5","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/register` returns 400 if username is missing
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 5 - POST `/register` returns 400 if username is missing # time=0.682ms
        
{"level":30,"time":1745390901529,"pid":94144,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745390901529,"pid":94144,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"responseTime":0.29629087448120117,"msg":"request completed"}
{"level":30,"time":1745390901530,"pid":94144,"hostname":"k2matu.local","reqId":"req-6","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/register` returns 400 if password is missing
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 6 - POST `/register` returns 400 if password is missing # time=0.765ms
        
        # Subtest: POST `/register` returns 400 if invalid password
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 7 - POST `/register` returns 400 if invalid password # time=1.767ms
        
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'testuse@email.com', '$2b$10$Q7nmkUL6f6EPJoIAjOc8Y.Iu5'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 1.0
        # Subtest: POST `/register` returns 201 if successfully created user
            ok 1 - Status code 201
            ok 2 - should be equal
SELECT * FROM users
            ok 3 - Status code 200
            ok 4 - One user in the database
            ok 5 - should be equivalent
            1..5
        ok 8 - POST `/register` returns 201 if successfully created user # time=80.284ms
        
{"level":30,"time":1745390901530,"pid":94144,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745390901530,"pid":94144,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"responseTime":0.3165411949157715,"msg":"request completed"}
{"level":30,"time":1745390901531,"pid":94144,"hostname":"k2matu.local","reqId":"req-7","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'new@email.com', '$2b$10$H3O4CJ56MXaWx48jQGVkvuM1W'/*+28 bytes*/)
        # Subtest: POST `/register` returns 400 if duplicate name
            ok 1 - Status code 409
            ok 2 - should be equal
            1..2
        ok 9 - POST `/register` returns 400 if duplicate name # time=70.446ms
        
{"level":30,"time":1745390901532,"pid":94144,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"err":{"type":"Error","message":"body/password must NOT have fewer than 6 characters","stack":"Error: body/password must NOT have fewer than 6 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/password","schemaPath":"#/properties/password/minLength","keyword":"minLength","params":{"limit":6},"message":"must NOT have fewer than 6 characters"}],"validationContext":"body"},"msg":"body/password must NOT have fewer than 6 characters"}
{"level":30,"time":1745390901532,"pid":94144,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"responseTime":1.3156251907348633,"msg":"request completed"}
{"level":30,"time":1745390901533,"pid":94144,"hostname":"k2matu.local","reqId":"req-8","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745390901611,"pid":94144,"hostname":"k2matu.local","reqId":"req-8","res":{"statusCode":201},"responseTime":78.54474973678589,"msg":"request completed"}
{"level":30,"time":1745390901612,"pid":94144,"hostname":"k2matu.local","reqId":"req-9","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745390901612,"pid":94144,"hostname":"k2matu.local","reqId":"req-9","res":{"statusCode":200},"responseTime":0.3244171142578125,"msg":"request completed"}
{"level":30,"time":1745390901613,"pid":94144,"hostname":"k2matu.local","reqId":"req-a","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745390901683,"pid":94144,"hostname":"k2matu.local","reqId":"req-a","res":{"statusCode":409},"responseTime":69.92283391952515,"msg":"request completed"}
{"level":30,"time":1745390901684,"pid":94144,"hostname":"k2matu.local","reqId":"req-b","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('newuser', 'testuse@email.com', '$2b$10$aVw.264C.TAmjBpF4jhxpOFBK'/*+28 bytes*/)
{"level":30,"time":1745390901755,"pid":94144,"hostname":"k2matu.local","reqId":"req-b","res":{"statusCode":409},"responseTime":70.77812480926514,"msg":"request completed"}
        # Subtest: POST `/register` returns 400 if duplicate email
            ok 1 - Status code 409
            ok 2 - should be equal
            1..2
        ok 10 - POST `/register` returns 400 if duplicate email # time=71.379ms
        
{"level":30,"time":1745390901755,"pid":94144,"hostname":"k2matu.local","reqId":"req-c","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('kim', 'kim@email.com', '$2b$10$zXJ4yksA5FGtGteMgpnPe.vcZ'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 2.0
{"level":30,"time":1745390901827,"pid":94144,"hostname":"k2matu.local","reqId":"req-c","res":{"statusCode":201},"responseTime":71.17899990081787,"msg":"request completed"}
        # Subtest: POST `/register` returns 201 if successfully created user
            ok 1 - Status code 201
            ok 2 - should be equal
            1..2
        ok 11 - POST `/register` returns 201 if successfully created user # time=71.855ms
        
{"level":30,"time":1745390901828,"pid":94144,"hostname":"k2matu.local","reqId":"req-d","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/login` returns 400 if username is missing
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 12 - POST `/login` returns 400 if username is missing # time=1.396ms
        
{"level":30,"time":1745390901828,"pid":94144,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745390901828,"pid":94144,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"responseTime":0.7637090682983398,"msg":"request completed"}
{"level":30,"time":1745390901829,"pid":94144,"hostname":"k2matu.local","reqId":"req-e","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/login` returns 400 if password is missing
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 13 - POST `/login` returns 400 if password is missing # time=0.664ms
        
{"level":30,"time":1745390901829,"pid":94144,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745390901829,"pid":94144,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"responseTime":0.2796669006347656,"msg":"request completed"}
{"level":30,"time":1745390901830,"pid":94144,"hostname":"k2matu.local","reqId":"req-f","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'nonexistentuser'
        # Subtest: POST `/login` returns 401 if user not found
            ok 1 - Status code 401
            ok 2 - should be equal
            1..2
        ok 14 - POST `/login` returns 401 if user not found # time=0.828ms
        
{"level":30,"time":1745390901830,"pid":94144,"hostname":"k2matu.local","reqId":"req-f","res":{"statusCode":401},"responseTime":0.4331245422363281,"msg":"request completed"}
{"level":30,"time":1745390901831,"pid":94144,"hostname":"k2matu.local","reqId":"req-g","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
{"level":30,"time":1745390901901,"pid":94144,"hostname":"k2matu.local","reqId":"req-g","res":{"statusCode":401},"responseTime":70.56879091262817,"msg":"request completed"}
        # Subtest: POST `/login` returns 401 if password is incorrect
            ok 1 - Status code 401
            ok 2 - should be equal
            1..2
        ok 15 - POST `/login` returns 401 if password is incorrect # time=71.183ms
        
{"level":30,"time":1745390901902,"pid":94144,"hostname":"k2matu.local","reqId":"req-h","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
			SET online_status = TRUE
			WHERE id = 2.0 
			AND online_status = FALSE
			
{"level":30,"time":1745390901974,"pid":94144,"hostname":"k2matu.local","reqId":"req-h","res":{"statusCode":200},"responseTime":71.59983396530151,"msg":"request completed"}
        # Subtest: POST `/login` returns 200 if login is successful
            ok 1 - Status code 200
            ok 2 - Token is present
            ok 3 - should be equivalent
            1..3
        ok 16 - POST `/login` returns 200 if login is successful # time=72.321ms
        
{"level":30,"time":1745390901975,"pid":94144,"hostname":"k2matu.local","reqId":"req-i","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
			SET online_status = TRUE
			WHERE id = 2.0 
			AND online_status = FALSE
			
{"level":30,"time":1745390902045,"pid":94144,"hostname":"k2matu.local","reqId":"req-i","res":{"statusCode":200},"responseTime":70.08325004577637,"msg":"request completed"}
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
			SET online_status = FALSE 
			WHERE id = 2.0 
			AND online_status = TRUE
			
        # Subtest: POST `/logout` returns 200 if logout is successful
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 17 - POST `/logout` returns 200 if logout is successful # time=72.897ms
        
{"level":30,"time":1745390902045,"pid":94144,"hostname":"k2matu.local","reqId":"req-j","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745390902047,"pid":94144,"hostname":"k2matu.local","reqId":"req-j","res":{"statusCode":200},"responseTime":1.9949579238891602,"msg":"request completed"}
{"level":30,"time":1745390902048,"pid":94144,"hostname":"k2matu.local","reqId":"req-k","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
			SET online_status = TRUE
			WHERE id = 2.0 
			AND online_status = FALSE
			
{"level":30,"time":1745390902119,"pid":94144,"hostname":"k2matu.local","reqId":"req-k","res":{"statusCode":200},"responseTime":71.27979230880737,"msg":"request completed"}
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
			SET online_status = FALSE 
			WHERE id = 2.0 
			AND online_status = TRUE
			
        # Subtest: POST `/logout` returns 400 if user already logged out
            ok 1 - Status code 200
            ok 2 - should be equal
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
			SET online_status = FALSE 
			WHERE id = 2.0 
			AND online_status = TRUE
			
            ok 3 - Status code 404
            ok 4 - should be equal
            1..4
        ok 18 - POST `/logout` returns 400 if user already logged out # time=73.928ms
        
        1..18
    ok 1 - Auth Routes Suite # time=794.566ms
    
    1..1
🧹 testPong.db wiped clean for next test
ok 1 - All Test # time=887.58ms

{"level":30,"time":1745390902119,"pid":94144,"hostname":"k2matu.local","reqId":"req-l","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745390902121,"pid":94144,"hostname":"k2matu.local","reqId":"req-l","res":{"statusCode":200},"responseTime":1.1923751831054688,"msg":"request completed"}
{"level":30,"time":1745390902121,"pid":94144,"hostname":"k2matu.local","reqId":"req-m","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745390902121,"pid":94144,"hostname":"k2matu.local","reqId":"req-m","res":{"statusCode":404},"responseTime":0.35558271408081055,"msg":"request completed"}
1..1
