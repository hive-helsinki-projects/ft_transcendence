Using testPong.db

	CREATE TABLE IF NOT EXISTS users (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		username TEXT NOT NULL UNIQUE,
		email TEXT NOT NULL UNIQUE,
		password_hash TEXT,
		avatar_url TEXT DEFAULT NULL,
		online_status BOOLEAN DEFAULT FALSE,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	)

PRAGMA table_info(users)
PRAGMA foreign_keys = ON

	CREATE TABLE IF NOT EXISTS players (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		display_name TEXT NOT NULL UNIQUE,
		wins INTEGER DEFAULT 0,
		losses INTEGER DEFAULT 0,
		avatar_url TEXT DEFAULT NULL,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS friends (
		user_id INTEGER,
		friend_id INTEGER,
		status TEXT DEFAULT 'pending',
		PRIMARY KEY (user_id, friend_id),
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS tournaments (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		name TEXT NOT NULL,
		status TEXT DEFAULT 'pending',
		current_round INTEGER DEFAULT 0,
		winner_id INTEGER,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id)
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)


	CREATE TABLE IF NOT EXISTS match_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		type TEXT NOT NULL,
		tournament_id INTEGER DEFAULT NULL,
		round INTEGER,
		date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS match_player_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		player_id INTEGER NOT NULL,
		score INTEGER DEFAULT 0 NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (player_id) REFERENCES players(id),
		UNIQUE (match_id, player_id)
	)


	CREATE TABLE IF NOT EXISTS match_winner_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		winner_id INTEGER NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)

TAP version 14
# Subtest: All Test
{"level":30,"time":1746715418941,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users
    # Subtest: Auth Routes Suite
        # Subtest: GET `/users` returns empty array
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/users` returns empty array # time=19.835ms
        
        # Subtest: POST `/register`
            # Subtest: returns 400 if email is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if email is missing # time=9.241ms
            
{"level":30,"time":1746715418946,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1","res":{"statusCode":200},"responseTime":4.3275041580200195,"msg":"request completed"}
{"level":30,"time":1746715418956,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715418959,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'email'","stack":"Error: body must have required property 'email'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"email"},"message":"must have required property 'email'"}],"validationContext":"body"},"msg":"body must have required property 'email'"}
{"level":30,"time":1746715418960,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2","res":{"statusCode":400},"responseTime":4.021638870239258,"msg":"request completed"}
{"level":30,"time":1746715418962,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-3","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if invalid email
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if invalid email # time=2.312ms
            
{"level":30,"time":1746715418963,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-3","res":{"statusCode":400},"err":{"type":"Error","message":"body/email must match format \"email\"","stack":"Error: body/email must match format \"email\"\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/email","schemaPath":"#/properties/email/format","keyword":"format","params":{"format":"email"},"message":"must match format \"email\""}],"validationContext":"body"},"msg":"body/email must match format \"email\""}
{"level":30,"time":1746715418963,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-3","res":{"statusCode":400},"responseTime":1.226297378540039,"msg":"request completed"}
{"level":30,"time":1746715418965,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-4","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username < 3 chars
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - returns 400 if username < 3 chars # time=1.563ms
            
{"level":30,"time":1746715418965,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-4","res":{"statusCode":400},"err":{"type":"Error","message":"body/username must NOT have fewer than 3 characters","stack":"Error: body/username must NOT have fewer than 3 characters\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/username","schemaPath":"#/properties/username/minLength","keyword":"minLength","params":{"limit":3},"message":"must NOT have fewer than 3 characters"}],"validationContext":"body"},"msg":"body/username must NOT have fewer than 3 characters"}
{"level":30,"time":1746715418965,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-4","res":{"statusCode":400},"responseTime":0.5351076126098633,"msg":"request completed"}
{"level":30,"time":1746715418967,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-5","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - returns 400 if username is missing # time=1.488ms
            
{"level":30,"time":1746715418967,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-5","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1746715418967,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-5","res":{"statusCode":400},"responseTime":0.4968881607055664,"msg":"request completed"}
{"level":30,"time":1746715418968,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-6","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 5 - returns 400 if password is missing # time=1.457ms
            
{"level":30,"time":1746715418969,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-6","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1746715418969,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-6","res":{"statusCode":400},"responseTime":0.4704322814941406,"msg":"request completed"}
{"level":30,"time":1746715418970,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-7","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if invalid password
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 6 - returns 400 if invalid password # time=1.642ms
            
{"level":30,"time":1746715418971,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-7","res":{"statusCode":400},"err":{"type":"Error","message":"body/password must NOT have fewer than 6 characters","stack":"Error: body/password must NOT have fewer than 6 characters\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/password","schemaPath":"#/properties/password/minLength","keyword":"minLength","params":{"limit":6},"message":"must NOT have fewer than 6 characters"}],"validationContext":"body"},"msg":"body/password must NOT have fewer than 6 characters"}
{"level":30,"time":1746715418971,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-7","res":{"statusCode":400},"responseTime":0.6136131286621094,"msg":"request completed"}
{"level":30,"time":1746715418972,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-8","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'testuse@email.com', '$2b$10$TqJ3EC0omEK3cuGaiOeOX.yL2'/*+28 bytes*/)
SELECT id, username, email, online_status, two_fa_enabled, created_at FROM users WHERE id = 1.0
{"level":30,"time":1746715419125,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-8","res":{"statusCode":201},"responseTime":152.7760772705078,"msg":"request completed"}
            # Subtest: returns 201 if successfully created user
                ok 1 - Status code 201
                ok 2 - should be equal
SELECT * FROM users
                ok 3 - Status code 200
                ok 4 - One user in the database
                ok 5 - should be equivalent
                1..5
            ok 7 - returns 201 if successfully created user # time=156.833ms
            
{"level":30,"time":1746715419126,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-9","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715419127,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-9","res":{"statusCode":200},"responseTime":0.7001419067382812,"msg":"request completed"}
{"level":30,"time":1746715419130,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-a","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'new@email.com', '$2b$10$AnHNmG7bbbUG8ZyIgcnNGu3Ua'/*+28 bytes*/)
{"level":30,"time":1746715419236,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-a","res":{"statusCode":409},"responseTime":106.01804447174072,"msg":"request completed"}
            # Subtest: returns 400 if duplicate name
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 8 - returns 400 if duplicate name # time=107.285ms
            
{"level":30,"time":1746715419237,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-b","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('newuser', 'testuse@email.com', '$2b$10$jwgLcEhIZX5zEmH2YN1ux.EjY'/*+28 bytes*/)
{"level":30,"time":1746715419348,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-b","res":{"statusCode":409},"responseTime":110.9419412612915,"msg":"request completed"}
            # Subtest: returns 400 if duplicate email
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 9 - returns 400 if duplicate email # time=112.113ms
            
{"level":30,"time":1746715419350,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-c","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('kim', 'kim@email.com', '$2b$10$PtOjquK6/nYp35LhPGBgMeBEs'/*+28 bytes*/)
SELECT id, username, email, online_status, two_fa_enabled, created_at FROM users WHERE id = 2.0
{"level":30,"time":1746715419460,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-c","res":{"statusCode":201},"responseTime":109.79349899291992,"msg":"request completed"}
            # Subtest: returns 201 if successfully created another user
                ok 1 - Status code 201
                ok 2 - should be equal
                1..2
            ok 10 - returns 201 if successfully created another user # time=111.003ms
            
            1..10
        ok 2 - POST `/register` # time=509.937ms
        
{"level":30,"time":1746715419466,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-d","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/login`
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if username is missing # time=5.211ms
            
{"level":30,"time":1746715419467,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-d","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1746715419467,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-d","res":{"statusCode":400},"responseTime":0.860905647277832,"msg":"request completed"}
{"level":30,"time":1746715419469,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-e","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if password is missing # time=1.675ms
            
{"level":30,"time":1746715419469,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-e","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1746715419469,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-e","res":{"statusCode":400},"responseTime":0.6090316772460938,"msg":"request completed"}
{"level":30,"time":1746715419471,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-f","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'nonexistentuser'
            # Subtest: returns 401 if user not found
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 3 - returns 401 if user not found # time=1.902ms
            
{"level":30,"time":1746715419472,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-f","res":{"statusCode":401},"responseTime":0.83251953125,"msg":"request completed"}
{"level":30,"time":1746715419473,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-g","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
{"level":30,"time":1746715419580,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-g","res":{"statusCode":401},"responseTime":106.81918621063232,"msg":"request completed"}
            # Subtest: returns 401 if password is incorrect
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 4 - returns 401 if password is incorrect # time=108.052ms
            
{"level":30,"time":1746715419581,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-h","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
SELECT two_fa_enabled FROM users WHERE id = 2.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0
            AND online_status = FALSE
        
{"level":30,"time":1746715419697,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-h","res":{"statusCode":200},"responseTime":115.08360958099365,"msg":"request completed"}
            # Subtest: returns 200 if login is successful
                ok 1 - Status code 200
                ok 2 - Token is present
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = 2.0
                ok 4 - Status code 200
                ok 5 - should be equivalent
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users
            SET online_status = FALSE
            WHERE id = 2.0
            AND online_status = TRUE
        
                # Subtest: POST `/logout`
                    # Subtest: returns 200 if logout is successful
                        ok 1 - Status code 200
                        ok 2 - should be equal
SELECT * FROM users WHERE id = 2.0
                        ok 3 - Status code 200
                        ok 4 - should be equivalent
                        1..4
                    ok 1 - returns 200 if logout is successful # time=10.548ms
                    
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users
            SET online_status = FALSE
            WHERE id = 2.0
            AND online_status = TRUE
        
                    # Subtest: returns 400 if user already logged out
                        ok 1 - Status code 404
                        ok 2 - should be equal
                        1..2
                    ok 2 - returns 400 if user already logged out # time=1.979ms
                    
                    1..2
                ok 6 - POST `/logout` # time=14.166ms
                
                1..6
            ok 5 - returns 200 if login is successful # time=133.397ms
            
            1..5
        ok 3 - POST `/login` # time=253.448ms
        
        1..3
    ok 1 - Auth Routes Suite # time=786.101ms
    
SELECT * FROM users
    # Subtest: User Routes Suite
        # Subtest: GET `/users` returns two users
            ok 1 - Status code 200
            ok 2 - Two user in the database
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 1 - GET `/users` returns two users # time=7.85ms
        
SELECT * FROM users WHERE id = 2.0
        # Subtest: GET `/users/:id` returns second user
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 2 - GET `/users/:id` returns second user # time=1.614ms
        
SELECT * FROM users WHERE id = 3.0
        # Subtest: GET `/users/:id` returns 404 user not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 3 - GET `/users/:id` returns 404 user not found # time=1.416ms
        
{"level":30,"time":1746715419698,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-i","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715419699,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-i","res":{"statusCode":200},"responseTime":0.92120361328125,"msg":"request completed"}
{"level":30,"time":1746715419701,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-j","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715419708,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-j","res":{"statusCode":200},"responseTime":6.777002334594727,"msg":"request completed"}
{"level":30,"time":1746715419710,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-k","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715419710,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-k","res":{"statusCode":200},"responseTime":0.5413789749145508,"msg":"request completed"}
{"level":30,"time":1746715419712,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-l","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715419713,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-l","res":{"statusCode":404},"responseTime":0.7610292434692383,"msg":"request completed"}
{"level":30,"time":1746715419724,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-m","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715419724,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-m","res":{"statusCode":200},"responseTime":0.5894584655761719,"msg":"request completed"}
{"level":30,"time":1746715419726,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-n","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715419727,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-n","res":{"statusCode":200},"responseTime":0.5242300033569336,"msg":"request completed"}
{"level":30,"time":1746715419728,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-o","req":{"method":"GET","url":"/users/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715419729,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-o","res":{"statusCode":404},"responseTime":0.5076026916503906,"msg":"request completed"}
{"level":30,"time":1746715419730,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-p","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'testuser'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746715419844,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-p","res":{"statusCode":200},"responseTime":114.31198310852051,"msg":"request completed"}
{"level":30,"time":1746715419846,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-q","req":{"method":"PUT","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: PUT `/users/:id`
            # Subtest: PUT `/users/2` returns 403 if unauthoritized
                ok 1 - Status code 403
                ok 2 - should be equal
                1..2
            ok 1 - PUT `/users/2` returns 403 if unauthoritized # time=3.457ms
            
{"level":30,"time":1746715419848,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-q","res":{"statusCode":403},"responseTime":1.263413429260254,"msg":"request completed"}
{"level":30,"time":1746715419849,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-r","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'kim'
            # Subtest: PUT `/users/1` returns 400 if username already taken
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - PUT `/users/1` returns 400 if username already taken # time=1.945ms
            
{"level":30,"time":1746715419850,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-r","res":{"statusCode":400},"responseTime":0.9501657485961914,"msg":"request completed"}
{"level":30,"time":1746715419851,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-s","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'kim@email.com'
            # Subtest: PUT `/users/1` returns 400 if email already in use
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - PUT `/users/1` returns 400 if email already in use # time=1.991ms
            
{"level":30,"time":1746715419852,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-s","res":{"statusCode":400},"responseTime":0.9483890533447266,"msg":"request completed"}
{"level":30,"time":1746715419854,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-t","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'new@email.com'

            UPDATE users
            SET username = 'testuser', password_hash = '$2b$10$TqJ3EC0omEK3cuGaiOeOX.yL2'/*+28 bytes*/, email = 'new@email.com', avatar_url = NULL
            WHERE id = 1.0
        

            SELECT
                id,
                username,
                email,
                avatar_url,
                online_status,
                created_at,
                two_fa_enabled
            FROM users
            WHERE id = 1.0
        
            # Subtest: PUT `/users/1` returns 200 if email updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 4 - PUT `/users/1` returns 200 if email updated # time=8.39ms
            
{"level":30,"time":1746715419860,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-t","res":{"statusCode":200},"responseTime":6.918025970458984,"msg":"request completed"}
{"level":30,"time":1746715419862,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-u","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'lumi'

            UPDATE users
            SET username = 'lumi', password_hash = '$2b$10$TqJ3EC0omEK3cuGaiOeOX.yL2'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
            WHERE id = 1.0
        

            SELECT
                id,
                username,
                email,
                avatar_url,
                online_status,
                created_at,
                two_fa_enabled
            FROM users
            WHERE id = 1.0
        
            # Subtest: PUT `/users/1` returns 200 if username and avatar_url updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = 1.0
                ok 4 - Status code 200
                ok 5 - should be equivalent
                1..5
            ok 5 - PUT `/users/1` returns 200 if username and avatar_url updated # time=10.017ms
            
{"level":30,"time":1746715419869,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-u","res":{"statusCode":200},"responseTime":7.106042861938477,"msg":"request completed"}
{"level":30,"time":1746715419871,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-v","req":{"method":"GET","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715419871,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-v","res":{"statusCode":200},"responseTime":0.49869537353515625,"msg":"request completed"}
{"level":30,"time":1746715419873,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-w","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0

            UPDATE users
            SET username = 'lumi', password_hash = '$2b$10$nmUEEOVk2NjIVtkZXdZSEuY/I'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
            WHERE id = 1.0
        

            SELECT
                id,
                username,
                email,
                avatar_url,
                online_status,
                created_at,
                two_fa_enabled
            FROM users
            WHERE id = 1.0
        
{"level":30,"time":1746715419983,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-w","res":{"statusCode":200},"responseTime":110.30416202545166,"msg":"request completed"}
            # Subtest: PUT `/users/1` returns 200 if password updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
{"level":30,"time":1746715419984,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-x","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
{"level":30,"time":1746715420091,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-x","res":{"statusCode":401},"responseTime":106.65125465393066,"msg":"request completed"}
                ok 4 - Status code 401
                ok 5 - should be equal
{"level":30,"time":1746715420092,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-y","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746715420198,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-y","res":{"statusCode":200},"responseTime":105.83233833312988,"msg":"request completed"}
                ok 6 - Token is present
                ok 7 - Status code 200
                ok 8 - should be equivalent
                1..8
            ok 6 - PUT `/users/1` returns 200 if password updated # time=326.012ms
            
            1..6
        ok 4 - PUT `/users/:id` # time=469.309ms
        
        1..4
    ok 2 - User Routes Suite # time=483.671ms
    
{"level":30,"time":1746715420200,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-z","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746715420307,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-z","res":{"statusCode":200},"responseTime":107.26595687866211,"msg":"request completed"}

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
    # Subtest: POST `/login`
        # Subtest: GET `/friends` returns 404 when no friends found for user
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 1 - GET `/friends` returns 404 when no friends found for user # time=3.964ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
        # Subtest: PATCH `/friends-requests/2` returns 404 when friend request not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 2 - PATCH `/friends-requests/2` returns 404 when friend request not found # time=1.883ms
        
        # Subtest: POST `/friend-requests/:id`
            # Subtest: POST `/friend-requests/1` returns 400 when request to itself
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - POST `/friend-requests/1` returns 400 when request to itself # time=2.738ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 0.0 AND friend_id = 1.0
            OR friend_id = 0.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 0.0)
        
SqliteError: FOREIGN KEY constraint failed
    at Object.sendFriendRequest [90m(file:///home/vvaalant/Documents/ring7/new2/backend/[39mcontrollers/friendController.js:80:12[90m)[39m
    at preHandlerCallbackInner [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m {
  code: [32m'SQLITE_CONSTRAINT_FOREIGNKEY'[39m
}
            # Subtest: POST `/friend-requests/0` returns 500 when invalid id
                ok 1 - Status code 500
                ok 2 - should be equal
                1..2
            ok 2 - POST `/friend-requests/0` returns 500 when invalid id # time=2.446ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
            # Subtest: POST `/friend-requests/2` returns 200 when successfully sent
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 3 - POST `/friend-requests/2` returns 200 when successfully sent # time=6.59ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        
            # Subtest: POST `/friend-requests/2` returns 409 when friend request already exists
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 4 - POST `/friend-requests/2` returns 409 when friend request already exists # time=1.869ms
            
            1..4
        ok 3 - POST `/friend-requests/:id` # time=15.76ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 6.0) OR (user_id = 6.0 AND friend_id = 1.0)
        
        # Subtest: GET `/friends/:id/status`
            # Subtest: GET `/friends/:id/status` returns 404 when friend not found
                ok 1 - Status code 404
                ok 2 - should be equal
                1..2
            ok 1 - GET `/friends/:id/status` returns 404 when friend not found # time=2.965ms
            

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
            # Subtest: GET `/friends/:id/status` returns 400 when friend request pending
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - GET `/friends/:id/status` returns 400 when friend request pending # time=1.683ms
            
            1..2
        ok 4 - GET `/friends/:id/status` # time=6.494ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friends-requests/2` returns 400 waiting for friend to accept request
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 5 - PATCH `/friends-requests/2` returns 400 waiting for friend to accept request # time=1.739ms
        
{"level":30,"time":1746715420310,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-10","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420311,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-10","res":{"statusCode":404},"responseTime":0.8360223770141602,"msg":"request completed"}
{"level":30,"time":1746715420312,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-11","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420313,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-11","res":{"statusCode":404},"responseTime":0.9275655746459961,"msg":"request completed"}
{"level":30,"time":1746715420316,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-12","req":{"method":"POST","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420317,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-12","res":{"statusCode":400},"responseTime":0.6064205169677734,"msg":"request completed"}
{"level":30,"time":1746715420318,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-13","req":{"method":"POST","url":"/friend-requests/0","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420320,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-13","res":{"statusCode":500},"responseTime":1.4091873168945312,"msg":"request completed"}
{"level":30,"time":1746715420321,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-14","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420326,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-14","res":{"statusCode":200},"responseTime":5.119865417480469,"msg":"request completed"}
{"level":30,"time":1746715420328,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-15","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420329,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-15","res":{"statusCode":409},"responseTime":0.8095998764038086,"msg":"request completed"}
{"level":30,"time":1746715420333,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-16","req":{"method":"GET","url":"/friends/6/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420334,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-16","res":{"statusCode":404},"responseTime":0.871739387512207,"msg":"request completed"}
{"level":30,"time":1746715420335,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-17","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420336,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-17","res":{"statusCode":400},"responseTime":0.6364278793334961,"msg":"request completed"}
{"level":30,"time":1746715420338,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-18","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420338,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-18","res":{"statusCode":400},"responseTime":0.6808071136474609,"msg":"request completed"}
{"level":30,"time":1746715420340,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-19","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
SELECT two_fa_enabled FROM users WHERE id = 2.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0
            AND online_status = FALSE
        
{"level":30,"time":1746715420453,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-19","res":{"statusCode":200},"responseTime":112.9661169052124,"msg":"request completed"}
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0

            UPDATE friends 
            SET status = 'accepted' 
            WHERE user_id = 1.0 AND friend_id = 2.0
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
        # Subtest: PATCH `/friends-requests/2` returns 200 accept friend request
            ok 1 - Status code 200
            ok 2 - should be equal
            ok 3 - should be equivalent
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
            # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - PATCH `/friend-requests/2` returns 400 when already friends # time=1.724ms
            
            1..4
        ok 6 - PATCH `/friends-requests/2` returns 200 accept friend request # time=121.897ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 7 - PATCH `/friend-requests/2` returns 400 when already friends # time=1.473ms
        

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        
        # Subtest: POST `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 8 - POST `/friend-requests/2` returns 400 when already friends # time=1.547ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        

            SELECT username, online_status FROM users 
            WHERE id = 2.0
        
        # Subtest: GET `/friends/:id/status` returns 200 when already friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 9 - GET `/friends/:id/status` returns 200 when already friends # time=2.002ms
        

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
        # Subtest: GET `/friends` returns 200 returning all friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 10 - GET `/friends` returns 200 returning all friends # time=1.741ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 4.0) OR (user_id = 4.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 404 when unauthorized action
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 11 - DELETE `/friends/:id` returns 404 when unauthorized action # time=1.733ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 200 when friend removed
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 12 - DELETE `/friends/:id` returns 200 when friend removed # time=7.269ms
        
        1..12
    ok 3 - POST `/login` # time=279.901ms
    
{"level":30,"time":1746715420453,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1a","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420458,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1a","res":{"statusCode":200},"responseTime":4.962878227233887,"msg":"request completed"}
{"level":30,"time":1746715420459,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1b","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420460,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1b","res":{"statusCode":400},"responseTime":0.7216777801513672,"msg":"request completed"}
{"level":30,"time":1746715420462,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1c","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420462,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1c","res":{"statusCode":400},"responseTime":0.5268316268920898,"msg":"request completed"}
{"level":30,"time":1746715420463,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1d","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420464,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1d","res":{"statusCode":400},"responseTime":0.5835800170898438,"msg":"request completed"}
{"level":30,"time":1746715420465,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1e","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420466,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1e","res":{"statusCode":200},"responseTime":0.8650674819946289,"msg":"request completed"}
{"level":30,"time":1746715420468,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1f","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420468,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1f","res":{"statusCode":200},"responseTime":0.7596721649169922,"msg":"request completed"}
{"level":30,"time":1746715420470,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1g","req":{"method":"DELETE","url":"/friends/4","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420471,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1g","res":{"statusCode":404},"responseTime":0.7965936660766602,"msg":"request completed"}
{"level":30,"time":1746715420472,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1h","req":{"method":"DELETE","url":"/friends/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420478,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1h","res":{"statusCode":200},"responseTime":6.270341873168945,"msg":"request completed"}
{"level":30,"time":1746715420480,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1i","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
SELECT two_fa_enabled FROM users WHERE id = 2.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0
            AND online_status = FALSE
        
{"level":30,"time":1746715420588,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1i","res":{"statusCode":200},"responseTime":107.59435558319092,"msg":"request completed"}
{"level":30,"time":1746715420588,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1j","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746715420694,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1j","res":{"statusCode":200},"responseTime":105.77884101867676,"msg":"request completed"}
SELECT * FROM players WHERE user_id = 2.0
    # Subtest: POST `/login`
        # Subtest: GET `/players` returns 404 when no players found for user
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 1 - GET `/players` returns 404 when no players found for user # time=4.497ms
        
{"level":30,"time":1746715420697,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1k","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420698,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1k","res":{"statusCode":404},"responseTime":0.7898702621459961,"msg":"request completed"}
{"level":30,"time":1746715420699,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1l","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 1.0
        # Subtest: POST `/players` returns 201 on successful creation
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 2 - POST `/players` returns 201 on successful creation # time=7.716ms
        
{"level":30,"time":1746715420706,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1l","res":{"statusCode":201},"responseTime":6.313094139099121,"msg":"request completed"}
{"level":30,"time":1746715420707,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1m","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
        # Subtest: POST `/players` returns 409 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 3 - POST `/players` returns 409 for duplicate display_name # time=1.938ms
        
{"level":30,"time":1746715420708,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1m","res":{"statusCode":409},"responseTime":0.9663877487182617,"msg":"request completed"}
{"level":30,"time":1746715420710,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1n","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player2', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 2.0
{"level":30,"time":1746715420715,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1n","res":{"statusCode":201},"responseTime":5.438057899475098,"msg":"request completed"}
{"level":30,"time":1746715420715,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1o","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player3', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 3.0
{"level":30,"time":1746715420721,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1o","res":{"statusCode":201},"responseTime":5.539087295532227,"msg":"request completed"}
{"level":30,"time":1746715420721,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1p","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player4', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 4.0
{"level":30,"time":1746715420727,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1p","res":{"statusCode":201},"responseTime":5.737990379333496,"msg":"request completed"}
{"level":30,"time":1746715420727,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1q","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player5', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 5.0
{"level":30,"time":1746715420733,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1q","res":{"statusCode":201},"responseTime":5.391966819763184,"msg":"request completed"}
{"level":30,"time":1746715420733,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1r","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player6', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 6.0
{"level":30,"time":1746715420738,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1r","res":{"statusCode":201},"responseTime":5.099047660827637,"msg":"request completed"}
{"level":30,"time":1746715420738,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1s","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player7', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 7.0
{"level":30,"time":1746715420743,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1s","res":{"statusCode":201},"responseTime":4.7556047439575195,"msg":"request completed"}
{"level":30,"time":1746715420743,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1t","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player8', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 8.0
{"level":30,"time":1746715420748,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1t","res":{"statusCode":201},"responseTime":4.893056869506836,"msg":"request completed"}
{"level":30,"time":1746715420748,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1u","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
        # Subtest: POST `/players` returns 400 when max players limit is reached
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 4 - POST `/players` returns 400 when max players limit is reached # time=40.546ms
        
SELECT * FROM players WHERE id = 8.0 AND user_id = 1.0
        # Subtest: GET `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 5 - GET `/players/:id` returns 404 when unauthorized # time=1.727ms
        
SELECT * FROM players WHERE id = 100.0 AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 6 - GET `/players/:id` returns 404 when player does not exist # time=1.372ms
        
SELECT * FROM players WHERE id = 8.0 AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 200 with valid data
            ok 1 - should be equal
            ok 2 - should be equivalent
            1..2
        ok 7 - GET `/players/:id` returns 200 with valid data # time=1.834ms
        
DELETE FROM players WHERE id = 3.0 AND user_id = 1.0
        # Subtest: DELETE `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 8 - DELETE `/players/:id` returns 404 when unauthorized # time=1.714ms
        
DELETE FROM players WHERE id = 100.0 AND user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 9 - DELETE `/players/:id` returns 404 when player does not exist # time=1.277ms
        
DELETE FROM players WHERE id = 3.0 AND user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 200 on success
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 10 - DELETE `/players/:id` returns 200 on success # time=5.447ms
        
SELECT * FROM players WHERE user_id = 2.0
        # Subtest: GET `/players` returns remaining players
            ok 1 - should be equal
            ok 2 - should be equivalent
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 11 - GET `/players` returns remaining players # time=2.34ms
        
{"level":30,"time":1746715420749,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1u","res":{"statusCode":400},"responseTime":0.7242898941040039,"msg":"request completed"}
{"level":30,"time":1746715420751,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1v","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420751,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1v","res":{"statusCode":404},"responseTime":0.7404088973999023,"msg":"request completed"}
{"level":30,"time":1746715420752,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1w","req":{"method":"GET","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420753,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1w","res":{"statusCode":404},"responseTime":0.5142850875854492,"msg":"request completed"}
{"level":30,"time":1746715420754,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1x","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420755,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1x","res":{"statusCode":200},"responseTime":0.7826328277587891,"msg":"request completed"}
{"level":30,"time":1746715420756,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1y","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420757,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1y","res":{"statusCode":404},"responseTime":0.8154449462890625,"msg":"request completed"}
{"level":30,"time":1746715420758,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1z","req":{"method":"DELETE","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420759,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-1z","res":{"statusCode":404},"responseTime":0.4841156005859375,"msg":"request completed"}
{"level":30,"time":1746715420760,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-20","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420764,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-20","res":{"statusCode":200},"responseTime":4.44143009185791,"msg":"request completed"}
{"level":30,"time":1746715420766,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-21","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715420767,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-21","res":{"statusCode":200},"responseTime":0.8919267654418945,"msg":"request completed"}
{"level":30,"time":1746715420768,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-22","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM players WHERE id = 1.0 AND user_id = 1.0
        # Subtest: PUT `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 12 - PUT `/players/:id` returns 404 when unauthorized # time=2.159ms
        
{"level":30,"time":1746715420770,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-22","res":{"statusCode":404},"responseTime":1.241520881652832,"msg":"request completed"}
{"level":30,"time":1746715420771,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-23","req":{"method":"PUT","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM players WHERE id = 100.0 AND user_id = 2.0
        # Subtest: PUT `/players/:id` returns 404 for invalid id
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 13 - PUT `/players/:id` returns 404 for invalid id # time=1.835ms
        
{"level":30,"time":1746715420772,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-23","res":{"statusCode":404},"responseTime":0.8644084930419922,"msg":"request completed"}
{"level":30,"time":1746715420773,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-24","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM players WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM players WHERE display_name = 'Player7'
        # Subtest: PUT `/players/:id` returns 400 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 14 - PUT `/players/:id` returns 400 for duplicate display_name # time=1.897ms
        
{"level":30,"time":1746715420774,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-24","res":{"statusCode":400},"responseTime":1.0265216827392578,"msg":"request completed"}
{"level":30,"time":1746715420775,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-25","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM players WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM players WHERE display_name = 'updatedPlayer'
UPDATE players SET display_name = 'updatedPlayer', avatar_url = 'notnull.com' WHERE id = 1.0
        # Subtest: PUT `/players/:id` returns 200 when update is successful
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 15 - PUT `/players/:id` returns 200 when update is successful # time=6.79ms
        
        1..15
    ok 4 - POST `/login` # time=302.529ms
    
{"level":30,"time":1746715420781,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-25","res":{"statusCode":200},"responseTime":5.549104690551758,"msg":"request completed"}
{"level":30,"time":1746715420783,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-26","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
SELECT two_fa_enabled FROM users WHERE id = 2.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0
            AND online_status = FALSE
        
{"level":30,"time":1746715420891,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-26","res":{"statusCode":200},"responseTime":108.35943794250488,"msg":"request completed"}
{"level":30,"time":1746715420891,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-27","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746715420998,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-27","res":{"statusCode":200},"responseTime":106.96931076049805,"msg":"request completed"}

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
        
    # Subtest: POST `/login` - Login as kim
        # Subtest: GET `/match-histories` returns 200 with empty array when no matches found for user
            ok 1 - Status code should be 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/match-histories` returns 200 with empty array when no matches found for user # time=4.391ms
        
{"level":30,"time":1746715421002,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-28","req":{"method":"GET","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421003,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-28","res":{"statusCode":200},"responseTime":0.8252906799316406,"msg":"request completed"}
{"level":30,"time":1746715421004,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-29","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/match-histories` returns 400 when missing one player
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 2 - POST `/match-histories` returns 400 when missing one player # time=2.09ms
        
{"level":30,"time":1746715421005,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-29","res":{"statusCode":400},"responseTime":1.1891546249389648,"msg":"request completed"}
{"level":30,"time":1746715421006,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2a","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 100.0)
    
ROLLBACK
        # Subtest: POST `/match-histories` returns 500 when player does not exist
            ok 1 - Status code should be 500
            ok 2 - should be equal
            1..2
        ok 3 - POST `/match-histories` returns 500 when player does not exist # time=3.025ms
        
{"level":30,"time":1746715421009,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2a","res":{"statusCode":500},"responseTime":2.178661346435547,"msg":"request completed"}
{"level":30,"time":1746715421010,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2b","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 1.0)
    

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 2.0)
    
COMMIT
        # Subtest: POST `/match-histories` returns 201 when match is successfully created
            ok 1 - Status code should be 201
            ok 2 - should be equal
            1..2
        ok 4 - POST `/match-histories` returns 201 when match is successfully created # time=6.666ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = 200.0
        
        # Subtest: GET `/match-histories/200` returns 404 when match is not found
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 5 - GET `/match-histories/200` returns 404 when match is not found # time=1.823ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = 1.0
        
        # Subtest: GET `/match-histories/1` returns 200 for an existing match
            ok 1 - Status code should be 200
            ok 2 - should be equivalent
            1..2
        ok 6 - GET `/match-histories/1` returns 200 for an existing match # time=2.217ms
        
{"level":30,"time":1746715421016,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2b","res":{"statusCode":201},"responseTime":5.7231340408325195,"msg":"request completed"}
{"level":30,"time":1746715421017,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2c","req":{"method":"GET","url":"/match-histories/200","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421018,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2c","res":{"statusCode":404},"responseTime":0.8631401062011719,"msg":"request completed"}
{"level":30,"time":1746715421019,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2d","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421020,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2d","res":{"statusCode":200},"responseTime":0.8478412628173828,"msg":"request completed"}
{"level":30,"time":1746715421022,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2e","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 1.0
        # Subtest: PUT /match-histories/:id returns 403 when unauthorized to update
            ok 1 - Status code should be 403
            ok 2 - should be equal
            1..2
        ok 7 - PUT /match-histories/:id returns 403 when unauthorized to update # time=2.793ms
        
{"level":30,"time":1746715421023,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2e","res":{"statusCode":403},"responseTime":1.7661752700805664,"msg":"request completed"}
{"level":30,"time":1746715421025,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2f","req":{"method":"PUT","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 100.0 AND user_id = 2.0
        # Subtest: PUT /match-histories/:id returns 403 when match not found
            ok 1 - Status code should be 403
            ok 2 - should be equal
            1..2
        ok 8 - PUT /match-histories/:id returns 403 when match not found # time=1.821ms
        
        # Subtest: PUT /match-histories/:id returns 400 when score is missing
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 9 - PUT /match-histories/:id returns 400 when score is missing # time=1.725ms
        
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 1.0
{"level":30,"time":1746715421026,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2f","res":{"statusCode":403},"responseTime":0.9319438934326172,"msg":"request completed"}
{"level":30,"time":1746715421027,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2g","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 1.0 AND player_id = 1.0
    
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 4.0
COMMIT
        # Subtest: PUT /match-histories/:id returns 404 when player not in match
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 10 - PUT /match-histories/:id returns 404 when player not in match # time=7.981ms
        
{"level":30,"time":1746715421027,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2g","res":{"statusCode":400},"err":{"type":"Error","message":"body/players/1 must have required property 'score'","stack":"Error: body/players/1 must have required property 'score'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/players/1","schemaPath":"#/properties/players/items/required","keyword":"required","params":{"missingProperty":"score"},"message":"must have required property 'score'"}],"validationContext":"body"},"msg":"body/players/1 must have required property 'score'"}
{"level":30,"time":1746715421028,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2g","res":{"statusCode":400},"responseTime":0.810267448425293,"msg":"request completed"}
{"level":30,"time":1746715421029,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2h","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421031,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2h","res":{"statusCode":404},"responseTime":1.952000617980957,"msg":"request completed"}
{"level":40,"time":1746715421036,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2h","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?\n    at Reply.send (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.updateMatchHistory (file:///home/vvaalant/Documents/ring7/new2/backend/controllers/matchHistoryController.js:184:32)\n    at preHandlerCallbackInner (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?"}
{"level":30,"time":1746715421037,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2i","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: PUT /match-histories/:id returns 400 when winner is not part of the players
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 11 - PUT /match-histories/:id returns 400 when winner is not part of the players # time=1.408ms
        
{"level":30,"time":1746715421038,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2i","res":{"statusCode":400},"responseTime":0.5811853408813477,"msg":"request completed"}
{"level":30,"time":1746715421039,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2j","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 1.0 AND player_id = 1.0
    
UPDATE players SET losses = losses + 1 WHERE id = 1.0
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 2.0

        UPDATE match_player_history SET score = 3.0 WHERE match_id = 1.0 AND player_id = 2.0
    
SELECT * FROM match_winner_history WHERE match_id = 1.0 AND winner_id = 2.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES (1.0, 2.0)
UPDATE players SET wins = wins + 1 WHERE id = 2.0
COMMIT
        # Subtest: PUT /match-histories/:id returns 200 on success
            ok 1 - Status code should be 200
            ok 2 - should be equal

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = 1.0
        
            ok 3 - should be equivalent
            1..3
        ok 12 - PUT /match-histories/:id returns 200 on success # time=10.714ms
        
DELETE FROM match_history WHERE id = 1.0 AND user_id = 1.0
        # Subtest: DELETE /match-histories/:id returns 404 when unauthorized
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 13 - DELETE /match-histories/:id returns 404 when unauthorized # time=1.56ms
        
DELETE FROM match_history WHERE id = 100.0 AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 404 when match does not exist
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 14 - DELETE /match-histories/:id returns 404 when match does not exist # time=1.245ms
        
DELETE FROM match_history WHERE id = 1.0 AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 200 on success
            ok 1 - Status code should be 200
            ok 2 - should be equal
            1..2
        ok 15 - DELETE /match-histories/:id returns 200 on success # time=7.476ms
        
        1..15
    ok 5 - POST `/login` - Login as kim # time=278.437ms
    
{"level":30,"time":1746715421047,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2j","res":{"statusCode":200},"responseTime":8.520147323608398,"msg":"request completed"}
{"level":30,"time":1746715421048,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2k","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421049,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2k","res":{"statusCode":200},"responseTime":0.6382846832275391,"msg":"request completed"}
{"level":30,"time":1746715421050,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2l","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421051,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2l","res":{"statusCode":404},"responseTime":0.7250185012817383,"msg":"request completed"}
{"level":30,"time":1746715421052,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2m","req":{"method":"DELETE","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421052,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2m","res":{"statusCode":404},"responseTime":0.4788322448730469,"msg":"request completed"}
{"level":30,"time":1746715421053,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2n","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421060,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2n","res":{"statusCode":200},"responseTime":6.580995559692383,"msg":"request completed"}
{"level":30,"time":1746715421062,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2o","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('alice2fa', 'alice2fa@example.com', '$2b$10$rdiA.FrETNOnaWQXykMQ5ObCI'/*+28 bytes*/)
SELECT id, username, email, online_status, two_fa_enabled, created_at FROM users WHERE id = 3.0
{"level":30,"time":1746715421172,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2o","res":{"statusCode":201},"responseTime":110.628005027771,"msg":"request completed"}
    # Subtest: Two-Factor Authentication Suite
        ok 1 - POST /register → 201
{"level":30,"time":1746715421173,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2p","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'alice2fa'
SELECT two_fa_enabled FROM users WHERE id = 3.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 3.0
            AND online_status = FALSE
        
{"level":30,"time":1746715421284,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2p","res":{"statusCode":200},"responseTime":111.34089088439941,"msg":"request completed"}
        ok 2 - POST /login without 2FA → 200
UPDATE users SET two_fa_secret = 'HMXGSYJELYRTG5LFOQ5CCVTQLURXESBF'/*+20 bytes*/ WHERE id = 3.0
{"level":30,"time":1746715421285,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2q","req":{"method":"GET","url":"/api/2fa/setup","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421367,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2q","res":{"statusCode":200},"responseTime":82.09899044036865,"msg":"request completed"}
        ok 3 - GET /api/2fa/setup → 200
        ok 4 - returns QR data-URL
SELECT two_fa_secret FROM users WHERE id = 3.0
        ok 5 - Secret stored in DB
SELECT two_fa_secret FROM users WHERE id = 3.0
UPDATE users SET two_fa_enabled = 1 WHERE id = 3.0
        ok 6 - POST /api/2fa/verify → 200
        ok 7 - should be equal
SELECT * FROM users WHERE id = 3.0
        ok 8 - two_fa_enabled is true
{"level":30,"time":1746715421369,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2r","req":{"method":"POST","url":"/api/2fa/verify","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421374,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2r","res":{"statusCode":200},"responseTime":5.324012756347656,"msg":"request completed"}
{"level":30,"time":1746715421375,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2s","req":{"method":"GET","url":"/users/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421375,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2s","res":{"statusCode":200},"responseTime":0.5907869338989258,"msg":"request completed"}
{"level":30,"time":1746715421376,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2t","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'alice2fa'
SELECT two_fa_enabled FROM users WHERE id = 3.0
{"level":30,"time":1746715421486,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2t","res":{"statusCode":206},"responseTime":110.35740089416504,"msg":"request completed"}
        ok 9 - POST /login with 2FA → 206
        ok 10 - should be equal
{"level":30,"time":1746715421487,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2u","req":{"method":"POST","url":"/login/2fa","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT two_fa_secret FROM users WHERE id = 3.0
        ok 11 - POST /login/2fa with wrong code → 400
        ok 12 - should be equal
{"level":30,"time":1746715421488,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2u","res":{"statusCode":400},"responseTime":1.1726694107055664,"msg":"request completed"}
{"level":30,"time":1746715421489,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2v","req":{"method":"POST","url":"/login/2fa","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT two_fa_secret FROM users WHERE id = 3.0
        ok 13 - POST /login/2fa → 200
        ok 14 - JWT returned
SELECT two_fa_secret FROM users WHERE id = 3.0
UPDATE users SET two_fa_secret = NULL, two_fa_enabled = 0 WHERE id = 3.0
        ok 15 - DELETE /api/2fa → 200
        ok 16 - should be equal
{"level":30,"time":1746715421490,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2v","res":{"statusCode":200},"responseTime":0.8728485107421875,"msg":"request completed"}
{"level":30,"time":1746715421490,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2w","req":{"method":"DELETE","url":"/api/2fa","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746715421495,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2w","res":{"statusCode":200},"responseTime":4.621116638183594,"msg":"request completed"}
{"level":30,"time":1746715421495,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2x","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'alice2fa'
SELECT two_fa_enabled FROM users WHERE id = 3.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 3.0
            AND online_status = FALSE
        
{"level":30,"time":1746715421602,"pid":1769302,"hostname":"c1r4p6.hive.fi","reqId":"req-2x","res":{"statusCode":200},"responseTime":106.90544414520264,"msg":"request completed"}
        ok 17 - POST /login after disabling → 200
        ok 18 - returns token & username
        1..18
    ok 6 - Two-Factor Authentication Suite # time=541.738ms
    
    1..6
🧹 testPong.db wiped clean for next test
ok 1 - All Test # time=2931.712ms

1..1
