Using testPong.db

	CREATE TABLE IF NOT EXISTS users (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		username TEXT NOT NULL UNIQUE,
		email TEXT NOT NULL UNIQUE,
		password_hash TEXT NOT NULL,
		avatar_url TEXT DEFAULT NULL,
		online_status BOOLEAN DEFAULT FALSE,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	)

PRAGMA foreign_keys = ON

	CREATE TABLE IF NOT EXISTS players (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		display_name TEXT NOT NULL UNIQUE,
		wins INTEGER DEFAULT 0,
		losses INTEGER DEFAULT 0,
		avatar_url TEXT DEFAULT NULL,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS friends (
		user_id INTEGER,
		friend_id INTEGER,
		status TEXT DEFAULT 'pending',
		PRIMARY KEY (user_id, friend_id),
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS tournaments (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		name TEXT NOT NULL,
		status TEXT DEFAULT 'pending',
		current_round INTEGER DEFAULT 0,
		winner_id INTEGER,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)


	CREATE TABLE IF NOT EXISTS match_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		type TEXT NOT NULL,
		tournament_id INTEGER DEFAULT NULL,
		round INTEGER,
		date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS match_player_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		player_id INTEGER NOT NULL,
		score INTEGER DEFAULT 0 NOT NULL,
		team INTEGER CHECK (team IN (1, 2)),
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (player_id) REFERENCES players(id),
		UNIQUE (match_id, player_id)
	)


	CREATE TABLE IF NOT EXISTS match_winner_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		winner_id INTEGER NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)

TAP version 14
# Subtest: All Test
{"level":30,"time":1745396201566,"pid":2159,"hostname":"k2matu.local","reqId":"req-1","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users
    # Subtest: Auth Routes Suite
        # Subtest: GET `/users` returns empty array
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/users` returns empty array # time=29.703ms
        
        # Subtest: POST `/register`
            # Subtest: POST `/register` returns 400 if email is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - POST `/register` returns 400 if email is missing # time=129.131ms
            
{"level":30,"time":1745396201569,"pid":2159,"hostname":"k2matu.local","reqId":"req-1","res":{"statusCode":200},"responseTime":2.786417007446289,"msg":"request completed"}
{"level":30,"time":1745396201712,"pid":2159,"hostname":"k2matu.local","reqId":"req-2","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745396201714,"pid":2159,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'email'","stack":"Error: body must have required property 'email'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"email"},"message":"must have required property 'email'"}],"validationContext":"body"},"msg":"body must have required property 'email'"}
{"level":30,"time":1745396201715,"pid":2159,"hostname":"k2matu.local","reqId":"req-2","res":{"statusCode":400},"responseTime":2.4960408210754395,"msg":"request completed"}
{"level":30,"time":1745396201716,"pid":2159,"hostname":"k2matu.local","reqId":"req-3","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: POST `/register` returns 400 if invalid email
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - POST `/register` returns 400 if invalid email # time=1.458ms
            
{"level":30,"time":1745396201716,"pid":2159,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"err":{"type":"Error","message":"body/email must match format \"email\"","stack":"Error: body/email must match format \"email\"\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/email","schemaPath":"#/properties/email/format","keyword":"format","params":{"format":"email"},"message":"must match format \"email\""}],"validationContext":"body"},"msg":"body/email must match format \"email\""}
{"level":30,"time":1745396201717,"pid":2159,"hostname":"k2matu.local","reqId":"req-3","res":{"statusCode":400},"responseTime":0.9381251335144043,"msg":"request completed"}
{"level":30,"time":1745396201718,"pid":2159,"hostname":"k2matu.local","reqId":"req-4","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: POST `/register` returns 400 if invalid username (min 3 char)
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - POST `/register` returns 400 if invalid username (min 3 char) # time=0.811ms
            
{"level":30,"time":1745396201718,"pid":2159,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"err":{"type":"Error","message":"body/username must NOT have fewer than 3 characters","stack":"Error: body/username must NOT have fewer than 3 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/username","schemaPath":"#/properties/username/minLength","keyword":"minLength","params":{"limit":3},"message":"must NOT have fewer than 3 characters"}],"validationContext":"body"},"msg":"body/username must NOT have fewer than 3 characters"}
{"level":30,"time":1745396201718,"pid":2159,"hostname":"k2matu.local","reqId":"req-4","res":{"statusCode":400},"responseTime":0.33654212951660156,"msg":"request completed"}
{"level":30,"time":1745396201718,"pid":2159,"hostname":"k2matu.local","reqId":"req-5","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: POST `/register` returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - POST `/register` returns 400 if username is missing # time=0.748ms
            
{"level":30,"time":1745396201719,"pid":2159,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745396201719,"pid":2159,"hostname":"k2matu.local","reqId":"req-5","res":{"statusCode":400},"responseTime":0.31241607666015625,"msg":"request completed"}
{"level":30,"time":1745396201719,"pid":2159,"hostname":"k2matu.local","reqId":"req-6","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: POST `/register` returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 5 - POST `/register` returns 400 if password is missing # time=0.709ms
            
            # Subtest: POST `/register` returns 400 if invalid password
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 6 - POST `/register` returns 400 if invalid password # time=0.82ms
            
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'testuse@email.com', '$2b$10$MJiVbzN0Ol8Blemwh.mVMuVIX'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 1.0
            # Subtest: POST `/register` returns 201 if successfully created user
                ok 1 - Status code 201
                ok 2 - should be equal
SELECT * FROM users
                ok 3 - Status code 200
                ok 4 - One user in the database
                ok 5 - should be equivalent
                1..5
            ok 7 - POST `/register` returns 201 if successfully created user # time=80.442ms
            
{"level":30,"time":1745396201720,"pid":2159,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745396201720,"pid":2159,"hostname":"k2matu.local","reqId":"req-6","res":{"statusCode":400},"responseTime":0.2685422897338867,"msg":"request completed"}
{"level":30,"time":1745396201720,"pid":2159,"hostname":"k2matu.local","reqId":"req-7","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'new@email.com', '$2b$10$cbn4BsY438wfwnbZ/Hi4cuLpo'/*+28 bytes*/)
            # Subtest: POST `/register` returns 400 if duplicate name
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 8 - POST `/register` returns 400 if duplicate name # time=72.227ms
            
{"level":30,"time":1745396201721,"pid":2159,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"err":{"type":"Error","message":"body/password must NOT have fewer than 6 characters","stack":"Error: body/password must NOT have fewer than 6 characters\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/password","schemaPath":"#/properties/password/minLength","keyword":"minLength","params":{"limit":6},"message":"must NOT have fewer than 6 characters"}],"validationContext":"body"},"msg":"body/password must NOT have fewer than 6 characters"}
{"level":30,"time":1745396201721,"pid":2159,"hostname":"k2matu.local","reqId":"req-7","res":{"statusCode":400},"responseTime":0.3905825614929199,"msg":"request completed"}
{"level":30,"time":1745396201721,"pid":2159,"hostname":"k2matu.local","reqId":"req-8","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745396201800,"pid":2159,"hostname":"k2matu.local","reqId":"req-8","res":{"statusCode":201},"responseTime":78.52758312225342,"msg":"request completed"}
{"level":30,"time":1745396201800,"pid":2159,"hostname":"k2matu.local","reqId":"req-9","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745396201801,"pid":2159,"hostname":"k2matu.local","reqId":"req-9","res":{"statusCode":200},"responseTime":0.34520816802978516,"msg":"request completed"}
{"level":30,"time":1745396201802,"pid":2159,"hostname":"k2matu.local","reqId":"req-a","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745396201874,"pid":2159,"hostname":"k2matu.local","reqId":"req-a","res":{"statusCode":409},"responseTime":71.5283751487732,"msg":"request completed"}
{"level":30,"time":1745396201874,"pid":2159,"hostname":"k2matu.local","reqId":"req-b","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('newuser', 'testuse@email.com', '$2b$10$sUziI0n31Ayvnd02i8EgQ.Rbj'/*+28 bytes*/)
{"level":30,"time":1745396201945,"pid":2159,"hostname":"k2matu.local","reqId":"req-b","res":{"statusCode":409},"responseTime":70.97799968719482,"msg":"request completed"}
            # Subtest: POST `/register` returns 400 if duplicate email
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 9 - POST `/register` returns 400 if duplicate email # time=71.722ms
            
{"level":30,"time":1745396201946,"pid":2159,"hostname":"k2matu.local","reqId":"req-c","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('kim', 'kim@email.com', '$2b$10$t49NQoEbL7kpCY/yHpWE6eaus'/*+28 bytes*/)
SELECT id, username, email FROM users WHERE id = 2.0
{"level":30,"time":1745396202018,"pid":2159,"hostname":"k2matu.local","reqId":"req-c","res":{"statusCode":201},"responseTime":71.07404088973999,"msg":"request completed"}
            # Subtest: POST `/register` returns 201 if successfully created user
                ok 1 - Status code 201
                ok 2 - should be equal
                1..2
            ok 10 - POST `/register` returns 201 if successfully created user # time=71.702ms
            
            1..10
        ok 2 - POST `/register` # time=446.713ms
        
{"level":30,"time":1745396202179,"pid":2159,"hostname":"k2matu.local","reqId":"req-d","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/login`
            # Subtest: POST `/login` returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - POST `/login` returns 400 if username is missing # time=130.617ms
            
{"level":30,"time":1745396202180,"pid":2159,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1745396202181,"pid":2159,"hostname":"k2matu.local","reqId":"req-d","res":{"statusCode":400},"responseTime":1.6902499198913574,"msg":"request completed"}
{"level":30,"time":1745396202182,"pid":2159,"hostname":"k2matu.local","reqId":"req-e","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: POST `/login` returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - POST `/login` returns 400 if password is missing # time=0.801ms
            
{"level":30,"time":1745396202182,"pid":2159,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at done (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/Users/kale/Desktop/ft_transcendence/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1745396202182,"pid":2159,"hostname":"k2matu.local","reqId":"req-e","res":{"statusCode":400},"responseTime":0.3149580955505371,"msg":"request completed"}
{"level":30,"time":1745396202182,"pid":2159,"hostname":"k2matu.local","reqId":"req-f","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'nonexistentuser'
            # Subtest: POST `/login` returns 401 if user not found
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 3 - POST `/login` returns 401 if user not found # time=1.028ms
            
{"level":30,"time":1745396202183,"pid":2159,"hostname":"k2matu.local","reqId":"req-f","res":{"statusCode":401},"responseTime":0.48650026321411133,"msg":"request completed"}
{"level":30,"time":1745396202184,"pid":2159,"hostname":"k2matu.local","reqId":"req-g","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
{"level":30,"time":1745396202254,"pid":2159,"hostname":"k2matu.local","reqId":"req-g","res":{"statusCode":401},"responseTime":70.46129179000854,"msg":"request completed"}
            # Subtest: POST `/login` returns 401 if password is incorrect
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 4 - POST `/login` returns 401 if password is incorrect # time=71.022ms
            
{"level":30,"time":1745396202255,"pid":2159,"hostname":"k2matu.local","reqId":"req-h","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
UPDATE users
			SET online_status = TRUE
			WHERE id = 2.0 
			AND online_status = FALSE
			
{"level":30,"time":1745396202327,"pid":2159,"hostname":"k2matu.local","reqId":"req-h","res":{"statusCode":200},"responseTime":71.85441732406616,"msg":"request completed"}
            # Subtest: POST `/login` returns 200 if login is successful
                ok 1 - Status code 200
                ok 2 - Token is present
                ok 3 - should be equivalent
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
			SET online_status = FALSE 
			WHERE id = 2.0 
			AND online_status = TRUE
			
                # Subtest: POST `/logout`
                    # Subtest: POST `/logout` returns 200 if logout is successful
                        ok 1 - Status code 200
                        ok 2 - should be equal
                        1..2
                    ok 1 - POST `/logout` returns 200 if logout is successful # time=12.417ms
                    
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users 
			SET online_status = FALSE 
			WHERE id = 2.0 
			AND online_status = TRUE
			
                    # Subtest: POST `/logout` returns 400 if user already logged out
                        ok 1 - Status code 404
                        ok 2 - should be equal
                        1..2
                    ok 2 - POST `/logout` returns 400 if user already logged out # time=0.992ms
                    
                    1..2
                ok 4 - POST `/logout` # time=23.86ms
                
                1..4
            ok 5 - POST `/login` returns 200 if login is successful # time=97.462ms
            
            1..5
        ok 3 - POST `/login` # time=333.98ms
        
        1..3
    ok 1 - Auth Routes Suite # time=821.311ms
    
SELECT * FROM users
    # Subtest: User Routes Suite
        # Subtest: GET `/users` returns two users
            ok 1 - Status code 200
            ok 2 - Two user in the database
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 1 - GET `/users` returns two users # time=265.206ms
        
SELECT * FROM users WHERE id = '2'
        # Subtest: GET `/users/:id` returns second user
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 2 - GET `/users/:id` returns second user # time=0.991ms
        
SELECT * FROM users WHERE id = '3'
        # Subtest: GET `/users/:id` returns 404 user not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 3 - GET `/users/:id` returns 404 user not found # time=0.554ms
        
        # Subtest: PUT `/users/:id` updates user info
            1..0
        ok 4 - PUT `/users/:id` updates user info # time=0.109ms
        
        1..4
    ok 2 - User Routes Suite # time=357.05ms
    
    1..2
🧹 testPong.db wiped clean for next test
ok 1 - All Test # time=1268.761ms

{"level":30,"time":1745396202348,"pid":2159,"hostname":"k2matu.local","reqId":"req-i","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745396202350,"pid":2159,"hostname":"k2matu.local","reqId":"req-i","res":{"statusCode":200},"responseTime":1.966292381286621,"msg":"request completed"}
{"level":30,"time":1745396202351,"pid":2159,"hostname":"k2matu.local","reqId":"req-j","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745396202351,"pid":2159,"hostname":"k2matu.local","reqId":"req-j","res":{"statusCode":404},"responseTime":0.4223747253417969,"msg":"request completed"}
{"level":30,"time":1745396202706,"pid":2159,"hostname":"k2matu.local","reqId":"req-k","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745396202707,"pid":2159,"hostname":"k2matu.local","reqId":"req-k","res":{"statusCode":200},"responseTime":0.5064578056335449,"msg":"request completed"}
{"level":30,"time":1745396202708,"pid":2159,"hostname":"k2matu.local","reqId":"req-l","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745396202708,"pid":2159,"hostname":"k2matu.local","reqId":"req-l","res":{"statusCode":200},"responseTime":0.4353752136230469,"msg":"request completed"}
{"level":30,"time":1745396202709,"pid":2159,"hostname":"k2matu.local","reqId":"req-m","req":{"method":"GET","url":"/users/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1745396202709,"pid":2159,"hostname":"k2matu.local","reqId":"req-m","res":{"statusCode":404},"responseTime":0.1932077407836914,"msg":"request completed"}
1..1
