Using testPong.db

	CREATE TABLE IF NOT EXISTS users (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		username TEXT NOT NULL UNIQUE,
		email TEXT NOT NULL UNIQUE,
		password_hash TEXT,
		avatar_url TEXT DEFAULT NULL,
		online_status BOOLEAN DEFAULT FALSE,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	)

PRAGMA table_info(users)
PRAGMA foreign_keys = ON

	CREATE TABLE IF NOT EXISTS players (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		display_name TEXT NOT NULL UNIQUE,
		wins INTEGER DEFAULT 0,
		losses INTEGER DEFAULT 0,
		avatar_url TEXT DEFAULT NULL,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS friends (
		user_id INTEGER,
		friend_id INTEGER,
		status TEXT DEFAULT 'pending',
		PRIMARY KEY (user_id, friend_id),
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS tournaments (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		name TEXT NOT NULL,
		status TEXT DEFAULT 'pending',
		current_round INTEGER DEFAULT 0,
		winner_id INTEGER,
		created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id)
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)


	CREATE TABLE IF NOT EXISTS match_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_id INTEGER,
		type TEXT NOT NULL,
		tournament_id INTEGER DEFAULT NULL,
		round INTEGER,
		date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
		FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE
	)


	CREATE TABLE IF NOT EXISTS match_player_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		player_id INTEGER NOT NULL,
		score INTEGER DEFAULT 0 NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (player_id) REFERENCES players(id),
		UNIQUE (match_id, player_id)
	)


	CREATE TABLE IF NOT EXISTS match_winner_history (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		match_id INTEGER NOT NULL,
		winner_id INTEGER NOT NULL,
		FOREIGN KEY (match_id) REFERENCES match_history(id) ON DELETE CASCADE,
		FOREIGN KEY (winner_id) REFERENCES players(id)
	)

TAP version 14
# Subtest: All Test
{"level":30,"time":1746809042018,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users
    # Subtest: Auth Routes Suite
        # Subtest: GET `/users` returns empty array
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/users` returns empty array # time=21.046ms
        
        # Subtest: POST `/register`
            # Subtest: returns 400 if email is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if email is missing # time=9.641ms
            
{"level":30,"time":1746809042023,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1","res":{"statusCode":200},"responseTime":4.365225315093994,"msg":"request completed"}
{"level":30,"time":1746809042033,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042036,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'email'","stack":"Error: body must have required property 'email'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"email"},"message":"must have required property 'email'"}],"validationContext":"body"},"msg":"body must have required property 'email'"}
{"level":30,"time":1746809042038,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2","res":{"statusCode":400},"responseTime":4.235713005065918,"msg":"request completed"}
{"level":30,"time":1746809042039,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if invalid email
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if invalid email # time=2.372ms
            
{"level":30,"time":1746809042040,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3","res":{"statusCode":400},"err":{"type":"Error","message":"body/email must match format \"email\"","stack":"Error: body/email must match format \"email\"\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/email","schemaPath":"#/properties/email/format","keyword":"format","params":{"format":"email"},"message":"must match format \"email\""}],"validationContext":"body"},"msg":"body/email must match format \"email\""}
{"level":30,"time":1746809042040,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3","res":{"statusCode":400},"responseTime":1.265578269958496,"msg":"request completed"}
{"level":30,"time":1746809042042,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-4","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username < 3 chars
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - returns 400 if username < 3 chars # time=1.639ms
            
{"level":30,"time":1746809042042,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-4","res":{"statusCode":400},"err":{"type":"Error","message":"body/username must NOT have fewer than 3 characters","stack":"Error: body/username must NOT have fewer than 3 characters\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/username","schemaPath":"#/properties/username/minLength","keyword":"minLength","params":{"limit":3},"message":"must NOT have fewer than 3 characters"}],"validationContext":"body"},"msg":"body/username must NOT have fewer than 3 characters"}
{"level":30,"time":1746809042042,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-4","res":{"statusCode":400},"responseTime":0.5700249671936035,"msg":"request completed"}
{"level":30,"time":1746809042044,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-5","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - returns 400 if username is missing # time=1.536ms
            
{"level":30,"time":1746809042044,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-5","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1746809042044,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-5","res":{"statusCode":400},"responseTime":0.5073270797729492,"msg":"request completed"}
{"level":30,"time":1746809042046,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-6","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 5 - returns 400 if password is missing # time=1.453ms
            
{"level":30,"time":1746809042046,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-6","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1746809042046,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-6","res":{"statusCode":400},"responseTime":0.4576277732849121,"msg":"request completed"}
{"level":30,"time":1746809042048,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-7","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if invalid password
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 6 - returns 400 if invalid password # time=1.753ms
            
{"level":30,"time":1746809042048,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-7","res":{"statusCode":400},"err":{"type":"Error","message":"body/password must NOT have fewer than 6 characters","stack":"Error: body/password must NOT have fewer than 6 characters\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/password","schemaPath":"#/properties/password/minLength","keyword":"minLength","params":{"limit":6},"message":"must NOT have fewer than 6 characters"}],"validationContext":"body"},"msg":"body/password must NOT have fewer than 6 characters"}
{"level":30,"time":1746809042048,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-7","res":{"statusCode":400},"responseTime":0.6635828018188477,"msg":"request completed"}
{"level":30,"time":1746809042050,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-8","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'testuse@email.com', '$2b$10$tC1VTtnEX548gc9AHabCoeA4S'/*+28 bytes*/)
SELECT id, username, email, online_status, two_fa_enabled, created_at FROM users WHERE id = 1.0
{"level":30,"time":1746809042195,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-8","res":{"statusCode":201},"responseTime":145.43627452850342,"msg":"request completed"}
            # Subtest: returns 201 if successfully created user
                ok 1 - Status code 201
                ok 2 - should be equal
SELECT * FROM users
                ok 3 - Status code 200
                ok 4 - One user in the database
                ok 5 - should be equivalent
                1..5
            ok 7 - returns 201 if successfully created user # time=149.128ms
            
{"level":30,"time":1746809042196,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-9","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042197,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-9","res":{"statusCode":200},"responseTime":0.7139549255371094,"msg":"request completed"}
{"level":30,"time":1746809042199,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-a","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('testuser', 'new@email.com', '$2b$10$fNvg1IoRWSElXMf2Pa0R9eHTb'/*+28 bytes*/)
{"level":30,"time":1746809042308,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-a","res":{"statusCode":409},"responseTime":108.19755220413208,"msg":"request completed"}
            # Subtest: returns 400 if duplicate name
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 8 - returns 400 if duplicate name # time=109.471ms
            
{"level":30,"time":1746809042309,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-b","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('newuser', 'testuse@email.com', '$2b$10$NoS82UAFXdpGZVJtS0n2/eUG9'/*+28 bytes*/)
{"level":30,"time":1746809042417,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-b","res":{"statusCode":409},"responseTime":107.95914125442505,"msg":"request completed"}
            # Subtest: returns 400 if duplicate email
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 9 - returns 400 if duplicate email # time=109.228ms
            
{"level":30,"time":1746809042419,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-c","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('kim', 'kim@email.com', '$2b$10$fecFql.0eKJ2De32hPjQjOI3J'/*+28 bytes*/)
SELECT id, username, email, online_status, two_fa_enabled, created_at FROM users WHERE id = 2.0
{"level":30,"time":1746809042532,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-c","res":{"statusCode":201},"responseTime":112.8622817993164,"msg":"request completed"}
            # Subtest: returns 201 if successfully created another user
                ok 1 - Status code 201
                ok 2 - should be equal
                1..2
            ok 10 - returns 201 if successfully created another user # time=114.058ms
            
            1..10
        ok 2 - POST `/register` # time=505.264ms
        
{"level":30,"time":1746809042539,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-d","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/login`
            # Subtest: returns 400 if username is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - returns 400 if username is missing # time=5.148ms
            
{"level":30,"time":1746809042539,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-d","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'username'","stack":"Error: body must have required property 'username'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"username"},"message":"must have required property 'username'"}],"validationContext":"body"},"msg":"body must have required property 'username'"}
{"level":30,"time":1746809042539,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-d","res":{"statusCode":400},"responseTime":0.7543330192565918,"msg":"request completed"}
{"level":30,"time":1746809042541,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-e","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
            # Subtest: returns 400 if password is missing
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - returns 400 if password is missing # time=1.836ms
            
{"level":30,"time":1746809042541,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-e","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'password'","stack":"Error: body must have required property 'password'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"password"},"message":"must have required property 'password'"}],"validationContext":"body"},"msg":"body must have required property 'password'"}
{"level":30,"time":1746809042542,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-e","res":{"statusCode":400},"responseTime":0.6442351341247559,"msg":"request completed"}
{"level":30,"time":1746809042543,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-f","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'nonexistentuser'
            # Subtest: returns 401 if user not found
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 3 - returns 401 if user not found # time=2.089ms
            
{"level":30,"time":1746809042544,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-f","res":{"statusCode":401},"responseTime":0.9665513038635254,"msg":"request completed"}
{"level":30,"time":1746809042546,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-g","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
{"level":30,"time":1746809042654,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-g","res":{"statusCode":401},"responseTime":107.95142078399658,"msg":"request completed"}
            # Subtest: returns 401 if password is incorrect
                ok 1 - Status code 401
                ok 2 - should be equal
                1..2
            ok 4 - returns 401 if password is incorrect # time=109.221ms
            
{"level":30,"time":1746809042655,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-h","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
SELECT two_fa_enabled FROM users WHERE id = 2.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0
            AND online_status = FALSE
        
{"level":30,"time":1746809042769,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-h","res":{"statusCode":200},"responseTime":113.58814716339111,"msg":"request completed"}
            # Subtest: returns 200 if login is successful
                ok 1 - Status code 200
                ok 2 - Token is present
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = 2.0
                ok 4 - Status code 200
                ok 5 - should be equivalent
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users
            SET online_status = FALSE
            WHERE id = 2.0
            AND online_status = TRUE
        
                # Subtest: POST `/logout`
                    # Subtest: returns 200 if logout is successful
                        ok 1 - Status code 200
                        ok 2 - should be equal
SELECT * FROM users WHERE id = 2.0
                        ok 3 - Status code 200
                        ok 4 - should be equivalent
                        1..4
                    ok 1 - returns 200 if logout is successful # time=12.036ms
                    
SELECT COUNT(*) AS count FROM users WHERE id = 2.0
UPDATE users
            SET online_status = FALSE
            WHERE id = 2.0
            AND online_status = TRUE
        
                    # Subtest: returns 400 if user already logged out
                        ok 1 - Status code 404
                        ok 2 - should be equal
                        1..2
                    ok 2 - returns 400 if user already logged out # time=2.09ms
                    
                    1..2
                ok 6 - POST `/logout` # time=15.819ms
                
                1..6
            ok 5 - returns 200 if login is successful # time=133.509ms
            
            1..5
        ok 3 - POST `/login` # time=255.21ms
        
        1..3
    ok 1 - Auth Routes Suite # time=784.388ms
    
SELECT * FROM users
    # Subtest: User Routes Suite
        # Subtest: GET `/users` returns two users
            ok 1 - Status code 200
            ok 2 - Two user in the database
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 1 - GET `/users` returns two users # time=7.977ms
        
SELECT * FROM users WHERE id = 2.0
        # Subtest: GET `/users/:id` returns second user
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 2 - GET `/users/:id` returns second user # time=1.548ms
        
SELECT * FROM users WHERE id = 3.0
        # Subtest: GET `/users/:id` returns 404 user not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 3 - GET `/users/:id` returns 404 user not found # time=1.447ms
        
{"level":30,"time":1746809042770,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-i","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042771,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-i","res":{"statusCode":200},"responseTime":0.8904967308044434,"msg":"request completed"}
{"level":30,"time":1746809042774,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-j","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042782,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-j","res":{"statusCode":200},"responseTime":8.179502010345459,"msg":"request completed"}
{"level":30,"time":1746809042783,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-k","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042784,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-k","res":{"statusCode":200},"responseTime":0.5394439697265625,"msg":"request completed"}
{"level":30,"time":1746809042786,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-l","req":{"method":"POST","url":"/logout","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042787,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-l","res":{"statusCode":404},"responseTime":0.8067970275878906,"msg":"request completed"}
{"level":30,"time":1746809042798,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-m","req":{"method":"GET","url":"/users","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042798,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-m","res":{"statusCode":200},"responseTime":0.5570015907287598,"msg":"request completed"}
{"level":30,"time":1746809042800,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-n","req":{"method":"GET","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042801,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-n","res":{"statusCode":200},"responseTime":0.47684192657470703,"msg":"request completed"}
{"level":30,"time":1746809042802,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-o","req":{"method":"GET","url":"/users/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042803,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-o","res":{"statusCode":404},"responseTime":0.5071301460266113,"msg":"request completed"}
{"level":30,"time":1746809042804,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-p","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'testuser'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746809042919,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-p","res":{"statusCode":200},"responseTime":115.42807292938232,"msg":"request completed"}
{"level":30,"time":1746809042921,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-q","req":{"method":"PUT","url":"/users/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: PUT `/users/:id`
            # Subtest: PUT `/users/2` returns 403 if unauthoritized
                ok 1 - Status code 403
                ok 2 - should be equal
                1..2
            ok 1 - PUT `/users/2` returns 403 if unauthoritized # time=3.443ms
            
{"level":30,"time":1746809042923,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-q","res":{"statusCode":403},"responseTime":1.2167973518371582,"msg":"request completed"}
{"level":30,"time":1746809042924,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-r","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'kim'
            # Subtest: PUT `/users/1` returns 400 if username already taken
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - PUT `/users/1` returns 400 if username already taken # time=2.037ms
            
{"level":30,"time":1746809042925,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-r","res":{"statusCode":400},"responseTime":0.9908475875854492,"msg":"request completed"}
{"level":30,"time":1746809042927,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-s","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'kim@email.com'
            # Subtest: PUT `/users/1` returns 400 if email already in use
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 3 - PUT `/users/1` returns 400 if email already in use # time=2.012ms
            
{"level":30,"time":1746809042928,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-s","res":{"statusCode":400},"responseTime":0.9610700607299805,"msg":"request completed"}
{"level":30,"time":1746809042929,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-t","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE email = 'new@email.com'

            UPDATE users
            SET username = 'testuser', password_hash = '$2b$10$tC1VTtnEX548gc9AHabCoeA4S'/*+28 bytes*/, email = 'new@email.com', avatar_url = NULL
            WHERE id = 1.0
        

            SELECT
                id,
                username,
                email,
                avatar_url,
                online_status,
                created_at,
                two_fa_enabled
            FROM users
            WHERE id = 1.0
        
            # Subtest: PUT `/users/1` returns 200 if email updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 4 - PUT `/users/1` returns 200 if email updated # time=7.639ms
            
{"level":30,"time":1746809042935,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-t","res":{"statusCode":200},"responseTime":6.2439727783203125,"msg":"request completed"}
{"level":30,"time":1746809042937,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-u","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0
SELECT * FROM users WHERE username = 'lumi'

            UPDATE users
            SET username = 'lumi', password_hash = '$2b$10$tC1VTtnEX548gc9AHabCoeA4S'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
            WHERE id = 1.0
        

            SELECT
                id,
                username,
                email,
                avatar_url,
                online_status,
                created_at,
                two_fa_enabled
            FROM users
            WHERE id = 1.0
        
            # Subtest: PUT `/users/1` returns 200 if username and avatar_url updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
SELECT * FROM users WHERE id = 1.0
                ok 4 - Status code 200
                ok 5 - should be equivalent
                1..5
            ok 5 - PUT `/users/1` returns 200 if username and avatar_url updated # time=7.929ms
            
{"level":30,"time":1746809042942,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-u","res":{"statusCode":200},"responseTime":5.1613945960998535,"msg":"request completed"}
{"level":30,"time":1746809042943,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-v","req":{"method":"GET","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809042944,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-v","res":{"statusCode":200},"responseTime":0.4922490119934082,"msg":"request completed"}
{"level":30,"time":1746809042945,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-w","req":{"method":"PUT","url":"/users/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE id = 1.0

            UPDATE users
            SET username = 'lumi', password_hash = '$2b$10$f8A/LymY9a9KTT2r3YVSM.Pi1'/*+28 bytes*/, email = 'new@email.com', avatar_url = 'newlink.com'
            WHERE id = 1.0
        

            SELECT
                id,
                username,
                email,
                avatar_url,
                online_status,
                created_at,
                two_fa_enabled
            FROM users
            WHERE id = 1.0
        
{"level":30,"time":1746809043059,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-w","res":{"statusCode":200},"responseTime":113.6990270614624,"msg":"request completed"}
            # Subtest: PUT `/users/1` returns 200 if password updated
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
{"level":30,"time":1746809043060,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-x","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
{"level":30,"time":1746809043169,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-x","res":{"statusCode":401},"responseTime":108.77857685089111,"msg":"request completed"}
                ok 4 - Status code 401
                ok 5 - should be equal
{"level":30,"time":1746809043170,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-y","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746809043280,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-y","res":{"statusCode":200},"responseTime":109.80163145065308,"msg":"request completed"}
                ok 6 - Token is present
                ok 7 - Status code 200
                ok 8 - should be equivalent
                1..8
            ok 6 - PUT `/users/1` returns 200 if password updated # time=335.569ms
            
            1..6
        ok 4 - PUT `/users/:id` # time=477.284ms
        
        1..4
    ok 2 - User Routes Suite # time=491.853ms
    
{"level":30,"time":1746809043282,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-z","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746809043396,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-z","res":{"statusCode":200},"responseTime":113.76251220703125,"msg":"request completed"}

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
    # Subtest: POST `/login`
        # Subtest: GET `/friends` returns 404 when no friends found for user
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 1 - GET `/friends` returns 404 when no friends found for user # time=4.238ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
        # Subtest: PATCH `/friends-requests/2` returns 404 when friend request not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 2 - PATCH `/friends-requests/2` returns 404 when friend request not found # time=1.991ms
        
        # Subtest: POST `/friend-requests/:id`
            # Subtest: POST `/friend-requests/1` returns 400 when request to itself
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 1 - POST `/friend-requests/1` returns 400 when request to itself # time=2.625ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 0.0 AND friend_id = 1.0
            OR friend_id = 0.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 0.0)
        
SqliteError: FOREIGN KEY constraint failed
    at Object.sendFriendRequest [90m(file:///home/vvaalant/Documents/ring7/new2/backend/[39mcontrollers/friendController.js:80:12[90m)[39m
    at preHandlerCallbackInner [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at Object.handleRequest [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:44:9[90m)[39m
    at runPreParsing [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/route.js:571:19[90m)[39m
    at next [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:236:9[90m)[39m
    at handleResolve [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/hooks.js:253:7[90m)[39m {
  code: [32m'SQLITE_CONSTRAINT_FOREIGNKEY'[39m
}
            # Subtest: POST `/friend-requests/0` returns 500 when invalid id
                ok 1 - Status code 500
                ok 2 - should be equal
                1..2
            ok 2 - POST `/friend-requests/0` returns 500 when invalid id # time=2.697ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
            # Subtest: POST `/friend-requests/2` returns 200 when successfully sent
                ok 1 - Status code 200
                ok 2 - should be equal
                ok 3 - should be equivalent
                1..3
            ok 3 - POST `/friend-requests/2` returns 200 when successfully sent # time=9.263ms
            

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        

            INSERT INTO friends (user_id, friend_id)
            VALUES (1.0, 2.0)
        
            # Subtest: POST `/friend-requests/2` returns 409 when friend request already exists
                ok 1 - Status code 409
                ok 2 - should be equal
                1..2
            ok 4 - POST `/friend-requests/2` returns 409 when friend request already exists # time=1.816ms
            
            1..4
        ok 3 - POST `/friend-requests/:id` # time=18.505ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 6.0) OR (user_id = 6.0 AND friend_id = 1.0)
        
        # Subtest: GET `/friends/:id/status`
            # Subtest: GET `/friends/:id/status` returns 404 when friend not found
                ok 1 - Status code 404
                ok 2 - should be equal
                1..2
            ok 1 - GET `/friends/:id/status` returns 404 when friend not found # time=3.282ms
            

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
            # Subtest: GET `/friends/:id/status` returns 400 when friend request pending
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 2 - GET `/friends/:id/status` returns 400 when friend request pending # time=1.773ms
            
            1..2
        ok 4 - GET `/friends/:id/status` # time=6.935ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friends-requests/2` returns 400 waiting for friend to accept request
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 5 - PATCH `/friends-requests/2` returns 400 waiting for friend to accept request # time=1.635ms
        
{"level":30,"time":1746809043399,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-10","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043400,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-10","res":{"statusCode":404},"responseTime":0.9543290138244629,"msg":"request completed"}
{"level":30,"time":1746809043402,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-11","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043403,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-11","res":{"statusCode":404},"responseTime":0.9838624000549316,"msg":"request completed"}
{"level":30,"time":1746809043405,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-12","req":{"method":"POST","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043406,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-12","res":{"statusCode":400},"responseTime":0.539548397064209,"msg":"request completed"}
{"level":30,"time":1746809043407,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-13","req":{"method":"POST","url":"/friend-requests/0","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043409,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-13","res":{"statusCode":500},"responseTime":1.4981341361999512,"msg":"request completed"}
{"level":30,"time":1746809043411,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-14","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043418,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-14","res":{"statusCode":200},"responseTime":7.679137229919434,"msg":"request completed"}
{"level":30,"time":1746809043420,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-15","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043421,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-15","res":{"statusCode":409},"responseTime":0.7775540351867676,"msg":"request completed"}
{"level":30,"time":1746809043425,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-16","req":{"method":"GET","url":"/friends/6/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043426,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-16","res":{"statusCode":404},"responseTime":1.0073766708374023,"msg":"request completed"}
{"level":30,"time":1746809043427,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-17","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043428,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-17","res":{"statusCode":400},"responseTime":0.6157999038696289,"msg":"request completed"}
{"level":30,"time":1746809043430,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-18","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043431,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-18","res":{"statusCode":400},"responseTime":0.6509017944335938,"msg":"request completed"}
{"level":30,"time":1746809043432,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-19","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
SELECT two_fa_enabled FROM users WHERE id = 2.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0
            AND online_status = FALSE
        
{"level":30,"time":1746809043549,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-19","res":{"statusCode":200},"responseTime":116.88755178451538,"msg":"request completed"}
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0

            UPDATE friends 
            SET status = 'accepted' 
            WHERE user_id = 1.0 AND friend_id = 2.0
        

            SELECT * FROM friends 
            WHERE user_id = 1.0 AND friend_id = 2.0
        
        # Subtest: PATCH `/friends-requests/2` returns 200 accept friend request
            ok 1 - Status code 200
            ok 2 - should be equal
            ok 3 - should be equivalent
SELECT * FROM friends WHERE user_id = 2.0 AND friend_id = 1.0
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
            # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
                ok 1 - Status code 400
                ok 2 - should be equal
                1..2
            ok 4 - PATCH `/friend-requests/2` returns 400 when already friends # time=1.778ms
            
            1..4
        ok 6 - PATCH `/friends-requests/2` returns 200 accept friend request # time=125.988ms
        
SELECT * FROM friends WHERE user_id = 1.0 AND friend_id = 2.0
        # Subtest: PATCH `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 7 - PATCH `/friend-requests/2` returns 400 when already friends # time=1.686ms
        

            SELECT status 
            FROM friends 
            WHERE user_id = 2.0 AND friend_id = 1.0
            OR friend_id = 2.0 AND user_id = 1.0
        
        # Subtest: POST `/friend-requests/2` returns 400 when already friends
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 8 - POST `/friend-requests/2` returns 400 when already friends # time=1.442ms
        

            SELECT status 
            FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        

            SELECT username, online_status FROM users 
            WHERE id = 2.0
        
        # Subtest: GET `/friends/:id/status` returns 200 when already friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 9 - GET `/friends/:id/status` returns 200 when already friends # time=1.784ms
        

            SELECT * 
            FROM friends 
            WHERE user_id = 1.0 OR friend_id = 1.0
        
        # Subtest: GET `/friends` returns 200 returning all friends
            ok 1 - Status code 200
            ok 2 - should be equivalent
            1..2
        ok 10 - GET `/friends` returns 200 returning all friends # time=1.901ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 4.0) OR (user_id = 4.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 404 when unauthorized action
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 11 - DELETE `/friends/:id` returns 404 when unauthorized action # time=1.798ms
        

            DELETE FROM friends 
            WHERE (user_id = 1.0 AND friend_id = 2.0) OR (user_id = 2.0 AND friend_id = 1.0)
        
        # Subtest: DELETE `/friends/:id` returns 200 when friend removed
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 12 - DELETE `/friends/:id` returns 200 when friend removed # time=5.587ms
        
        1..12
    ok 3 - POST `/login` # time=292.501ms
    
{"level":30,"time":1746809043549,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1a","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043554,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1a","res":{"statusCode":200},"responseTime":5.076610088348389,"msg":"request completed"}
{"level":30,"time":1746809043556,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1b","req":{"method":"PATCH","url":"/friend-requests/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043556,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1b","res":{"statusCode":400},"responseTime":0.6878232955932617,"msg":"request completed"}
{"level":30,"time":1746809043558,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1c","req":{"method":"PATCH","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043559,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1c","res":{"statusCode":400},"responseTime":0.6337480545043945,"msg":"request completed"}
{"level":30,"time":1746809043560,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1d","req":{"method":"POST","url":"/friend-requests/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043561,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1d","res":{"statusCode":400},"responseTime":0.5637493133544922,"msg":"request completed"}
{"level":30,"time":1746809043562,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1e","req":{"method":"GET","url":"/friends/2/status","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043563,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1e","res":{"statusCode":200},"responseTime":0.8081183433532715,"msg":"request completed"}
{"level":30,"time":1746809043564,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1f","req":{"method":"GET","url":"/friends","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043565,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1f","res":{"statusCode":200},"responseTime":0.8105869293212891,"msg":"request completed"}
{"level":30,"time":1746809043566,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1g","req":{"method":"DELETE","url":"/friends/4","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043567,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1g","res":{"statusCode":404},"responseTime":0.8383369445800781,"msg":"request completed"}
{"level":30,"time":1746809043568,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1h","req":{"method":"DELETE","url":"/friends/2","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043573,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1h","res":{"statusCode":200},"responseTime":4.602406978607178,"msg":"request completed"}
{"level":30,"time":1746809043575,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1i","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
SELECT two_fa_enabled FROM users WHERE id = 2.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0
            AND online_status = FALSE
        
{"level":30,"time":1746809043685,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1i","res":{"statusCode":200},"responseTime":109.83295822143555,"msg":"request completed"}
{"level":30,"time":1746809043685,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1j","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746809043794,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1j","res":{"statusCode":200},"responseTime":108.94947814941406,"msg":"request completed"}
SELECT * FROM players WHERE user_id = 2.0
    # Subtest: POST `/login`
        # Subtest: GET `/players` returns 404 when no players found for user
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 1 - GET `/players` returns 404 when no players found for user # time=4.364ms
        
{"level":30,"time":1746809043797,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1k","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043798,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1k","res":{"statusCode":404},"responseTime":0.7521247863769531,"msg":"request completed"}
{"level":30,"time":1746809043800,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1l","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 1.0
        # Subtest: POST `/players` returns 201 on successful creation
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 2 - POST `/players` returns 201 on successful creation # time=7.711ms
        
{"level":30,"time":1746809043806,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1l","res":{"statusCode":201},"responseTime":6.308943748474121,"msg":"request completed"}
{"level":30,"time":1746809043808,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1m","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
        # Subtest: POST `/players` returns 409 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 3 - POST `/players` returns 409 for duplicate display_name # time=1.97ms
        
{"level":30,"time":1746809043809,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1m","res":{"statusCode":409},"responseTime":0.9896092414855957,"msg":"request completed"}
{"level":30,"time":1746809043810,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1n","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player2', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 2.0
{"level":30,"time":1746809043815,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1n","res":{"statusCode":201},"responseTime":5.0806989669799805,"msg":"request completed"}
{"level":30,"time":1746809043815,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1o","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player3', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 3.0
{"level":30,"time":1746809043820,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1o","res":{"statusCode":201},"responseTime":5.029994964599609,"msg":"request completed"}
{"level":30,"time":1746809043820,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1p","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player4', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 4.0
{"level":30,"time":1746809043826,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1p","res":{"statusCode":201},"responseTime":5.500115871429443,"msg":"request completed"}
{"level":30,"time":1746809043826,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1q","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player5', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 5.0
{"level":30,"time":1746809043832,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1q","res":{"statusCode":201},"responseTime":5.504244804382324,"msg":"request completed"}
{"level":30,"time":1746809043832,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1r","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player6', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 6.0
{"level":30,"time":1746809043838,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1r","res":{"statusCode":201},"responseTime":5.585970878601074,"msg":"request completed"}
{"level":30,"time":1746809043838,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1s","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player7', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 7.0
{"level":30,"time":1746809043843,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1s","res":{"statusCode":201},"responseTime":5.45310640335083,"msg":"request completed"}
{"level":30,"time":1746809043844,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1t","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player8', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 8.0
{"level":30,"time":1746809043849,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1t","res":{"statusCode":201},"responseTime":5.438669681549072,"msg":"request completed"}
{"level":30,"time":1746809043849,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1u","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
        # Subtest: POST `/players` returns 400 when max players limit is reached
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 4 - POST `/players` returns 400 when max players limit is reached # time=41.343ms
        
SELECT * FROM players WHERE id = 8.0 AND user_id = 1.0
        # Subtest: GET `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 5 - GET `/players/:id` returns 404 when unauthorized # time=1.799ms
        
SELECT * FROM players WHERE id = 100.0 AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 6 - GET `/players/:id` returns 404 when player does not exist # time=1.451ms
        
SELECT * FROM players WHERE id = 8.0 AND user_id = 2.0
        # Subtest: GET `/players/:id` returns 200 with valid data
            ok 1 - should be equal
            ok 2 - should be equivalent
            1..2
        ok 7 - GET `/players/:id` returns 200 with valid data # time=1.63ms
        
DELETE FROM players WHERE id = 3.0 AND user_id = 1.0
        # Subtest: DELETE `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 8 - DELETE `/players/:id` returns 404 when unauthorized # time=1.824ms
        
DELETE FROM players WHERE id = 100.0 AND user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 404 when player does not exist
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 9 - DELETE `/players/:id` returns 404 when player does not exist # time=1.314ms
        
DELETE FROM players WHERE id = 3.0 AND user_id = 2.0
        # Subtest: DELETE `/players/:id` returns 200 on success
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 10 - DELETE `/players/:id` returns 200 on success # time=5.172ms
        
SELECT * FROM players WHERE user_id = 2.0
        # Subtest: GET `/players` returns remaining players
            ok 1 - should be equal
            ok 2 - should be equivalent
            ok 3 - should be equivalent
            ok 4 - should be equivalent
            1..4
        ok 11 - GET `/players` returns remaining players # time=2.385ms
        
{"level":30,"time":1746809043850,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1u","res":{"statusCode":400},"responseTime":0.7226943969726562,"msg":"request completed"}
{"level":30,"time":1746809043852,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1v","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043852,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1v","res":{"statusCode":404},"responseTime":0.7932710647583008,"msg":"request completed"}
{"level":30,"time":1746809043854,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1w","req":{"method":"GET","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043854,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1w","res":{"statusCode":404},"responseTime":0.5536379814147949,"msg":"request completed"}
{"level":30,"time":1746809043855,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1x","req":{"method":"GET","url":"/players/8","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043856,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1x","res":{"statusCode":200},"responseTime":0.6416559219360352,"msg":"request completed"}
{"level":30,"time":1746809043858,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1y","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043858,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1y","res":{"statusCode":404},"responseTime":0.8394551277160645,"msg":"request completed"}
{"level":30,"time":1746809043860,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1z","req":{"method":"DELETE","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043860,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-1z","res":{"statusCode":404},"responseTime":0.49342870712280273,"msg":"request completed"}
{"level":30,"time":1746809043861,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-20","req":{"method":"DELETE","url":"/players/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043865,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-20","res":{"statusCode":200},"responseTime":4.208935737609863,"msg":"request completed"}
{"level":30,"time":1746809043867,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-21","req":{"method":"GET","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809043868,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-21","res":{"statusCode":200},"responseTime":0.8551020622253418,"msg":"request completed"}
{"level":30,"time":1746809043869,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-22","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM players WHERE id = 1.0 AND user_id = 1.0
        # Subtest: PUT `/players/:id` returns 404 when unauthorized
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 12 - PUT `/players/:id` returns 404 when unauthorized # time=2.201ms
        
{"level":30,"time":1746809043871,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-22","res":{"statusCode":404},"responseTime":1.2482118606567383,"msg":"request completed"}
{"level":30,"time":1746809043872,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-23","req":{"method":"PUT","url":"/players/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM players WHERE id = 100.0 AND user_id = 2.0
        # Subtest: PUT `/players/:id` returns 404 for invalid id
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 13 - PUT `/players/:id` returns 404 for invalid id # time=1.707ms
        
{"level":30,"time":1746809043873,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-23","res":{"statusCode":404},"responseTime":0.8270998001098633,"msg":"request completed"}
{"level":30,"time":1746809043874,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-24","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM players WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM players WHERE display_name = 'Player7'
        # Subtest: PUT `/players/:id` returns 400 for duplicate display_name
            ok 1 - should be equal
            ok 2 - should be equal
            1..2
        ok 14 - PUT `/players/:id` returns 400 for duplicate display_name # time=2.083ms
        
{"level":30,"time":1746809043875,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-24","res":{"statusCode":400},"responseTime":1.106623649597168,"msg":"request completed"}
{"level":30,"time":1746809043876,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-25","req":{"method":"PUT","url":"/players/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM players WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM players WHERE display_name = 'updatedPlayer'
UPDATE players SET display_name = 'updatedPlayer', avatar_url = 'notnull.com' WHERE id = 1.0
        # Subtest: PUT `/players/:id` returns 200 when update is successful
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
            1..3
        ok 15 - PUT `/players/:id` returns 200 when update is successful # time=6.512ms
        
        1..15
    ok 4 - POST `/login` # time=308.62ms
    
{"level":30,"time":1746809043882,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-25","res":{"statusCode":200},"responseTime":5.2261128425598145,"msg":"request completed"}
{"level":30,"time":1746809043884,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-26","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
SELECT two_fa_enabled FROM users WHERE id = 2.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0
            AND online_status = FALSE
        
{"level":30,"time":1746809043993,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-26","res":{"statusCode":200},"responseTime":109.0050721168518,"msg":"request completed"}
{"level":30,"time":1746809043993,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-27","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746809044102,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-27","res":{"statusCode":200},"responseTime":108.5070219039917,"msg":"request completed"}

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
        
    # Subtest: POST `/login` - Login as kim
        # Subtest: GET `/match-histories` returns 200 with empty array when no matches found for user
            ok 1 - Status code should be 200
            ok 2 - should be equivalent
            1..2
        ok 1 - GET `/match-histories` returns 200 with empty array when no matches found for user # time=4.34ms
        
{"level":30,"time":1746809044105,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-28","req":{"method":"GET","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044106,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-28","res":{"statusCode":200},"responseTime":0.7847270965576172,"msg":"request completed"}
{"level":30,"time":1746809044107,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-29","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/match-histories` returns 400 when missing one player
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 2 - POST `/match-histories` returns 400 when missing one player # time=2.18ms
        
{"level":30,"time":1746809044108,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-29","res":{"statusCode":400},"responseTime":1.2230629920959473,"msg":"request completed"}
{"level":30,"time":1746809044109,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2a","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 100.0)
    
ROLLBACK
        # Subtest: POST `/match-histories` returns 500 when player does not exist
            ok 1 - Status code should be 500
            ok 2 - should be equal
            1..2
        ok 3 - POST `/match-histories` returns 500 when player does not exist # time=3.147ms
        
{"level":30,"time":1746809044112,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2a","res":{"statusCode":500},"responseTime":2.2325549125671387,"msg":"request completed"}
{"level":30,"time":1746809044113,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2b","req":{"method":"POST","url":"/match-histories","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('1v1', NULL, NULL, 2.0)

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 1.0)
    

        INSERT INTO match_player_history
        (match_id, player_id)
        VALUES (1.0, 2.0)
    
COMMIT
        # Subtest: POST `/match-histories` returns 201 when match is successfully created
            ok 1 - Status code should be 201
            ok 2 - should be equal
            1..2
        ok 4 - POST `/match-histories` returns 201 when match is successfully created # time=11.196ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = 200.0
        
        # Subtest: GET `/match-histories/200` returns 404 when match is not found
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 5 - GET `/match-histories/200` returns 404 when match is not found # time=1.875ms
        

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = 1.0
        
        # Subtest: GET `/match-histories/1` returns 200 for an existing match
            ok 1 - Status code should be 200
            ok 2 - should be equivalent
            1..2
        ok 6 - GET `/match-histories/1` returns 200 for an existing match # time=2.22ms
        
{"level":30,"time":1746809044123,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2b","res":{"statusCode":201},"responseTime":10.147656917572021,"msg":"request completed"}
{"level":30,"time":1746809044125,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2c","req":{"method":"GET","url":"/match-histories/200","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044125,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2c","res":{"statusCode":404},"responseTime":0.8147711753845215,"msg":"request completed"}
{"level":30,"time":1746809044127,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2d","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044128,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2d","res":{"statusCode":200},"responseTime":0.8707609176635742,"msg":"request completed"}
{"level":30,"time":1746809044129,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2e","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 1.0
        # Subtest: PUT /match-histories/:id returns 403 when unauthorized to update
            ok 1 - Status code should be 403
            ok 2 - should be equal
            1..2
        ok 7 - PUT /match-histories/:id returns 403 when unauthorized to update # time=3.004ms
        
{"level":30,"time":1746809044131,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2e","res":{"statusCode":403},"responseTime":1.9725980758666992,"msg":"request completed"}
{"level":30,"time":1746809044133,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2f","req":{"method":"PUT","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 100.0 AND user_id = 2.0
        # Subtest: PUT /match-histories/:id returns 403 when match not found
            ok 1 - Status code should be 403
            ok 2 - should be equal
            1..2
        ok 8 - PUT /match-histories/:id returns 403 when match not found # time=1.78ms
        
{"level":30,"time":1746809044133,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2f","res":{"statusCode":403},"responseTime":0.8637790679931641,"msg":"request completed"}
{"level":30,"time":1746809044135,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2g","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: PUT /match-histories/:id returns 400 when score is missing
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 9 - PUT /match-histories/:id returns 400 when score is missing # time=1.685ms
        
{"level":30,"time":1746809044135,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2g","res":{"statusCode":400},"err":{"type":"Error","message":"body/players/1 must have required property 'score'","stack":"Error: body/players/1 must have required property 'score'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/players/1","schemaPath":"#/properties/players/items/required","keyword":"required","params":{"missingProperty":"score"},"message":"must have required property 'score'"}],"validationContext":"body"},"msg":"body/players/1 must have required property 'score'"}
{"level":30,"time":1746809044135,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2g","res":{"statusCode":400},"responseTime":0.7996320724487305,"msg":"request completed"}
{"level":30,"time":1746809044137,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2h","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 1.0 AND player_id = 1.0
    
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 4.0
ROLLBACK
        # Subtest: PUT /match-histories/:id returns 404 when player not in match
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 10 - PUT /match-histories/:id returns 404 when player not in match # time=3.549ms
        
{"level":30,"time":1746809044138,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2h","res":{"statusCode":404},"responseTime":1.510702133178711,"msg":"request completed"}
{"level":40,"time":1746809044139,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2h","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?\n    at Reply.send (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.updateMatchHistory (file:///home/vvaalant/Documents/ring7/new2/backend/controllers/matchHistoryController.js:187:32)\n    at preHandlerCallbackInner (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/match-histories/1\" (PUT)?"}
{"level":30,"time":1746809044141,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2i","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: PUT /match-histories/:id returns 400 when winner is not part of the players
            ok 1 - Status code should be 400
            ok 2 - should be equal
            1..2
        ok 11 - PUT /match-histories/:id returns 400 when winner is not part of the players # time=1.517ms
        
{"level":30,"time":1746809044141,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2i","res":{"statusCode":400},"responseTime":0.5393791198730469,"msg":"request completed"}
{"level":30,"time":1746809044142,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2j","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 1.0 AND player_id = 1.0
    
UPDATE players SET losses = losses + 1 WHERE id = 1.0
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 2.0

        UPDATE match_player_history SET score = 3.0 WHERE match_id = 1.0 AND player_id = 2.0
    
SELECT * FROM match_winner_history WHERE match_id = 1.0 AND winner_id = 2.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES (1.0, 2.0)
UPDATE players SET wins = wins + 1 WHERE id = 2.0
COMMIT
        # Subtest: PUT /match-histories/:id returns 200 on success
            ok 1 - Status code should be 200
            ok 2 - should be equal

            SELECT
                mh.id,
                mh.type,
                mh.tournament_id,
                mh.date,
                mh.round, 
                COALESCE(
                    (
                        SELECT mwh.winner_id
                        FROM match_winner_history mwh
                        WHERE mwh.match_id = mh.id
                        LIMIT 1
                    ), NULL
                ) AS winner_id,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id, 
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            WHERE mh.id = 1.0
        
            ok 3 - should be equivalent
            1..3
        ok 12 - PUT /match-histories/:id returns 200 on success # time=8.912ms
        
DELETE FROM match_history WHERE id = 1.0 AND user_id = 1.0
        # Subtest: DELETE /match-histories/:id returns 404 when unauthorized
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 13 - DELETE /match-histories/:id returns 404 when unauthorized # time=1.736ms
        
DELETE FROM match_history WHERE id = 100.0 AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 404 when match does not exist
            ok 1 - Status code should be 404
            ok 2 - should be equal
            1..2
        ok 14 - DELETE /match-histories/:id returns 404 when match does not exist # time=1.271ms
        
DELETE FROM match_history WHERE id = 1.0 AND user_id = 2.0
        # Subtest: DELETE /match-histories/:id returns 200 on success
            ok 1 - Status code should be 200
            ok 2 - should be equal
            1..2
        ok 15 - DELETE /match-histories/:id returns 200 on success # time=5.645ms
        
        1..15
    ok 5 - POST `/login` - Login as kim # time=277.742ms
    

            SELECT
                t.id AS tournament_id,
                t.name,
                t.status,
                t.current_round,
                t.winner_id,
                mh.id as match_id,
                mh.type,
                mh.date,
                mh.round,
                COALESCE(
                    (
                        SELECT json_group_array(
                            json_object(
                                'player_id', mph.player_id,
                                'score', mph.score
                            )
                        )
                        FROM match_player_history mph
                        WHERE mph.match_id = mh.id
                    ), '[]'
                ) AS players
            FROM match_history mh
            JOIN tournaments t ON t.id = mh.tournament_id
        
    # Subtest: GET `/tournaments` returns 404 when no tournament exist
        ok 1 - Status code 404
        ok 2 - should be equivalent
        1..2
    ok 6 - GET `/tournaments` returns 404 when no tournament exist # time=1.897ms
    
{"level":30,"time":1746809044149,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2j","res":{"statusCode":200},"responseTime":6.671863079071045,"msg":"request completed"}
{"level":30,"time":1746809044150,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2k","req":{"method":"GET","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044150,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2k","res":{"statusCode":200},"responseTime":0.5577888488769531,"msg":"request completed"}
{"level":30,"time":1746809044152,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2l","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044152,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2l","res":{"statusCode":404},"responseTime":0.8073210716247559,"msg":"request completed"}
{"level":30,"time":1746809044154,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2m","req":{"method":"DELETE","url":"/match-histories/100","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044154,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2m","res":{"statusCode":404},"responseTime":0.4856276512145996,"msg":"request completed"}
{"level":30,"time":1746809044155,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2n","req":{"method":"DELETE","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044160,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2n","res":{"statusCode":200},"responseTime":4.769400596618652,"msg":"request completed"}
{"level":30,"time":1746809044161,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2o","req":{"method":"GET","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044162,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2o","res":{"statusCode":404},"responseTime":0.7568659782409668,"msg":"request completed"}
{"level":30,"time":1746809044164,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2p","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'kim'
SELECT two_fa_enabled FROM users WHERE id = 2.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 2.0
            AND online_status = FALSE
        
{"level":30,"time":1746809044280,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2p","res":{"statusCode":200},"responseTime":116.0516710281372,"msg":"request completed"}
{"level":30,"time":1746809044280,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2q","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'lumi'
SELECT two_fa_enabled FROM users WHERE id = 1.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 1.0
            AND online_status = FALSE
        
{"level":30,"time":1746809044388,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2q","res":{"statusCode":200},"responseTime":108.3159499168396,"msg":"request completed"}
DELETE FROM 'players'
DELETE FROM sqlite_sequence WHERE name='players'
DELETE FROM 'match_history'
DELETE FROM sqlite_sequence WHERE name='match_history'
{"level":30,"time":1746809044402,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2r","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player1', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 1.0
{"level":30,"time":1746809044407,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2r","res":{"statusCode":201},"responseTime":4.988234996795654,"msg":"request completed"}
{"level":30,"time":1746809044407,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2s","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player2', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 2.0
{"level":30,"time":1746809044412,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2s","res":{"statusCode":201},"responseTime":5.3660101890563965,"msg":"request completed"}
{"level":30,"time":1746809044413,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2t","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player3', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 3.0
{"level":30,"time":1746809044419,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2t","res":{"statusCode":201},"responseTime":5.800591468811035,"msg":"request completed"}
{"level":30,"time":1746809044419,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2u","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player4', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 4.0
{"level":30,"time":1746809044425,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2u","res":{"statusCode":201},"responseTime":6.257436752319336,"msg":"request completed"}
{"level":30,"time":1746809044425,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2v","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player5', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 5.0
{"level":30,"time":1746809044431,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2v","res":{"statusCode":201},"responseTime":5.850057125091553,"msg":"request completed"}
{"level":30,"time":1746809044431,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2w","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player6', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 6.0
{"level":30,"time":1746809044437,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2w","res":{"statusCode":201},"responseTime":5.151284217834473,"msg":"request completed"}
{"level":30,"time":1746809044437,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2x","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player7', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 7.0
{"level":30,"time":1746809044442,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2x","res":{"statusCode":201},"responseTime":5.177469253540039,"msg":"request completed"}
{"level":30,"time":1746809044442,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2y","req":{"method":"POST","url":"/players","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT COUNT(*) AS count FROM players WHERE user_id = 2.0
INSERT INTO players (user_id, display_name, avatar_url) VALUES (2.0, 'Player8', NULL)
SELECT id, display_name, avatar_url, wins, losses, created_at FROM players WHERE id = 8.0
    # Subtest: POST `/login` - Login as kim
        ok 1 - should be equal
{"level":30,"time":1746809044447,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2y","res":{"statusCode":201},"responseTime":4.679417133331299,"msg":"request completed"}
{"level":30,"time":1746809044450,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2z","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/tournaments` returns 400 when creating tournament with 1 player
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 2 - POST `/tournaments` returns 400 when creating tournament with 1 player # time=3.814ms
        
{"level":30,"time":1746809044451,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2z","res":{"statusCode":400},"err":{"type":"Error","message":"body/player_ids must NOT have fewer than 3 items","stack":"Error: body/player_ids must NOT have fewer than 3 items\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/player_ids","schemaPath":"#/properties/player_ids/minItems","keyword":"minItems","params":{"limit":3},"message":"must NOT have fewer than 3 items"}],"validationContext":"body"},"msg":"body/player_ids must NOT have fewer than 3 items"}
{"level":30,"time":1746809044451,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-2z","res":{"statusCode":400},"responseTime":1.0215120315551758,"msg":"request completed"}
{"level":30,"time":1746809044452,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-30","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/tournaments` returns 400 when creating tournament with 2 players
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 3 - POST `/tournaments` returns 400 when creating tournament with 2 players # time=1.448ms
        
{"level":30,"time":1746809044453,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-30","res":{"statusCode":400},"err":{"type":"Error","message":"body/player_ids must NOT have fewer than 3 items","stack":"Error: body/player_ids must NOT have fewer than 3 items\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/player_ids","schemaPath":"#/properties/player_ids/minItems","keyword":"minItems","params":{"limit":3},"message":"must NOT have fewer than 3 items"}],"validationContext":"body"},"msg":"body/player_ids must NOT have fewer than 3 items"}
{"level":30,"time":1746809044453,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-30","res":{"statusCode":400},"responseTime":0.6344790458679199,"msg":"request completed"}
{"level":30,"time":1746809044454,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-31","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
SELECT * FROM tournaments WHERE name = 'T1'
SELECT * FROM players WHERE id = 1.0
SELECT * FROM players WHERE id = 2.0
SELECT * FROM players WHERE id = 100.0
ROLLBACK
TypeError: Transaction function cannot return a promise
    at sqliteTransaction [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mbetter-sqlite3[24m/lib/methods/transaction.js:67:10[90m)[39m
    at Object.createTournament [90m(file:///home/vvaalant/Documents/ring7/new2/backend/[39mcontrollers/tournamentController.js:219:22[90m)[39m
    at preHandlerCallbackInner [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at [90m/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:214:9
[90m    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)[39m
    at done [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:207:14[90m)[39m
        # Subtest: POST `/tournaments` returns 400 when creating tournament with invalid player
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 4 - POST `/tournaments` returns 400 when creating tournament with invalid player # time=2.953ms
        
{"level":30,"time":1746809044455,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-31","res":{"statusCode":400},"responseTime":1.5550079345703125,"msg":"request completed"}
{"level":40,"time":1746809044456,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-31","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?\n    at Reply.send (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.createTournament (file:///home/vvaalant/Documents/ring7/new2/backend/controllers/tournamentController.js:243:32)\n    at preHandlerCallbackInner (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?"}
{"level":30,"time":1746809044457,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-32","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/tournaments` returns 400 when missing player_ids
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 5 - POST `/tournaments` returns 400 when missing player_ids # time=1.506ms
        
{"level":30,"time":1746809044458,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-32","res":{"statusCode":400},"err":{"type":"Error","message":"body/player_ids must NOT have fewer than 3 items","stack":"Error: body/player_ids must NOT have fewer than 3 items\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/player_ids","schemaPath":"#/properties/player_ids/minItems","keyword":"minItems","params":{"limit":3},"message":"must NOT have fewer than 3 items"}],"validationContext":"body"},"msg":"body/player_ids must NOT have fewer than 3 items"}
{"level":30,"time":1746809044458,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-32","res":{"statusCode":400},"responseTime":0.6681408882141113,"msg":"request completed"}
{"level":30,"time":1746809044459,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-33","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        # Subtest: POST `/tournaments` returns 400 when missing name
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 6 - POST `/tournaments` returns 400 when missing name # time=1.441ms
        
{"level":30,"time":1746809044459,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-33","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'name'","stack":"Error: body must have required property 'name'\n    at defaultSchemaErrorFormatter (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/context.js:92:10)\n    at wrapValidationError (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:89:25)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)\n    at Parser.defaultJsonParser [as fn] (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:312:7)\n    at Request.onEnd (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:296:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"name"},"message":"must have required property 'name'"}],"validationContext":"body"},"msg":"body must have required property 'name'"}
{"level":30,"time":1746809044460,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-33","res":{"statusCode":400},"responseTime":0.6323747634887695,"msg":"request completed"}
{"level":30,"time":1746809044461,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-34","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
BEGIN
SELECT * FROM tournaments WHERE name = 'T1'
SELECT * FROM players WHERE id = 1.0
SELECT * FROM players WHERE id = 2.0
SELECT * FROM players WHERE id = 3.0
INSERT INTO tournaments (name, user_id) VALUES ('T1', 2.0)
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('tournament', 1.0, 0.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (1.0, 1.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (1.0, 3.0)
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('tournament', 1.0, 0.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (2.0, 2.0)
INSERT INTO match_winner_history (match_id, winner_id) VALUES (2.0, 2.0)

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id,
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

COMMIT
        # Subtest: POST `/tournaments` returns 200 when creating tournament with 3 players
            ok 1 - Status code 200
            ok 2 - should be equal
            ok 3 - should be equivalent
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM match_history WHERE tournament_id = 1.0 AND round = 0.0
SELECT * FROM match_winner_history WHERE match_id = 1.0
ROLLBACK
            # Subtest: PUT `/tournaments/:id` returns 404 when match not played
                ok 1 - Status code 404
                ok 2 - should be equal
                1..2
            ok 4 - PUT `/tournaments/:id` returns 404 when match not played # time=2.937ms
            
{"level":30,"time":1746809044468,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-34","res":{"statusCode":200},"responseTime":6.775300025939941,"msg":"request completed"}
{"level":30,"time":1746809044470,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-35","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044471,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-35","res":{"statusCode":404},"responseTime":1.606173038482666,"msg":"request completed"}
{"level":30,"time":1746809044473,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-36","req":{"method":"PUT","url":"/match-histories/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 1.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 1.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 1.0 AND player_id = 1.0
    
UPDATE players SET losses = losses + 1 WHERE id = 1.0
SELECT * FROM match_player_history WHERE match_id = 1.0 AND player_id = 3.0

        UPDATE match_player_history SET score = 5.0 WHERE match_id = 1.0 AND player_id = 3.0
    
SELECT * FROM match_winner_history WHERE match_id = 1.0 AND winner_id = 3.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES (1.0, 3.0)
UPDATE players SET wins = wins + 1 WHERE id = 3.0
COMMIT
            # Subtest: PUT `/tournaments/:id` returns 200 on success
                ok 1 - Status code 200
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM match_history WHERE tournament_id = 1.0 AND round = 0.0
SELECT * FROM match_winner_history WHERE match_id = 1.0
SELECT * FROM match_winner_history WHERE match_id = 2.0
INSERT INTO match_history (type, tournament_id, round, user_id) VALUES ('tournament', 1.0, 1.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (3.0, 2.0)
INSERT INTO match_player_history (match_id, player_id) VALUES (3.0, 3.0)
UPDATE tournaments SET current_round = current_round + 1 WHERE id = 1.0

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id,
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

COMMIT
                ok 2 - Status code 200
                ok 3 - should be equal
                ok 4 - should be equivalent
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 1.0
ROLLBACK
                # Subtest: PUT `/tournaments/:id` returns 404 unauthorized
                    ok 1 - Status code 404
                    ok 2 - should be equal
                    1..2
                ok 5 - PUT `/tournaments/:id` returns 404 unauthorized # time=2.221ms
                
{"level":30,"time":1746809044479,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-36","res":{"statusCode":200},"responseTime":6.640876770019531,"msg":"request completed"}
{"level":30,"time":1746809044480,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-37","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044487,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-37","res":{"statusCode":200},"responseTime":6.600616931915283,"msg":"request completed"}
{"level":30,"time":1746809044489,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-38","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809044489,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-38","res":{"statusCode":404},"responseTime":0.8470430374145508,"msg":"request completed"}
{"level":30,"time":1746809044491,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-39","req":{"method":"PUT","url":"/match-histories/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM match_history WHERE id = 3.0 AND user_id = 2.0
BEGIN
SELECT * FROM match_player_history WHERE match_id = 3.0 AND player_id = 2.0

        UPDATE match_player_history SET score = 2.0 WHERE match_id = 3.0 AND player_id = 2.0
    
SELECT * FROM match_player_history WHERE match_id = 3.0 AND player_id = 3.0

        UPDATE match_player_history SET score = 1.0 WHERE match_id = 3.0 AND player_id = 3.0
    
UPDATE players SET losses = losses + 1 WHERE id = 3.0
SELECT * FROM match_winner_history WHERE match_id = 3.0 AND winner_id = 2.0
INSERT INTO match_winner_history (match_id, winner_id) VALUES (3.0, 2.0)
UPDATE players SET wins = wins + 1 WHERE id = 2.0
COMMIT
                # Subtest: PUT `/tournaments/:id` returns 200 on tournament finish
                    ok 1 - Status code 200
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
SELECT * FROM match_history WHERE tournament_id = 1.0 AND round = 1.0
SELECT * FROM match_winner_history WHERE match_id = 3.0
UPDATE tournaments SET status = 'finished', winner_id = 2.0, current_round = 2.0 WHERE id = 1.0

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id,
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

COMMIT
SELECT display_name FROM players WHERE id = 2.0

        SELECT DISTINCT p.display_name
        FROM players p
          JOIN match_player_history mph ON mph.player_id = p.id
          JOIN match_history mh ON mh.id = mph.match_id
        WHERE mh.tournament_id = 1.0
{"level":30,"time":1746809044497,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-39","res":{"statusCode":200},"responseTime":6.416554927825928,"msg":"request completed"}
{"level":30,"time":1746809044498,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3a","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
Scores from blockchain: [
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Alice'[39m, [32m'Bob'[39m ],
    winner: [32m'Alice'[39m,
    timestamp: [33m1744637226[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Valle'[39m, [32m'Miyuki'[39m ],
    winner: [32m'Valle'[39m,
    timestamp: [33m1744637293[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Valle'[39m, [32m'Miyuki'[39m ],
    winner: [32m'Valle'[39m,
    timestamp: [33m1744639472[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Valle'[39m, [32m'Miyuki'[39m ],
    winner: [32m'Valle'[39m,
    timestamp: [33m1744639586[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Valle'[39m, [32m'Kim'[39m, [32m'Oliver'[39m, [32m'Miyuki'[39m, [32m'Lumi'[39m ],
    winner: [32m'Valle'[39m,
    timestamp: [33m1745851055[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746551255[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746553767[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746553791[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746553986[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746554230[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746554324[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player3'[39m, [32m'Player2'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746554558[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Playeri2'[39m, [32m'Playeri3'[39m, [32m'Playeri1'[39m ],
    winner: [32m'Playeri1'[39m,
    timestamp: [33m1746554703[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746631141[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746643238[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746705075[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746705380[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746705814[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746706024[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player3'[39m, [32m'Player2'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746706403[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746706430[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746707851[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746708934[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746709093[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player3'[39m, [32m'Player2'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746709189[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746709998[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746710453[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746711359[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746711554[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746712033[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player2'[39m, [32m'Player3'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746712409[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746712627[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746712870[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746712908[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746712933[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player2'[39m, [32m'Player3'[39m, [32m'Player1'[39m ],
    winner: [32m'Player1'[39m,
    timestamp: [33m1746712964[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player3'[39m, [32m'Player2'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746713710[39m
  },
  {
    tournamentId: [33m1[39m,
    players: [ [32m'Player1'[39m, [32m'Player3'[39m, [32m'Player2'[39m ],
    winner: [32m'Player2'[39m,
    timestamp: [33m1746809050[39m
  }
]
Transaction hash: 0xaaf6637808ea58b802d28e7215a09923df1171b16c4713849150b62458bdef01
{"level":30,"time":1746809054590,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3a","res":{"statusCode":200},"responseTime":10091.656312942505,"msg":"request completed"}
                    ok 2 - Status code 200
                    ok 3 - should be equal
                    1..3
                ok 6 - PUT `/tournaments/:id` returns 200 on tournament finish # time=10099.819ms
                
BEGIN
SELECT * FROM tournaments WHERE id = 1.0 AND user_id = 2.0
ROLLBACK
                # Subtest: PUT `/tournaments/:id` returns 400 when already finished
                    ok 1 - Status code 400
                    ok 2 - should be equal
                    1..2
                ok 7 - PUT `/tournaments/:id` returns 400 when already finished # time=2.076ms
                
                1..7
            ok 5 - PUT `/tournaments/:id` returns 200 on success # time=10121.204ms
            
            1..5
        ok 7 - POST `/tournaments` returns 200 when creating tournament with 3 players # time=10133.431ms
        
BEGIN
SELECT * FROM tournaments WHERE name = 'T1'
ROLLBACK
TypeError: Transaction function cannot return a promise
    at sqliteTransaction [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mbetter-sqlite3[24m/lib/methods/transaction.js:67:10[90m)[39m
    at Object.createTournament [90m(file:///home/vvaalant/Documents/ring7/new2/backend/[39mcontrollers/tournamentController.js:219:22[90m)[39m
    at preHandlerCallbackInner [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:161:24[90m)[39m
    at preHandlerCallback [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:129:5[90m)[39m
    at validationCompleted [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:119:5[90m)[39m
    at preValidationCallback [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:96:5[90m)[39m
    at handler [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/handleRequest.js:73:7[90m)[39m
    at [90m/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:214:9
[90m    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)[39m
    at done [90m(/home/vvaalant/Documents/ring7/new2/backend/[39mnode_modules/[4mfastify[24m/lib/contentTypeParser.js:207:14[90m)[39m
        # Subtest: POST `/tournaments` returns 400 on duplicate name
            ok 1 - Status code 400
            ok 2 - should be equal
            1..2
        ok 8 - POST `/tournaments` returns 400 on duplicate name # time=2.663ms
        

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id,
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 10.0

        # Subtest: GET `/tournaments/:id` returns 404 if tournament not found
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 9 - GET `/tournaments/:id` returns 404 if tournament not found # time=1.538ms
        

    SELECT
        t.id AS tournament_id,
        t.name,
        t.status,
        t.current_round,
        t.winner_id,
        mh.id as match_id,
        mh.type,
        mh.round,
        mh.date,
        COALESCE(
            (
                SELECT json_group_array(
                    json_object(
                        'player_id', mph.player_id,
                        'score', mph.score
                    )
                )
                FROM match_player_history mph
                WHERE mph.match_id = mh.id
            ), '[]'
        ) AS players
    FROM match_history mh
    JOIN tournaments t ON t.id = mh.tournament_id
    WHERE t.id = 1.0

        # Subtest: GET `/tournaments/:id` returns 200 on success
            ok 1 - Status code 200
            1..1
        ok 10 - GET `/tournaments/:id` returns 200 on success # time=1.264ms
        
DELETE FROM tournaments WHERE id = 1.0 and user_id = 1.0
        # Subtest: DELETE `/tournaments/:id` returns 404 unauthorized
            ok 1 - Status code 404
            ok 2 - should be equal
            1..2
        ok 11 - DELETE `/tournaments/:id` returns 404 unauthorized # time=1.642ms
        
DELETE FROM tournaments WHERE id = 1.0 and user_id = 2.0
        # Subtest: DELETE `/tournaments/:id` returns 200 on success
            ok 1 - Status code 200
            ok 2 - should be equal
            1..2
        ok 12 - DELETE `/tournaments/:id` returns 200 on success # time=6.383ms
        
        1..12
    ok 7 - POST `/login` - Login as kim # time=10445.931ms
    
{"level":30,"time":1746809054591,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3b","req":{"method":"PUT","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809054592,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3b","res":{"statusCode":400},"responseTime":0.9739999771118164,"msg":"request completed"}
{"level":30,"time":1746809054595,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3c","req":{"method":"POST","url":"/tournaments","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809054596,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3c","res":{"statusCode":400},"responseTime":0.9071249961853027,"msg":"request completed"}
{"level":40,"time":1746809054596,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3c","err":{"type":"FastifyError","message":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?","stack":"FastifyError: Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?\n    at Reply.send (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/reply.js:134:26)\n    at Object.createTournament (file:///home/vvaalant/Documents/ring7/new2/backend/controllers/tournamentController.js:243:32)\n    at preHandlerCallbackInner (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:161:24)\n    at preHandlerCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:129:5)\n    at validationCompleted (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:119:5)\n    at preValidationCallback (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:96:5)\n    at handler (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/handleRequest.js:73:7)\n    at /home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:214:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:211:14)\n    at done (/home/vvaalant/Documents/ring7/new2/backend/node_modules/fastify/lib/contentTypeParser.js:207:14)","code":"FST_ERR_REP_ALREADY_SENT","name":"FastifyError","statusCode":500},"msg":"Reply was already sent, did you forget to \"return reply\" in \"/tournaments\" (POST)?"}
{"level":30,"time":1746809054597,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3d","req":{"method":"GET","url":"/tournaments/10","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809054598,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3d","res":{"statusCode":404},"responseTime":0.6837239265441895,"msg":"request completed"}
{"level":30,"time":1746809054599,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3e","req":{"method":"GET","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809054600,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3e","res":{"statusCode":200},"responseTime":0.5753402709960938,"msg":"request completed"}
{"level":30,"time":1746809054601,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3f","req":{"method":"DELETE","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809054601,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3f","res":{"statusCode":404},"responseTime":0.7823171615600586,"msg":"request completed"}
{"level":30,"time":1746809054603,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3g","req":{"method":"DELETE","url":"/tournaments/1","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809054608,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3g","res":{"statusCode":200},"responseTime":5.386895656585693,"msg":"request completed"}
{"level":30,"time":1746809054610,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3h","req":{"method":"POST","url":"/register","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
INSERT INTO users (username, email, password_hash) VALUES ('alice2fa', 'alice2fa@example.com', '$2b$10$fY3f1QrYKUk7IRg6nSHNbevRx'/*+28 bytes*/)
SELECT id, username, email, online_status, two_fa_enabled, created_at FROM users WHERE id = 3.0
{"level":30,"time":1746809054724,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3h","res":{"statusCode":201},"responseTime":114.24994230270386,"msg":"request completed"}
    # Subtest: Two-Factor Authentication Suite
        ok 1 - POST /register → 201
{"level":30,"time":1746809054725,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3i","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'alice2fa'
SELECT two_fa_enabled FROM users WHERE id = 3.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 3.0
            AND online_status = FALSE
        
{"level":30,"time":1746809054840,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3i","res":{"statusCode":200},"responseTime":114.42811679840088,"msg":"request completed"}
        ok 2 - POST /login without 2FA → 200
UPDATE users SET two_fa_secret = 'OFFGYRZPII2WYI3RJZWUC3KDFZOXE3DG'/*+20 bytes*/ WHERE id = 3.0
{"level":30,"time":1746809054840,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3j","req":{"method":"GET","url":"/api/2fa/setup","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809054925,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3j","res":{"statusCode":200},"responseTime":84.2564148902893,"msg":"request completed"}
        ok 3 - GET /api/2fa/setup → 200
        ok 4 - returns QR data-URL
SELECT two_fa_secret FROM users WHERE id = 3.0
        ok 5 - Secret stored in DB
SELECT two_fa_secret FROM users WHERE id = 3.0
UPDATE users SET two_fa_enabled = 1 WHERE id = 3.0
        ok 6 - POST /api/2fa/verify → 200
        ok 7 - should be equal
SELECT * FROM users WHERE id = 3.0
        ok 8 - two_fa_enabled is true
{"level":30,"time":1746809054926,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3k","req":{"method":"POST","url":"/api/2fa/verify","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809054933,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3k","res":{"statusCode":200},"responseTime":6.218955993652344,"msg":"request completed"}
{"level":30,"time":1746809054933,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3l","req":{"method":"GET","url":"/users/3","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809054934,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3l","res":{"statusCode":200},"responseTime":0.5175728797912598,"msg":"request completed"}
{"level":30,"time":1746809054934,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3m","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'alice2fa'
SELECT two_fa_enabled FROM users WHERE id = 3.0
{"level":30,"time":1746809055046,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3m","res":{"statusCode":206},"responseTime":111.53269481658936,"msg":"request completed"}
        ok 9 - POST /login with 2FA → 206
        ok 10 - should be equal
{"level":30,"time":1746809055046,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3n","req":{"method":"POST","url":"/login/2fa","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT two_fa_secret FROM users WHERE id = 3.0
        ok 11 - POST /login/2fa with wrong code → 400
        ok 12 - should be equal
{"level":30,"time":1746809055048,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3n","res":{"statusCode":400},"responseTime":1.1507148742675781,"msg":"request completed"}
{"level":30,"time":1746809055048,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3o","req":{"method":"POST","url":"/login/2fa","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT two_fa_secret FROM users WHERE id = 3.0
        ok 13 - POST /login/2fa → 200
        ok 14 - JWT returned
SELECT two_fa_secret FROM users WHERE id = 3.0
UPDATE users SET two_fa_secret = NULL, two_fa_enabled = 0 WHERE id = 3.0
        ok 15 - DELETE /api/2fa → 200
        ok 16 - should be equal
{"level":30,"time":1746809055049,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3o","res":{"statusCode":200},"responseTime":0.9228019714355469,"msg":"request completed"}
{"level":30,"time":1746809055050,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3p","req":{"method":"DELETE","url":"/api/2fa","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1746809055055,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3p","res":{"statusCode":200},"responseTime":5.444054126739502,"msg":"request completed"}
{"level":30,"time":1746809055056,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3q","req":{"method":"POST","url":"/login","host":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
SELECT * FROM users WHERE username = 'alice2fa'
SELECT two_fa_enabled FROM users WHERE id = 3.0
UPDATE users
            SET online_status = TRUE
            WHERE id = 3.0
            AND online_status = FALSE
        
{"level":30,"time":1746809055164,"pid":2757585,"hostname":"c2r5p7.hive.fi","reqId":"req-3q","res":{"statusCode":200},"responseTime":108.52235889434814,"msg":"request completed"}
        ok 17 - POST /login after disabling → 200
        ok 18 - returns token & username
        1..18
    ok 8 - Two-Factor Authentication Suite # time=555.578ms
    
    1..8
🧹 testPong.db wiped clean for next test
ok 1 - All Test # time=13430.328ms

1..1
